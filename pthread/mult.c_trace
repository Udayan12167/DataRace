mov rdi, rsp
call 0x7fab2cd9fa40
push rbp
mov rbp, rsp
push r15
push r14
push r13
push r12
push rbx
mov rbx, rdi
sub rsp, 0x68
rdtsc 
shl rdx, 0x20
mov eax, eax
or rdx, rax
mov rax, qword ptr [rip+0x21e40a]
mov qword ptr [rip+0x21e22b], rdx
lea rdx, ptr [rip+0x21e3fc]
mov r13, rdx
sub r13, qword ptr [rip+0x21e582]
test rax, rax
mov qword ptr [rip+0x21ef80], rdx
mov qword ptr [rip+0x21ef69], r13
jz 0x7fab2cd9fb22
lea rcx, ptr [rip+0x21e5c4]
mov r12, 0x3800003d8
mov r10, 0x37ffffb78
mov esi, 0x6fffffff
mov r9d, 0x6ffffdff
mov r11d, 0x6ffffeff
add r12, rcx
add r10, rcx
mov r8d, 0x31
mov edi, 0x70000021
jmp 0x7fab2cd9faef
cmp rax, 0x21
jbe 0x7fab2cd9fad8
mov rcx, rsi
sub rcx, rax
cmp rcx, 0xf
jnbe 0x7fab2cd9fd00
mov rcx, rdi
sub rcx, rax
lea rax, ptr [rip+0x21ef26]
mov qword ptr [rax+rcx*8], rdx
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jnz 0x7fab2cd9faef
lea rcx, ptr [rip+0x21ef59]
mov qword ptr [rcx+rax*8], rdx
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jz 0x7fab2cd9fb22
cmp rax, 0x21
jbe 0x7fab2cd9fad8
mov rcx, rsi
sub rcx, rax
cmp rcx, 0xf
jnbe 0x7fab2cd9fd00
lea ecx, ptr [rax+rax*1]
sar ecx, 0x1
cmp ecx, 0xfffffffc
jbe 0x7fab2cd9fd28
mov eax, r8d
sub eax, ecx
mov rcx, rax
lea rax, ptr [rip+0x21ed1f]
mov qword ptr [rax+rcx*8], rdx
jmp 0x7fab2cd9fae3
mov rcx, r9
sub rcx, rax
cmp rcx, 0xb
jnbe 0x7fab2cd9fe98
neg rax
mov qword ptr [r10+rax*8], rdx
jmp 0x7fab2cd9fae3
mov rcx, r11
sub rcx, rax
cmp rcx, 0xa
jnbe 0x7fab2cd9fae3
neg rax
mov qword ptr [r12+rax*8], rdx
jmp 0x7fab2cd9fae3
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jz 0x7fab2cd9fb22
cmp rax, 0x21
jbe 0x7fab2cd9fad8
mov rcx, rsi
sub rcx, rax
cmp rcx, 0xf
jnbe 0x7fab2cd9fd00
mov rcx, rdi
sub rcx, rax
lea rax, ptr [rip+0x21ef26]
mov qword ptr [rax+rcx*8], rdx
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jnz 0x7fab2cd9faef
test r13, r13
jz 0x7fab2cd9fbab
mov rax, qword ptr [rip+0x21ef26]
test rax, rax
jz 0x7fab2cd9fb3b
test r13, r13
jz 0x7fab2cd9fbab
mov rax, qword ptr [rip+0x21ef26]
test rax, rax
jz 0x7fab2cd9fb3b
add qword ptr [rax+0x8], r13
mov rax, qword ptr [rip+0x21ef0e]
test rax, rax
jz 0x7fab2cd9fb4b
add qword ptr [rax+0x8], r13
mov rax, qword ptr [rip+0x21ef0e]
test rax, rax
jz 0x7fab2cd9fb5b
add qword ptr [rax+0x8], r13
mov rax, qword ptr [rip+0x21ef06]
test rax, rax
jz 0x7fab2cd9fb6b
add qword ptr [rax+0x8], r13
mov rax, qword ptr [rip+0x21eefe]
test rax, rax
jz 0x7fab2cd9fb7b
add qword ptr [rax+0x8], r13
mov rax, qword ptr [rip+0x21ef6e]
test rax, rax
jz 0x7fab2cd9fb8b
add qword ptr [rax+0x8], r13
mov rax, qword ptr [rip+0x21f02e]
test rax, rax
jz 0x7fab2cd9fb9b
add qword ptr [rax+0x8], r13
mov rax, qword ptr [rip+0x21f0ee]
test rax, rax
jz 0x7fab2cd9fbab
add qword ptr [rax+0x8], r13
mov rcx, qword ptr [rip+0x21ef26]
test rcx, rcx
jz 0x7fab2cd9fbc2
cmp qword ptr [rcx+0x8], 0x7
jnz 0x7fab2cda0078
mov rax, qword ptr [rip+0x21eea7]
test rax, rax
jz 0x7fab2cd9fbe0
mov rdx, qword ptr [rip+0x21eeab]
cmp qword ptr [rdx+0x8], 0x18
jnz 0x7fab2cda0097
mov rdx, qword ptr [rip+0x21ef81]
test rdx, rdx
jz 0x7fab2cd9fbfa
test qword ptr [rdx+0x8], 0xfffffffffffffffe
jnz 0x7fab2cda0132
mov rdx, qword ptr [rip+0x21ef27]
test rdx, rdx
jz 0x7fab2cd9fc14
test qword ptr [rdx+0x8], 0xfffffffffffffff7
jnz 0x7fab2cda0113
cmp qword ptr [rip+0x21ef04], 0x0
jnz 0x7fab2cda00f4
cmp qword ptr [rip+0x21ef04], 0x0
jnz 0x7fab2cda00f4
cmp qword ptr [rip+0x21ee86], 0x0
jnz 0x7fab2cda00d5
test r13, r13
jnz 0x7fab2cd9fd48
test rax, rax
jz 0x7fab2cda0007
mov r8, qword ptr [rax+0x8]
mov rax, qword ptr [rip+0x21ed1c]
mov r9, qword ptr [rip+0x21ee15]
mov rdi, qword ptr [rax+0x8]
mov r12, r8
mov rdx, r8
test r9, r9
lea rsi, ptr [rdi+r8*1]
jz 0x7fab2cd9fda0
mov rax, rdi
mov rdx, 0xaaaaaaaaaaaaaaab
mul rdx
mov rax, qword ptr [r9+0x8]
shr rdx, 0x4
cmp rdx, rax
cmovnbe rdx, rax
lea rax, ptr [rdx+rdx*2]
mov rdx, r8
lea r12, ptr [r8+rax*8]
test rcx, rcx
jz 0x7fab2cd9fdd2
mov rax, qword ptr [rip+0x21ec9c]
mov rcx, qword ptr [rip+0x21ed3d]
mov rax, qword ptr [rax+0x8]
mov r9, rax
add r9, qword ptr [rcx+0x8]
mov rcx, rdi
sub rcx, rax
cmp r9, rsi
cmovz rdi, rcx
add rax, r8
lea rsi, ptr [rax+rdi*1]
mov rax, qword ptr [rip+0x21ec8f]
cmp rdx, r12
mov rdi, qword ptr [rax+0x8]
jnb 0x7fab2cd9fe0b
nop word ptr [rax+rax*1], ax
mov rax, r13
add rax, qword ptr [rdx]
cmp dword ptr [rdx+0x8], 0x8
jnz 0x7fab2cda0018
mov rcx, r13
add rcx, qword ptr [rdx+0x10]
add rdx, 0x18
cmp rdx, r12
mov qword ptr [rax], rcx
jb 0x7fab2cd9fde8
mov rax, r13
add rax, qword ptr [rdx]
cmp dword ptr [rdx+0x8], 0x8
jnz 0x7fab2cda0018
mov rcx, r13
add rcx, qword ptr [rdx+0x10]
add rdx, 0x18
cmp rdx, r12
mov qword ptr [rax], rcx
jb 0x7fab2cd9fde8
cmp qword ptr [rip+0x21edad], 0x0
jz 0x7fab2cda00b6
cmp rsi, r12
lea r8, ptr [rip+0x166d9]
jbe 0x7fab2cd9fc47
nop dword ptr [rax], eax
mov r15, qword ptr [r12+0x8]
mov rcx, r13
add rcx, qword ptr [r12]
mov rax, r15
mov r15d, r15d
shr rax, 0x20
test r15, r15
lea rax, ptr [rax+rax*2]
lea r14, ptr [rdi+rax*8]
jz 0x7fab2cd9ffbb
test r14, r14
jz 0x7fab2cda0000
movzx edx, byte ptr [r14+0x4]
mov rax, qword ptr [r14+0x8]
add rax, qword ptr [rip+0x21eb88]
and edx, 0xf
cmp dl, 0xa
jz 0x7fab2cda0037
sub r15, 0x6
cmp r15, 0x1e
jnbe 0x7fab2cd9ffbb
movsxd rdx, dword ptr [r8+r15*4]
add rdx, r8
jmp rdx
add rax, qword ptr [r12+0x10]
mov qword ptr [rcx], rax
add r12, 0x18
cmp rsi, r12
jnbe 0x7fab2cd9fe30
jmp 0x7fab2cd9fc47
mov r15, qword ptr [r12+0x8]
mov rcx, r13
add rcx, qword ptr [r12]
mov rax, r15
mov r15d, r15d
shr rax, 0x20
test r15, r15
lea rax, ptr [rax+rax*2]
lea r14, ptr [rdi+rax*8]
jz 0x7fab2cd9ffbb
test r14, r14
jz 0x7fab2cda0000
movzx edx, byte ptr [r14+0x4]
mov rax, qword ptr [r14+0x8]
add rax, qword ptr [rip+0x21eb88]
and edx, 0xf
cmp dl, 0xa
jz 0x7fab2cda0037
sub r15, 0x6
cmp r15, 0x1e
jnbe 0x7fab2cd9ffbb
movsxd rdx, dword ptr [r8+r15*4]
add rdx, r8
jmp rdx
or byte ptr [rip+0x21f0be], 0x4
cmp qword ptr [rip+0x21e11a], 0x0
jz 0x7fab2cd9feb8
lea rdi, ptr [rip+0x21ed95]
call 0x7fab2cda6930
rdtsc 
mov edi, edx
mov esi, eax
rdtsc 
mov r9d, edx
mov r8d, eax
rdtsc 
mov dword ptr [rbp-0x60], edx
mov dword ptr [rbp-0x48], eax
rdtsc 
mov ecx, edx
mov dword ptr [rbp-0x50], eax
rdtsc 
mov dword ptr [rbp-0x80], edx
mov dword ptr [rbp-0x68], eax
rdtsc 
mov dword ptr [rbp-0x90], edx
mov dword ptr [rbp-0x6c], eax
rdtsc 
mov r11d, edx
mov r10d, eax
rdtsc 
mov r13d, edx
mov r12d, eax
rdtsc 
mov r15d, edx
mov r14d, eax
rdtsc 
shl r9, 0x20
shl rdi, 0x20
shl rdx, 0x20
or rdi, rsi
mov eax, eax
or r9, r8
or rdx, rax
sub r9, rdi
mov eax, dword ptr [rbp-0x50]
mov rdi, qword ptr [rbp-0x60]
mov esi, dword ptr [rbp-0x48]
shl rcx, 0x20
shl r15, 0x20
shl r13, 0x20
shl r11, 0x20
or r15, r14
or r13, r12
or r11, r10
shl rdi, 0x20
or rcx, rax
sub rdx, r15
mov rax, rdi
sub r13, r11
mov edi, dword ptr [rbp-0x68]
or rax, rsi
mov rsi, qword ptr [rbp-0x90]
sub rcx, rax
cmp r9, rcx
cmovbe rcx, r9
shl rsi, 0x20
mov rax, rsi
mov esi, dword ptr [rbp-0x6c]
or rax, rsi
mov rsi, qword ptr [rbp-0x80]
shl rsi, 0x20
or rsi, rdi
sub rax, rsi
cmp rcx, rax
cmovbe rax, rcx
cmp r13, rax
cmovnbe r13, rax
cmp rdx, r13
cmovnbe rdx, r13
mov qword ptr [rip+0x21ddd3], rdx
jmp 0x7fab2cd9fc5c
lea rdi, ptr [rip+0x21ed95]
call 0x7fab2cda6930
mov rax, qword ptr [rdi+0x298]
test rax, rax
jz 0x7fab2cda6993
mov rax, qword ptr [rax+0x8]
mov ecx, dword ptr [rax]
mov dword ptr [rdi+0x2ec], ecx
mov edx, dword ptr [rax+0x8]
mov r8d, dword ptr [rax+0x4]
lea esi, ptr [rdx-0x1]
test esi, edx
jnz 0x7fab2cda69bf
mov dword ptr [rdi+0x2f0], esi
lea rsi, ptr [rax+0x10]
mov eax, dword ptr [rax+0xc]
add edx, edx
mov qword ptr [rdi+0x2f8], rsi
mov dword ptr [rdi+0x2f4], eax
lea rax, ptr [rsi+rdx*4]
mov edx, r8d
shl rdx, 0x2
mov qword ptr [rdi+0x300], rax
lea rax, ptr [rax+rcx*4]
sub rax, rdx
mov qword ptr [rdi+0x308], rax
ret 
lea rax, ptr [rip+0x21ed89]
mov qword ptr [rip+0x21edaa], rax
lea rax, ptr [rip-0x4c7d]
mov qword ptr [rip+0x21f0b4], rax
lea rax, ptr [rip+0x21f53d]
mov qword ptr [rip+0x21f0ae], rax
lea rax, ptr [rip+0x167f7]
mov qword ptr [rip+0x21f0a8], rax
rdtsc 
lea rsi, ptr [rip-0x3399]
shl rdx, 0x20
mov eax, eax
or rdx, rax
mov rdi, rbx
mov qword ptr [rip+0x21e1a4], rbp
mov qword ptr [rip+0x21ed05], rdx
call 0x7fab2cdb2380
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x28
mov rax, qword ptr [rdi]
mov qword ptr [rip+0x20bac8], rdi
add rdi, 0x8
mov qword ptr [rsp+0x8], rsi
mov qword ptr [rip+0x20ba58], rdi
mov dword ptr [rip+0x20ba5a], eax
cdqe 
lea rdx, ptr [rdi+rax*8+0x8]
mov qword ptr [rip+0x20cdbc], rdx
cmp qword ptr [rdx], 0x0
jz 0x7fab2cdb23d2
nop word ptr [rax+rax*1], ax
add rdx, 0x8
cmp qword ptr [rdx], 0x0
jnz 0x7fab2cdb23c8
lea rax, ptr [rdx+0x8]
mov rdx, qword ptr [rdx+0x8]
lea rbx, ptr [rip-0x16111]
mov qword ptr [rip+0x20b8dc], 0x0
mov qword ptr [rip+0x20b935], rax
mov qword ptr [rsp+0x18], rbx
test rdx, rdx
jz 0x7fab2cdb2601
add rdx, 0x8
cmp qword ptr [rdx], 0x0
jnz 0x7fab2cdb23c8
lea rax, ptr [rdx+0x8]
mov rdx, qword ptr [rdx+0x8]
lea rbx, ptr [rip-0x16111]
mov qword ptr [rip+0x20b8dc], 0x0
mov qword ptr [rip+0x20b935], rax
mov qword ptr [rsp+0x18], rbx
test rdx, rdx
jz 0x7fab2cdb2601
movzx r8d, word ptr [rip+0x20b907]
mov r15, qword ptr [rip+0x20b8c8]
lea rcx, ptr [rip+0x48c9]
mov r13d, dword ptr [rip+0x20ba4a]
mov r11, qword ptr [rip+0x20b8f3]
mov r14, rbx
mov r10, qword ptr [rip+0x20b959]
mov r9d, dword ptr [rip+0x20b8c2]
xor r12d, r12d
mov rdi, qword ptr [rip+0x20b938]
mov rsi, qword ptr [rip+0x20ba11]
xor ebp, ebp
xor ebx, ebx
nop dword ptr [rax+rax*1], eax
sub rdx, 0x3
cmp rdx, 0x1e
jnbe 0x7fab2cdb2470
movsxd rdx, dword ptr [rcx+rdx*4]
add rdx, rcx
jmp rdx
mov rdi, qword ptr [rax+0x8]
nop dword ptr [rax], eax
add rax, 0x10
mov rdx, qword ptr [rax]
test rdx, rdx
jnz 0x7fab2cdb2450
mov qword ptr [rip+0x20b855], r15
mov qword ptr [rsp+0x18], r14
mov dword ptr [rip+0x20b9d9], r13d
mov qword ptr [rip+0x20b832], r12
mov qword ptr [rip+0x20b87b], r11
mov qword ptr [rip+0x20b8e4], r10
mov dword ptr [rip+0x20b84d], r9d
mov word ptr [rip+0x20b85d], r8w
mov qword ptr [rip+0x20b8be], rdi
mov qword ptr [rip+0x20b997], rsi
xor edi, edi
call 0x7fab2cdb3140
sub rdx, 0x3
cmp rdx, 0x1e
jnbe 0x7fab2cdb2470
movsxd rdx, dword ptr [rcx+rdx*4]
add rdx, rcx
jmp rdx
mov r11, qword ptr [rax+0x8]
jmp 0x7fab2cdb2470
add rax, 0x10
mov rdx, qword ptr [rax]
test rdx, rdx
jnz 0x7fab2cdb2450
mov qword ptr [rip+0x20b855], r15
mov qword ptr [rsp+0x18], r14
mov dword ptr [rip+0x20b9d9], r13d
mov qword ptr [rip+0x20b832], r12
mov qword ptr [rip+0x20b87b], r11
mov qword ptr [rip+0x20b8e4], r10
mov dword ptr [rip+0x20b84d], r9d
mov word ptr [rip+0x20b85d], r8w
mov qword ptr [rip+0x20b8be], rdi
mov qword ptr [rip+0x20b997], rsi
xor edi, edi
call 0x7fab2cdb3140
mov r15, qword ptr [rax+0x8]
jmp 0x7fab2cdb2470
mov r9d, dword ptr [rax+0x8]
jmp 0x7fab2cdb2470
mov rbx, qword ptr [rax+0x8]
jmp 0x7fab2cdb2470
add rax, 0x10
mov rdx, qword ptr [rax]
test rdx, rdx
jnz 0x7fab2cdb2450
mov qword ptr [rip+0x20b855], r15
mov qword ptr [rsp+0x18], r14
mov dword ptr [rip+0x20b9d9], r13d
mov qword ptr [rip+0x20b832], r12
mov qword ptr [rip+0x20b87b], r11
mov qword ptr [rip+0x20b8e4], r10
mov dword ptr [rip+0x20b84d], r9d
mov word ptr [rip+0x20b85d], r8w
mov qword ptr [rip+0x20b8be], rdi
mov qword ptr [rip+0x20b997], rsi
xor edi, edi
call 0x7fab2cdb3140
mov ebp, dword ptr [rax+0x8]
jmp 0x7fab2cdb2470
mov r14, qword ptr [rax+0x8]
jmp 0x7fab2cdb2470
mov r13d, dword ptr [rax+0x8]
jmp 0x7fab2cdb2470
mov rsi, qword ptr [rax+0x8]
jmp 0x7fab2cdb2470
mov r12, qword ptr [rax+0x8]
jmp 0x7fab2cdb2470
mov ecx, 0xc
mov rsi, rdi
mov eax, ecx
syscall 
cmp rax, 0xfffffffffffff000
mov rdx, rax
jnbe 0x7fab2cdb3180
mov qword ptr [rip+0x20bfca], rax
xor eax, eax
cmp rsi, rdx
jnbe 0x7fab2cdb3170
ret 
mov rdi, qword ptr [rip+0x20b7f9]
test rdi, rdi
jz 0x7fab2cdb24e8
cmp byte ptr [rdi], 0x0
jnz 0x7fab2cdb25f0
mov qword ptr [rip+0x20b7e0], 0x0
xor edi, edi
call 0x7fab2cdb31a0
call 0x7fab2cdb4c50
mov rcx, rdi
and ecx, 0x7
mov rax, rdi
jz 0x7fab2cdb4c70
neg ecx
add ecx, 0x8
cmp byte ptr [rax], 0x0
jz 0x7fab2cdb4d35
inc rax
dec ecx
jnz 0x7fab2cdb4c60
cmp byte ptr [rax], 0x0
jz 0x7fab2cdb4d35
inc rax
dec ecx
jnz 0x7fab2cdb4c60
mov r8, 0xfefefefefefefeff
nop word ptr [rax+rax*1], ax
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
sub rax, rdi
ret 
mov qword ptr [rip+0x20b6d4], rax
jmp 0x7fab2cdb24e8
xor edi, edi
call 0x7fab2cdb31a0
push rbp
mov rbp, rdi
push rbx
sub rsp, 0x8
mov rbx, qword ptr [rip+0x20bf78]
test rbx, rbx
jz 0x7fab2cdb31e8
mov eax, dword ptr [rip+0x20bf4d]
test eax, eax
jnz 0x7fab2cdb31e8
cmp rbp, 0x0
jz 0x7fab2cdb31d9
add rsp, 0x8
mov rax, rbx
pop rbx
pop rbp
ret 
lea rdx, ptr [rip+0x20ccd2]
cmp rax, rdx
jz 0x7fab2cdb260a
mov eax, dword ptr [rip+0x20b963]
test eax, eax
jnz 0x7fab2cdb2625
mov rax, qword ptr [rsp+0x8]
lea rdx, ptr [rsp+0x18]
mov esi, ebp
mov rdi, rbx
mov rcx, qword ptr [rip+0x20b805]
call rax
push rbp
lea rax, ptr [rip-0x5f8]
mov rbp, rsp
push r15
push r14
push r13
mov r13, rcx
push r12
mov r12, rdi
push rbx
sub rsp, 0xd8
mov qword ptr [rip+0x2220b8], rax
lea rax, ptr [rip+0xa591]
cmp dword ptr [rip+0x221522], 0x1
mov qword ptr [rbp-0xa8], rdx
lea rdx, ptr [rip+0x19b4c]
mov qword ptr [rip+0x22266d], rax
lea rax, ptr [rip-0x632]
mov dword ptr [rbp-0x98], esi
mov qword ptr [rip+0x2225f9], rax
lea rax, ptr [rip-0x636]
mov qword ptr [rip+0x2225f3], rax
lea rax, ptr [rip+0x11d3c]
mov qword ptr [rip+0x2225ed], rax
mov rax, qword ptr [rip+0x2227e6]
mov qword ptr [rbp-0x60], rax
sbb eax, eax
xor r14d, r14d
not eax
xor ebx, ebx
and eax, 0x9
add rax, rdx
mov qword ptr [rip+0x2213a4], rax
lea rax, ptr [rbp-0x60]
mov qword ptr [rbp-0xa0], rax
lea rax, ptr [rbp-0x50]
mov qword ptr [rbp-0xb0], rax
lea rax, ptr [rbp-0x70]
mov qword ptr [rbp-0xb8], rax
mov rdi, qword ptr [rbp-0xa0]
call 0x7fab2cdb29e0
mov rdx, qword ptr [rdi]
mov rax, qword ptr [rdx]
test rax, rax
jz 0x7fab2cdb2a01
nop dword ptr [rax+rax*1], eax
cmp byte ptr [rax], 0x4c
jz 0x7fab2cdb2a04
add rdx, 0x8
mov rax, qword ptr [rdx]
test rax, rax
jnz 0x7fab2cdb29f0
cmp byte ptr [rax], 0x4c
jz 0x7fab2cdb2a04
add rdx, 0x8
mov rax, qword ptr [rdx]
test rax, rax
jnz 0x7fab2cdb29f0
xor eax, eax
ret 
cmp byte ptr [rax+0x1], 0x44
jnz 0x7fab2cdb29f5
cmp byte ptr [rax+0x2], 0x5f
data16 nop 
jnz 0x7fab2cdb29f5
add rdx, 0x8
add rax, 0x3
mov qword ptr [rdi], rdx
ret 
add rdx, 0x8
mov rax, qword ptr [rdx]
test rax, rax
jnz 0x7fab2cdb29f0
xor eax, eax
ret 
test rax, rax
mov r15, rax
jz 0x7fab2cd9cdd0
movzx eax, byte ptr [rax]
cmp al, 0x3d
jz 0x7fab2cd9c9cd
test al, al
jz 0x7fab2cd9c9cd
mov eax, dword ptr [rip+0x221092]
test eax, eax
jnz 0x7fab2cd9f9b9
mov eax, dword ptr [rip+0x220e9c]
test eax, eax
jz 0x7fab2cd9cead
test r14, r14
jz 0x7fab2cd9cead
mov rcx, qword ptr [rbp-0xa8]
lea rax, ptr [rip-0xbeb]
cmp qword ptr [rcx], rax
jnz 0x7fab2cd9d14b
mov rax, qword ptr [rip+0x220f35]
lea rcx, ptr [rbp-0x68]
lea r14, ptr [rip+0x1a346]
mov r15d, 0x7
mov qword ptr [rbp-0xb0], rcx
mov rax, qword ptr [rax]
mov qword ptr [rip+0x221b13], rax
mov eax, dword ptr [rip+0x220f15]
cmp eax, 0x1
jle 0x7fab2cd9cf40
mov rdx, qword ptr [rip+0x220f01]
mov rdi, r14
mov rcx, r15
mov r10, qword ptr [rdx+0x8]
mov rsi, r10
rep cmpsb byte ptr [rsi], byte ptr [rdi]
lea rsi, ptr [rip+0x1a227]
xor r9d, r9d
xor ecx, ecx
xor edx, edx
mov r8d, 0x20000000
mov rdi, rsi
call 0x7fab2cda6a70
push r15
push r14
push r13
push r12
mov r12, r9
push rbp
push rbx
mov rbx, rcx
sub rsp, 0x38
mov qword ptr [rsp+0x8], rdi
mov rdi, rsi
mov dword ptr [rsp+0x24], edx
mov qword ptr [rsp+0x18], rsi
mov dword ptr [rsp+0x10], r8d
call 0x7fab2cdb4c50
mov r13d, dword ptr [rip+0x217342]
mov rbp, rax
lea rdx, ptr [rax+0x1]
mov r15d, r13d
shl r15, 0x4
test r13d, r13d
jnz 0x7fab2cda6add
mov eax, dword ptr [rsp+0x10]
and eax, 0x20000000
cmp eax, 0x1
sbb r15, r15
not r15
and r15d, 0x100
test eax, eax
mov eax, 0x10
cmovnz r13d, eax
lea rdi, ptr [r15+rbp*1+0x491]
mov esi, 0x1
mov qword ptr [rsp+0x28], rdx
call 0x7fab2cd9bab0
jmp qword ptr [rip+0x22257a]
mov rcx, rdi
mov eax, 0xffffffff
mov rdx, rcx
or rdx, rsi
imul rdi, rsi
cmp rdx, rax
jnbe 0x7fab2cdb2bdc
jmp 0x7fab2cd9ba90
jmp qword ptr [rip+0x22258a]
mov rsi, rdi
mov edi, 0x8
jmp 0x7fab2cd9ba80
jmp qword ptr [rip+0x222592]
push rbp
push rbx
mov rbx, rsi
sub rsp, 0x8
mov rax, qword ptr [rip+0x20c668]
test rax, rax
jz 0x7fab2cdb2b70
mov rdx, qword ptr [rip+0x20c660]
mov rcx, rax
lea rax, ptr [rdx+rdi*1-0x1]
neg rdi
and rax, rdi
lea rdx, ptr [rax+rbx*1]
mov qword ptr [rip+0x20c647], rax
cmp rdx, rcx
jnb 0x7fab2cdb2ae9
mov rcx, rax
neg rcx
cmp rbx, rcx
jb 0x7fab2cdb2b68
mov rax, qword ptr [rip+0x20b161]
lea rdx, ptr [rip+0x20c64a]
lea rcx, ptr [rdx+rax*1-0x1]
neg rax
and rcx, rax
mov qword ptr [rip+0x20c588], rcx
jmp 0x7fab2cdb2ac3
lea rax, ptr [rdx+rdi*1-0x1]
neg rdi
and rax, rdi
lea rdx, ptr [rax+rbx*1]
mov qword ptr [rip+0x20c647], rax
cmp rdx, rcx
jnb 0x7fab2cdb2ae9
mov rcx, rax
neg rcx
cmp rbx, rcx
jb 0x7fab2cdb2b68
mov rdx, qword ptr [rip+0x20b1e8]
lea rsi, ptr [rdx+rbx*1-0x1]
mov rax, rdx
neg rax
and rsi, rax
mov rbp, rsi
jz 0x7fab2cdb2b95
mov rbx, rdx
mov rdx, rax
jmp 0x7fab2cdb2b49
mov qword ptr [rip+0x20c5c0], rdx
mov qword ptr [rip+0x20c5c9], rbx
add rsp, 0x8
mov rax, rdx
pop rbx
pop rbp
ret 
test rax, rax
mov r14, rax
jz 0x7fab2cda6da1
lea r15, ptr [rax+r15*1+0x470]
mov rdx, qword ptr [rsp+0x28]
mov rsi, qword ptr [rsp+0x18]
mov qword ptr [r14+0x28], rax
lea rdi, ptr [r15+0x20]
mov qword ptr [rax+0x2c8], r15
lea rax, ptr [r15+0x8]
mov qword ptr [r14+0x38], rax
call 0x7fab2cdb5ba0
cmp rdx, 0x20
mov rax, rdi
jnb 0x7fab2cdb5c20
test dl, 0x1
jz 0x7fab2cdb5bb9
movzx ecx, byte ptr [rsi]
mov byte ptr [rdi], cl
inc rsi
inc rdi
test dl, 0x2
jz 0x7fab2cdb5bd0
test dl, 0x4
jz 0x7fab2cdb5be1
mov ecx, dword ptr [rsi]
mov dword ptr [rdi], ecx
add rsi, 0x4
add rdi, 0x4
test dl, 0x8
jz 0x7fab2cdb5bf4
mov rcx, qword ptr [rsi]
mov qword ptr [rdi], rcx
add rsi, 0x8
add rdi, 0x8
and edx, 0xf0
jz 0x7fab2cdb5c1b
test dl, 0x8
jz 0x7fab2cdb5bf4
mov rcx, qword ptr [rsi]
mov qword ptr [rdi], rcx
add rsi, 0x8
add rdi, 0x8
and edx, 0xf0
jz 0x7fab2cdb5c1b
nop dword ptr [rax], eax
mov rcx, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov qword ptr [rdi], rcx
mov qword ptr [rdi+0x8], r8
sub edx, 0x10
lea rsi, ptr [rsi+0x10]
lea rdi, ptr [rdi+0x10]
jnz 0x7fab2cdb5c00
and edx, 0xf0
jz 0x7fab2cdb5c1b
nop dword ptr [rax], eax
mov rcx, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov qword ptr [rdi], rcx
mov qword ptr [rdi+0x8], r8
sub edx, 0x10
lea rsi, ptr [rsi+0x10]
lea rdi, ptr [rdi+0x10]
jnz 0x7fab2cdb5c00
ret 
ret 
mov qword ptr [r15+0x8], rax
add rbp, rax
mov rax, qword ptr [rsp+0x8]
mov dword ptr [r15+0x18], 0x1
movzx r15d, byte ptr [rsp+0x24]
cmp byte ptr [rax], 0x0
cmovnz rbp, rax
movzx eax, byte ptr [r14+0x314]
and r15d, 0x3
mov qword ptr [r14+0x8], rbp
and eax, 0xfffffffc
or eax, r15d
test byte ptr [rip+0x217155], 0x1
mov byte ptr [r14+0x314], al
jz 0x7fab2cda6d18
test r13d, r13d
mov qword ptr [r14+0x2d8], rbx
mov qword ptr [r14+0x30], r12
jz 0x7fab2cda6bb0
lea eax, ptr [r13-0x1]
mov rdx, r14
shl rax, 0x4
lea rax, ptr [r14+rax*1+0x10]
nop dword ptr [rax], eax
mov qword ptr [rdx+0x470], r14
add rdx, 0x10
cmp rdx, rax
jnz 0x7fab2cda6ba0
mov dword ptr [r14+0x3cc], 0x1
jmp 0x7fab2cda6b79
test r13d, r13d
mov qword ptr [r14+0x2d8], rbx
mov qword ptr [r14+0x30], r12
jz 0x7fab2cda6bb0
lea eax, ptr [r13-0x1]
mov rdx, r14
shl rax, 0x4
lea rax, ptr [r14+rax*1+0x10]
nop dword ptr [rax], eax
mov qword ptr [rdx+0x470], r14
add rdx, 0x10
cmp rdx, rax
jnz 0x7fab2cda6ba0
lea rax, ptr [r14+0x358]
lea rdx, ptr [rip+0x2174a2]
mov qword ptr [r14+0x378], 0x4
mov qword ptr [r14+0x380], rax
lea rax, ptr [r12+r12*8]
shl rax, 0x4
mov rax, qword ptr [rdx+rax*1]
xor edx, edx
test rax, rax
jz 0x7fab2cda6bf5
mov qword ptr [rdx+0x470], r14
add rdx, 0x10
cmp rdx, rax
jnz 0x7fab2cda6ba0
lea rax, ptr [r14+0x358]
lea rdx, ptr [rip+0x2174a2]
mov qword ptr [r14+0x378], 0x4
mov qword ptr [r14+0x380], rax
lea rax, ptr [r12+r12*8]
shl rax, 0x4
mov rax, qword ptr [rdx+rax*1]
xor edx, edx
test rax, rax
jz 0x7fab2cda6bf5
add rax, 0x2b8
mov edx, 0x1
mov qword ptr [r14+0x358], rax
test rbx, rbx
jnz 0x7fab2cda6c03
test rbx, rbx
jnz 0x7fab2cda6c03
jmp 0x7fab2cda6d28
mov rbx, r14
test edx, edx
lea rcx, ptr [rbx+0x2b8]
jz 0x7fab2cda6c1e
jmp 0x7fab2cda6ce8
xor eax, eax
mov qword ptr [r14+rax*1+0x358], rcx
lea rax, ptr [r14+0x2b8]
mov qword ptr [r14+0x388], rax
mov rax, qword ptr [rsp+0x8]
movzx ebp, byte ptr [rax]
mov rax, r14
test bpl, bpl
jz 0x7fab2cda6cd2
mov rdi, qword ptr [rsp+0x8]
xor r12d, r12d
call 0x7fab2cdb4c50
add rsp, 0x38
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
test rax, rax
mov r15, rax
jz 0x7fab2cd9f73c
mov qword ptr [rax+0x2a0], r12
movzx eax, word ptr [rbp-0x98]
xor esi, esi
mov rdi, r15
mov word ptr [r15+0x2b0], ax
mov rax, qword ptr [rbp-0xa8]
mov rax, qword ptr [rax]
mov qword ptr [r15+0x2a8], rax
call 0x7fab2cda69e0
push rbp
mov rbp, rdi
lea rdi, ptr [rip+0x217fa5]
push rbx
mov rbx, rsi
sub rsp, 0x8
call qword ptr [rip+0x21856f]
add dword ptr [rdi+0x4], 0x1
ret 
lea rax, ptr [rbx+rbx*8]
lea rcx, ptr [rip+0x21765c]
shl rax, 0x4
add rax, rcx
mov rdx, qword ptr [rax]
test rdx, rdx
jnz 0x7fab2cda6a1b
jmp 0x7fab2cda6a68
mov qword ptr [rax], rbp
jmp 0x7fab2cda6a2c
lea rax, ptr [rbx+rbx*8]
lea rdi, ptr [rip+0x217f59]
shl rax, 0x4
add dword ptr [rcx+rax*1+0x8], 0x1
mov rax, qword ptr [rip+0x217f71]
mov qword ptr [rbp+0x468], rax
add rax, 0x1
mov qword ptr [rip+0x217f5f], rax
mov rax, qword ptr [rip+0x218510]
add rsp, 0x8
pop rbx
pop rbp
jmp rax
sub dword ptr [rdi+0x4], 0x1
ret 
cmp qword ptr [rip+0x220eb5], r15
jnz 0x7fab2cd9f97b
xor r14d, r14d
mov eax, dword ptr [rbp-0x98]
add dword ptr [r15+0x310], 0x1
mov qword ptr [r15+0x348], 0x0
mov qword ptr [r15+0x350], 0x0
mov qword ptr [r15+0x340], 0xffffffffffffffff
lea rdx, ptr [rax*8]
shl rax, 0x6
sub rax, rdx
lea rdi, ptr [r12+rax*1]
cmp r12, rdi
jnb 0x7fab2cd9f730
mov rsi, qword ptr [rip+0x220ad2]
mov rax, r12
xor r13d, r13d
neg rsi
jmp 0x7fab2cd9d239
mov edx, dword ptr [rax]
cmp edx, 0x6
jz 0x7fab2cd9dad7
jbe 0x7fab2cd9d211
cmp edx, 0x6474e551
jz 0x7fab2cd9db01
mov rdx, r12
sub rdx, qword ptr [rax+0x10]
mov qword ptr [r15], rdx
jmp 0x7fab2cd9d22c
add rax, 0x38
cmp rax, rdi
jnb 0x7fab2cd9d2c7
mov edx, dword ptr [rax]
cmp edx, 0x6
jz 0x7fab2cd9dad7
jbe 0x7fab2cd9d211
cmp edx, 0x2
jz 0x7fab2cd9dc30
cmp edx, 0x3
jz 0x7fab2cd9dbb3
cmp edx, 0x1
jz 0x7fab2cd9db59
lea rcx, ptr [rip+0x2214a6]
mov rdx, qword ptr [rax+0x10]
add rdx, qword ptr [r15]
mov r13d, 0x1
mov qword ptr [rip+0x220e62], rcx
xor ecx, ecx
cmp qword ptr [rip+0x220e30], 0x0
mov qword ptr [rip+0x221481], rdx
jnz 0x7fab2cd9d22c
movzx r8d, byte ptr [rdx]
test r8b, r8b
jz 0x7fab2cd9dc03
add rdx, 0x1
cmp r8b, 0x2f
movzx r8d, byte ptr [rdx]
cmovz rcx, rdx
test r8b, r8b
jnz 0x7fab2cd9dbee
mov rcx, qword ptr [rax+0x10]
mov rdx, qword ptr [r15]
mov r8, rcx
and r8, rsi
add r8, rdx
cmp r8, qword ptr [r15+0x340]
jnb 0x7fab2cd9db79
mov qword ptr [r15+0x340], r8
add rcx, qword ptr [rax+0x28]
add rdx, rcx
cmp rdx, qword ptr [r15+0x348]
jbe 0x7fab2cd9db90
mov qword ptr [r15+0x348], rdx
test byte ptr [rax+0x4], 0x1
jz 0x7fab2cd9d22c
cmp rdx, qword ptr [r15+0x350]
jbe 0x7fab2cd9d22c
mov qword ptr [r15+0x350], rdx
jmp 0x7fab2cd9d22c
add rcx, qword ptr [rax+0x28]
add rdx, rcx
cmp rdx, qword ptr [r15+0x348]
jbe 0x7fab2cd9db90
mov qword ptr [r15+0x348], rdx
test byte ptr [rax+0x4], 0x1
jz 0x7fab2cd9d22c
cmp rdx, qword ptr [r15+0x350]
jbe 0x7fab2cd9d22c
mov rdx, qword ptr [rax+0x10]
add rdx, qword ptr [r15]
mov qword ptr [r15+0x10], rdx
jmp 0x7fab2cd9d22c
cmp edx, 0x6474e551
jz 0x7fab2cd9db01
cmp edx, 0x6474e552
jz 0x7fab2cd9dae6
cmp edx, 0x7
jnz 0x7fab2cd9d22c
mov edx, dword ptr [rax+0x4]
mov dword ptr [rip+0x221476], edx
jmp 0x7fab2cd9d22c
mov rdx, qword ptr [rax+0x10]
mov qword ptr [r15+0x458], rdx
mov rdx, qword ptr [rax+0x28]
mov qword ptr [r15+0x460], rdx
jmp 0x7fab2cd9d22c
mov rdx, qword ptr [r15+0x348]
mov rax, qword ptr [r15+0x350]
mov rcx, qword ptr [r15+0x418]
test rcx, rcx
jz 0x7fab2cd9d2eb
add rcx, qword ptr [r15]
mov qword ptr [r15+0x418], rcx
test rdx, rdx
jnz 0x7fab2cd9d2fb
mov qword ptr [r15+0x348], 0xffffffffffffffff
test rax, rax
jnz 0x7fab2cd9d30b
test rdx, rdx
jnz 0x7fab2cd9d2fb
mov qword ptr [r15+0x348], 0xffffffffffffffff
test rax, rax
jnz 0x7fab2cd9d30b
mov qword ptr [r15+0x350], 0xffffffffffffffff
cmp qword ptr [rip+0x22171d], 0x0
jz 0x7fab2cd9f706
test rax, rax
jnz 0x7fab2cd9d30b
mov qword ptr [r15+0x350], 0xffffffffffffffff
cmp qword ptr [rip+0x22171d], 0x0
jz 0x7fab2cd9f706
mov rax, qword ptr [rip+0x221788]
test rax, rax
jz 0x7fab2cd9d38a
cmp qword ptr [rip+0x22171d], 0x0
jz 0x7fab2cd9f706
mov rax, qword ptr [rip+0x221788]
test rax, rax
jz 0x7fab2cd9d38a
mov rdx, qword ptr [rip+0x221734]
mov r12, qword ptr [rdx+0x8]
mov rdx, qword ptr [rip+0x2216f9]
add r12, qword ptr [rax+0x8]
mov rdi, qword ptr [rdx]
mov qword ptr [rbp-0x98], rdx
mov rsi, r12
call 0x7fab2cdb4c20
mov al, byte ptr [rdi]
cmp al, byte ptr [rsi]
jnz 0x7fab2cdb4c33
inc rdi
inc rsi
test al, al
jnz 0x7fab2cdb4c20
xor eax, eax
ret 
mov eax, 0x1
mov ecx, 0xffffffff
cmovb eax, ecx
ret 
test eax, eax
mov rdx, qword ptr [rbp-0x98]
jz 0x7fab2cd9d38a
mov qword ptr [rip+0x221cb5], 0x0
cmp qword ptr [rdx+0x8], 0x0
mov qword ptr [rip+0x221ca1], r12
mov dword ptr [rip+0x221ca7], 0x1
jnz 0x7fab2cd9f6e7
lea rax, ptr [rip+0x221c8a]
mov qword ptr [rdx+0x8], rax
test byte ptr [rip+0x22197b], 0x4
jz 0x7fab2cd9f6c8
test r14b, r14b
jnz 0x7fab2cd9d578
mov rdx, qword ptr [r15+0x10]
test rdx, rdx
jz 0x7fab2cd9d570
mov rax, qword ptr [rdx]
lea rcx, ptr [r15+0x40]
test rax, rax
jz 0x7fab2cd9d43e
mov r14d, 0x6fffffff
mov r12d, 0x6ffffdff
mov r11d, 0x6ffffeff
mov r10, 0x37ffffa00
mov r9, 0x37ffff1a0
mov r8d, 0x31
mov edi, 0x70000021
jmp 0x7fab2cd9d409
cmp rax, 0x21
jbe 0x7fab2cd9d3f9
mov rsi, r14
sub rsi, rax
cmp rsi, 0xf
jbe 0x7fab2cd9d3f0
lea esi, ptr [rax+rax*1]
sar esi, 0x1
cmp esi, 0xfffffffc
jbe 0x7fab2cd9dcd0
mov qword ptr [rcx+rax*8], rdx
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jz 0x7fab2cd9d43e
cmp rax, 0x21
jbe 0x7fab2cd9d3f9
mov rsi, r14
sub rsi, rax
cmp rsi, 0xf
jbe 0x7fab2cd9d3f0
lea esi, ptr [rax+rax*1]
sar esi, 0x1
cmp esi, 0xfffffffc
jbe 0x7fab2cd9dcd0
mov eax, r8d
sub eax, esi
mov qword ptr [rcx+rax*8], rdx
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jnz 0x7fab2cd9d409
mov rax, qword ptr [r15]
test rax, rax
jz 0x7fab2cd9d4b7
mov rsi, r12
sub rsi, rax
cmp rsi, 0xb
jnbe 0x7fab2cd9dcec
neg rax
lea rax, ptr [rcx+rax*8]
mov qword ptr [rax+r9*1], rdx
jmp 0x7fab2cd9d3fd
mov rsi, r11
sub rsi, rax
cmp rsi, 0xa
jnbe 0x7fab2cd9d3fd
neg rax
lea rax, ptr [rcx+rax*8]
mov qword ptr [rax+r10*1], rdx
jmp 0x7fab2cd9d3fd
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jz 0x7fab2cd9d43e
cmp rax, 0x21
jbe 0x7fab2cd9d3f9
mov rsi, r14
sub rsi, rax
cmp rsi, 0xf
jbe 0x7fab2cd9d3f0
mov rsi, rdi
sub rsi, rax
mov rax, rsi
mov qword ptr [rcx+rax*8], rdx
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jz 0x7fab2cd9d43e
cmp rax, 0x21
jbe 0x7fab2cd9d3f9
mov rsi, r14
sub rsi, rax
cmp rsi, 0xf
jbe 0x7fab2cd9d3f0
mov rax, qword ptr [r15]
test rax, rax
jz 0x7fab2cd9d4b7
mov rdx, qword ptr [r15+0x60]
test rdx, rdx
jz 0x7fab2cd9d453
add qword ptr [rdx+0x8], rax
mov rdx, qword ptr [r15+0x58]
test rdx, rdx
jz 0x7fab2cd9d460
mov rax, qword ptr [r15+0xe0]
test rax, rax
jz 0x7fab2cd9d4ce
cmp qword ptr [rax+0x8], 0x7
jnz 0x7fab2cd9def3
cmp qword ptr [r15+0x78], 0x0
jz 0x7fab2cd9d4e7
mov rax, qword ptr [r15+0x88]
cmp qword ptr [rax+0x8], 0x18
jnz 0x7fab2cd9ded4
mov rax, qword ptr [r15+0x130]
test rax, rax
jz 0x7fab2cd9d522
mov rdx, qword ptr [rax+0x8]
test dl, 0x2
mov dword ptr [r15+0x3d8], edx
jz 0x7fab2cd9d50a
mov rax, qword ptr [r15+0x170]
test rax, rax
jz 0x7fab2cd9d55b
test byte ptr [rip+0x22078b], 0x40
mov rax, qword ptr [rax+0x8]
mov dword ptr [r15+0x3d4], eax
mov edx, eax
jnz 0x7fab2cd9de6d
and edx, 0x1
jz 0x7fab2cd9d55b
cmp qword ptr [r15+0x128], 0x0
jz 0x7fab2cd9d570
mov qword ptr [r15+0xb8], 0x0
mov rdi, r15
call 0x7fab2cda6930
mov rdi, r15
call 0x7fab2cda6930
mov eax, ebx
cmp rax, 0x2
mov qword ptr [rbp-0xb0], rax
jz 0x7fab2cd9f6a4
cmp qword ptr [rip+0x2207e5], 0x0
jz 0x7fab2cd9f502
lea rsi, ptr [rip+0x19dd9]
xor r9d, r9d
xor r8d, r8d
xor ecx, ecx
mov edx, 0x1
mov rdi, rsi
call 0x7fab2cda6a70
lea rax, ptr [r14+0x358]
lea rdx, ptr [rip+0x2174a2]
mov qword ptr [r14+0x378], 0x4
mov qword ptr [r14+0x380], rax
lea rax, ptr [r12+r12*8]
shl rax, 0x4
mov rax, qword ptr [rdx+rax*1]
xor edx, edx
test rax, rax
jz 0x7fab2cda6bf5
add rax, 0x2b8
mov edx, 0x1
mov qword ptr [r14+0x358], rax
test rbx, rbx
jnz 0x7fab2cda6c03
jmp 0x7fab2cda6d28
mov rax, qword ptr [r14+0x358]
cmp rcx, rax
jz 0x7fab2cda6c28
test byte ptr [rsp+0x10], 0x8
jz 0x7fab2cda6db4
mov qword ptr [r14+0x360], rax
xor eax, eax
jmp 0x7fab2cda6c20
mov eax, 0x8
jmp 0x7fab2cda6c20
mov qword ptr [r14+rax*1+0x358], rcx
lea rax, ptr [r14+0x2b8]
mov qword ptr [r14+0x388], rax
mov rax, qword ptr [rsp+0x8]
movzx ebp, byte ptr [rax]
mov rax, r14
test bpl, bpl
jz 0x7fab2cda6cd2
mov rdi, qword ptr [rsp+0x8]
xor r12d, r12d
call 0x7fab2cdb4c50
test rax, rax
mov r12, rax
jz 0x7fab2cd9f502
mov rdx, qword ptr [rip+0x2207b0]
xor ecx, ecx
movzx edi, word ptr [rdx+0x38]
mov rax, rdx
add rax, qword ptr [rdx+0x20]
test rdi, rdi
mov qword ptr [r12+0x2a0], rax
mov word ptr [r12+0x2b0], di
jnz 0x7fab2cd9d613
jmp 0x7fab2cd9d641
mov esi, dword ptr [rax]
cmp esi, 0x2
jnz 0x7fab2cd9d5f0
mov rsi, qword ptr [rax+0x10]
add rcx, 0x1
add rax, 0x38
mov qword ptr [r12+0x10], rsi
mov rsi, qword ptr [rax-0x10]
shr rsi, 0x4
cmp rcx, rdi
mov word ptr [r12+0x2b2], si
jb 0x7fab2cd9d613
mov qword ptr [r12+0x340], rdx
sub rdx, qword ptr [r12]
add qword ptr [r12+0x348], rdx
add qword ptr [r12+0x350], rdx
mov rcx, rdx
add rcx, qword ptr [r12+0x10]
mov qword ptr [r12], rdx
test rcx, rcx
mov qword ptr [r12+0x10], rcx
jz 0x7fab2cd9d99e
cmp esi, 0x1
jz 0x7fab2cd9db0f
cmp esi, 0x7
nop dword ptr [rax], eax
jz 0x7fab2cd9f4e3
add rcx, 0x1
add rax, 0x38
cmp rcx, rdi
jnb 0x7fab2cd9d641
cmp qword ptr [r12], 0x0
mov rsi, qword ptr [rax+0x10]
jnz 0x7fab2cd9db1e
mov qword ptr [r12], rsi
add rsi, qword ptr [rax+0x28]
cmp rsi, qword ptr [r12+0x348]
jb 0x7fab2cd9db34
mov qword ptr [r12+0x348], rsi
test byte ptr [rax+0x4], 0x1
jz 0x7fab2cd9d606
cmp rsi, qword ptr [r12+0x350]
jb 0x7fab2cd9d606
mov qword ptr [r12+0x350], rsi
jmp 0x7fab2cd9d606
add rcx, 0x1
add rax, 0x38
cmp rcx, rdi
jnb 0x7fab2cd9d641
mov esi, dword ptr [rax]
cmp esi, 0x2
jnz 0x7fab2cd9d5f0
mov rsi, qword ptr [rax+0x10]
add rcx, 0x1
add rax, 0x38
mov qword ptr [r12+0x10], rsi
mov rsi, qword ptr [rax-0x10]
shr rsi, 0x4
cmp rcx, rdi
mov word ptr [r12+0x2b2], si
jb 0x7fab2cd9d613
mov qword ptr [r12+0x340], rdx
sub rdx, qword ptr [r12]
add qword ptr [r12+0x348], rdx
add qword ptr [r12+0x350], rdx
mov rcx, rdx
add rcx, qword ptr [r12+0x10]
mov qword ptr [r12], rdx
test rcx, rcx
mov qword ptr [r12+0x10], rcx
jz 0x7fab2cd9d99e
mov rax, qword ptr [rcx]
lea rsi, ptr [r12+0x40]
test rax, rax
jz 0x7fab2cd9d702
mov r11d, 0x6fffffff
mov r13d, 0x6ffffdff
mov r14d, 0x6ffffeff
mov r10, 0x37ffffa00
mov r9, 0x37ffff1a0
mov r8d, 0x31
jmp 0x7fab2cd9d6cd
cmp rax, 0x21
jbe 0x7fab2cd9d6bd
mov rdi, r11
sub rdi, rax
cmp rdi, 0xf
jbe 0x7fab2cd9d6b2
lea edi, ptr [rax+rax*1]
sar edi, 0x1
cmp edi, 0xfffffffc
jbe 0x7fab2cd9dc6f
mov qword ptr [rsi+rax*8], rcx
add rcx, 0x10
mov rax, qword ptr [rcx]
test rax, rax
jz 0x7fab2cd9d702
cmp rax, 0x21
jbe 0x7fab2cd9d6bd
mov rdi, r11
sub rdi, rax
cmp rdi, 0xf
jbe 0x7fab2cd9d6b2
mov edi, 0x70000021
sub rdi, rax
mov rax, rdi
mov qword ptr [rsi+rax*8], rcx
add rcx, 0x10
mov rax, qword ptr [rcx]
test rax, rax
jz 0x7fab2cd9d702
cmp rax, 0x21
jbe 0x7fab2cd9d6bd
mov rdi, r11
sub rdi, rax
cmp rdi, 0xf
jbe 0x7fab2cd9d6b2
test rdx, rdx
jz 0x7fab2cd9d8d7
mov rax, qword ptr [r12+0x60]
test rax, rax
jz 0x7fab2cd9df12
mov rcx, qword ptr [rax]
mov r11d, 0x70
mov r9d, 0x60
mov r8d, 0x50
mov edi, 0x40
mov esi, 0x30
mov qword ptr [rip+0x2204c1], rcx
mov rcx, rdx
add rcx, qword ptr [rax+0x8]
lea rax, ptr [rip+0x2204b3]
mov qword ptr [r12+0x60], rax
mov eax, 0x10
mov qword ptr [rip+0x2204aa], rcx
mov ecx, 0x20
mov r10, qword ptr [r12+0x58]
test r10, r10
jz 0x7fab2cd9d79f
mov r10, qword ptr [r12+0x68]
test r10, r10
jz 0x7fab2cd9d7d8
lea r11, ptr [rip+0x220450]
add rax, r11
mov r11, qword ptr [r10]
mov qword ptr [rax], r11
mov r11, rdx
add r11, qword ptr [r10+0x8]
mov qword ptr [rax+0x8], r11
mov qword ptr [r12+0x68], rax
mov rax, rcx
mov rcx, rsi
mov rsi, rdi
mov rdi, r8
mov r8, r9
mov r9, qword ptr [r12+0x70]
test r9, r9
jz 0x7fab2cd9d80e
lea r10, ptr [rip+0x220417]
mov r11, rdx
add r11, qword ptr [r9+0x8]
add rax, r10
mov r10, qword ptr [r9]
mov qword ptr [rax+0x8], r11
mov qword ptr [rax], r10
mov qword ptr [r12+0x70], rax
mov rax, rcx
mov rcx, rsi
mov rsi, rdi
mov rdi, r8
mov r8, qword ptr [r12+0x78]
test r8, r8
jz 0x7fab2cd9d841
mov rdi, qword ptr [r12+0xf8]
test rdi, rdi
jz 0x7fab2cd9d877
lea r8, ptr [rip+0x2203ab]
mov r11, rdx
add r11, qword ptr [rdi+0x8]
add rax, r8
mov r8, qword ptr [rdi]
mov qword ptr [rax+0x8], r11
mov qword ptr [rax], r8
mov qword ptr [r12+0xf8], rax
mov rax, rcx
mov rcx, rsi
mov rsi, qword ptr [r12+0x1c8]
test rsi, rsi
jz 0x7fab2cd9d8aa
lea rdi, ptr [rip+0x220375]
add rax, rdi
mov rdi, qword ptr [rsi]
mov qword ptr [rax], rdi
mov rdi, rdx
add rdi, qword ptr [rsi+0x8]
mov qword ptr [rax+0x8], rdi
mov qword ptr [r12+0x1c8], rax
mov rax, rcx
mov rcx, qword ptr [r12+0x298]
test rcx, rcx
jz 0x7fab2cd9d8d7
mov rsi, qword ptr [r12+0x1c8]
test rsi, rsi
jz 0x7fab2cd9d8aa
lea rdi, ptr [rip+0x220375]
add rax, rdi
mov rdi, qword ptr [rsi]
mov qword ptr [rax], rdi
mov rdi, rdx
add rdi, qword ptr [rsi+0x8]
mov qword ptr [rax+0x8], rdi
mov qword ptr [r12+0x1c8], rax
mov rax, rcx
mov rcx, qword ptr [r12+0x298]
test rcx, rcx
jz 0x7fab2cd9d8d7
lea rsi, ptr [rip+0x220342]
add rdx, qword ptr [rcx+0x8]
add rax, rsi
mov rsi, qword ptr [rcx]
mov qword ptr [rax+0x8], rdx
mov qword ptr [rax], rsi
mov qword ptr [r12+0x298], rax
mov rax, qword ptr [r12+0xe0]
test rax, rax
jz 0x7fab2cd9d8ef
mov rax, qword ptr [r12+0xe0]
test rax, rax
jz 0x7fab2cd9d8ef
cmp qword ptr [rax+0x8], 0x7
jnz 0x7fab2cd9def3
cmp qword ptr [r12+0x78], 0x0
jz 0x7fab2cd9d90a
cmp qword ptr [r12+0x78], 0x0
jz 0x7fab2cd9d90a
mov rax, qword ptr [r12+0x88]
cmp qword ptr [rax+0x8], 0x18
jnz 0x7fab2cd9ded4
mov rax, qword ptr [r12+0x130]
test rax, rax
jz 0x7fab2cd9d94a
mov rax, qword ptr [r12+0x130]
test rax, rax
jz 0x7fab2cd9d94a
mov rdx, qword ptr [rax+0x8]
test dl, 0x2
mov dword ptr [r12+0x3d8], edx
jz 0x7fab2cd9d930
mov qword ptr [r12+0xc0], rax
test dl, 0x4
jz 0x7fab2cd9d93d
mov rax, qword ptr [r12+0x170]
test rax, rax
jz 0x7fab2cd9d987
test byte ptr [rip+0x220362], 0x40
mov rax, qword ptr [rax+0x8]
mov dword ptr [r12+0x3d4], eax
mov edx, eax
jnz 0x7fab2cd9deab
and edx, 0x1
jz 0x7fab2cd9d987
cmp qword ptr [r12+0x128], 0x0
jz 0x7fab2cd9d99e
mov qword ptr [r12+0xb8], 0x0
mov rdi, r12
call 0x7fab2cda6930
mov rdi, r12
call 0x7fab2cda6930
mov rax, qword ptr [rdi+0x60]
test rax, rax
jz 0x7fab2cda69be
mov rax, qword ptr [rax+0x8]
mov edx, dword ptr [rax]
add rax, 0x8
mov qword ptr [rdi+0x308], rax
lea rax, ptr [rax+rdx*4]
mov dword ptr [rdi+0x2ec], edx
mov qword ptr [rdi+0x300], rax
ret 
mov rax, qword ptr [r12+0x388]
lea rdx, ptr [r12+0x28]
or byte ptr [r12+0x314], 0x4
mov dword ptr [r12+0x3cc], 0x1
mov dword ptr [rax+0x8], 0x1
mov qword ptr [rax], rdx
mov rax, qword ptr [r12+0xb0]
test rax, rax
jz 0x7fab2cd9da3e
mov rdx, qword ptr [r12+0x68]
mov r13, qword ptr [rdx+0x8]
add r13, qword ptr [rax+0x8]
mov rdi, r13
call 0x7fab2cdb4c50
xor rdx, rcx
or rdx, r8
inc rdx
jnz 0x7fab2cdb4cf0
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
xor rdx, rcx
or rdx, r8
inc rdx
jnz 0x7fab2cdb4cf0
sub rax, 0x8
test cl, cl
jz 0x7fab2cdb4d35
inc rax
test ch, ch
jz 0x7fab2cdb4d35
inc rax
test ecx, 0xff0000
jz 0x7fab2cdb4d35
inc rax
test ecx, 0xff000000
jz 0x7fab2cdb4d35
inc rax
shr rcx, 0x20
test cl, cl
jz 0x7fab2cdb4d35
inc rax
test ch, ch
jz 0x7fab2cdb4d35
lea r14, ptr [rax+0x1]
mov rdi, r14
call 0x7fab2cd9ba90
test rax, rax
jz 0x7fab2cd9dc50
mov r8, qword ptr [r12+0x38]
mov rsi, r13
mov rdx, r14
mov rdi, rax
mov qword ptr [rbp-0x98], r8
call 0x7fab2cdb5ba0
test dl, 0x2
jz 0x7fab2cdb5bd0
movzx ecx, word ptr [rsi]
mov word ptr [rdi], cx
add rsi, 0x2
add rdi, 0x2
nop dword ptr [rax], eax
test dl, 0x4
jz 0x7fab2cdb5be1
mov ecx, dword ptr [rsi]
mov dword ptr [rdi], ecx
add rsi, 0x4
add rdi, 0x4
test dl, 0x8
jz 0x7fab2cdb5bf4
mov r13d, dword ptr [rip+0x220296]
mov r8, qword ptr [rbp-0x98]
test r13d, r13d
mov qword ptr [r8], rax
jz 0x7fab2cd9da3e
mov qword ptr [r12+0x8], rax
xor esi, esi
mov rdi, r12
call 0x7fab2cda69e0
xor esi, esi
mov rdi, r12
call 0x7fab2cda69e0
mov rax, qword ptr [rdx+0x18]
test rax, rax
jnz 0x7fab2cda6a18
mov qword ptr [rbp+0x20], rdx
mov qword ptr [rdx+0x18], rbp
lea rax, ptr [rbx+rbx*8]
lea rdi, ptr [rip+0x217f59]
shl rax, 0x4
add dword ptr [rcx+rax*1+0x8], 0x1
mov rax, qword ptr [rip+0x217f71]
mov qword ptr [rbp+0x468], rax
add rax, 0x1
mov qword ptr [rip+0x217f5f], rax
mov rax, qword ptr [rip+0x218510]
add rsp, 0x8
pop rbx
pop rbp
jmp rax
cmp qword ptr [r12+0x18], 0x0
jnz 0x7fab2cd9f4c4
cmp r15, qword ptr [r12+0x20]
jnz 0x7fab2cd9e1ee
lea rax, ptr [rip+0x220f92]
mov qword ptr [rip+0x220fa3], r12
mov qword ptr [r12+0x20], rax
lea rax, ptr [r12+0x18]
mov qword ptr [rip+0x220302], r12
mov qword ptr [rbp-0xc0], rax
call 0x7fab2cdb2800
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x1e8
mov r15, qword ptr [rip+0x20b568]
test r15, r15
jz 0x7fab2cdb28e0
movzx eax, word ptr [r15+0x2b0]
mov r12, qword ptr [r15+0x2a0]
test rax, rax
mov qword ptr [rsp+0x8], rax
jz 0x7fab2cdb28e0
xor r13d, r13d
jmp 0x7fab2cdb285b
cmp dword ptr [r12], 0x4
jnz 0x7fab2cdb2848
mov rbx, qword ptr [r12+0x10]
mov rbp, qword ptr [r12+0x28]
mov eax, 0xc
add rbx, qword ptr [r15]
cmp rax, rbp
mov r14, rbx
jb 0x7fab2cdb28ab
jmp 0x7fab2cdb2848
add r13, 0x1
add r12, 0x38
cmp r13, qword ptr [rsp+0x8]
jnb 0x7fab2cdb28e0
cmp dword ptr [r12], 0x4
jnz 0x7fab2cdb2848
mov rbx, qword ptr [r12+0x10]
mov rbp, qword ptr [r12+0x28]
mov eax, 0xc
add rbx, qword ptr [r15]
cmp rax, rbp
mov r14, rbx
jb 0x7fab2cdb28ab
lea rsi, ptr [rip+0x44ae]
mov edx, 0x14
mov rdi, r14
call 0x7fab2cdb52b0
push r15
mov r8, rdi
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rsi
sub rsp, 0xd0
cmp rdx, 0xf
jbe 0x7fab2cdb53c5
test sil, 0x7
mov r9, rsi
jz 0x7fab2cdb531d
movzx eax, byte ptr [rdi]
movzx ecx, byte ptr [rsi]
add r8, 0x1
add rbx, 0x1
sub rax, rcx
jz 0x7fab2cdb5311
mov rdi, r8
mov rax, rdx
shr rax, 0x3
and edi, 0x7
jnz 0x7fab2cdb5418
mov rcx, rax
and ecx, 0x3
cmp rcx, 0x1
jz 0x7fab2cdb56b7
jb 0x7fab2cdb5667
cmp rcx, 0x3
jnz 0x7fab2cdb54af
mov rdi, qword ptr [r8]
mov rsi, qword ptr [rbx]
lea rcx, ptr [r8-0x8]
lea rbx, ptr [r9-0x8]
add rax, 0x1
cmp rdi, rsi
mov r11, qword ptr [rcx+0x10]
mov r10, qword ptr [rbx+0x10]
jz 0x7fab2cdb54c1
mov qword ptr [rsp-0x28], rdi
lea r10, ptr [rsp-0x28]
lea rdi, ptr [rsp-0x38]
mov qword ptr [rsp-0x38], rsi
xor eax, eax
nop dword ptr [rax], eax
movzx esi, byte ptr [r10+rax*1]
movzx ecx, byte ptr [rdi+rax*1]
add rax, 0x1
cmp sil, cl
jz 0x7fab2cdb5390
mov r11, qword ptr [r8]
mov r10, qword ptr [rbx]
lea rcx, ptr [r8-0x10]
lea rbx, ptr [r9-0x10]
add rax, 0x2
cmp r11, r10
mov rdi, qword ptr [rcx+0x18]
mov rsi, qword ptr [rbx+0x18]
jz 0x7fab2cdb57ae
mov qword ptr [rsp-0x58], r10
lea rdi, ptr [rsp-0x58]
lea r10, ptr [rsp-0x48]
mov qword ptr [rsp-0x48], r11
xor eax, eax
nop dword ptr [rax+rax*1], eax
movzx esi, byte ptr [r10+rax*1]
movzx ecx, byte ptr [rdi+rax*1]
add rax, 0x1
cmp sil, cl
jz 0x7fab2cdb54f0
jmp 0x7fab2cdb53a8
sub rax, 0x4
jz 0x7fab2cdb5757
add rcx, 0x20
add rbx, 0x20
jmp 0x7fab2cdb56cf
cmp rdi, rsi
jz 0x7fab2cdb53b5
mov qword ptr [rsp-0x68], rdi
lea r10, ptr [rsp-0x68]
lea rdi, ptr [rsp-0x78]
mov qword ptr [rsp-0x78], rsi
xor eax, eax
nop word ptr [rax+rax*1], ax
movzx esi, byte ptr [r10+rax*1]
movzx ecx, byte ptr [rdi+rax*1]
add rax, 0x1
cmp sil, cl
jz 0x7fab2cdb5780
jmp 0x7fab2cdb53a8
mov rbx, rdx
and edx, 0x7
and rbx, 0xfffffffffffffff8
add r8, rbx
add rbx, r9
test rdx, rdx
jz 0x7fab2cdb5400
movzx eax, byte ptr [r8]
movzx esi, byte ptr [rbx]
lea rcx, ptr [r8+0x1]
sub rax, rsi
jnz 0x7fab2cdb5402
add rdx, r8
sub rbx, r8
jmp 0x7fab2cdb53fb
cmp rcx, rdx
jnz 0x7fab2cdb53e8
xor eax, eax
add rsp, 0xd0
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
mov rsi, rcx
add rcx, 0x1
movzx eax, byte ptr [rsi]
movzx esi, byte ptr [rbx+rsi*1]
sub rax, rsi
jnz 0x7fab2cdb5402
cmp rcx, rdx
jnz 0x7fab2cdb53e8
xor eax, eax
add rsp, 0xd0
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
test eax, eax
jnz 0x7fab2cdb2880
mov eax, dword ptr [r14+0x14]
add rsp, 0x1e8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
test eax, eax
js 0x7fab2cd9dc8b
mov edx, dword ptr [rip+0x22022c]
test edx, edx
jnz 0x7fab2cd9e1e1
mov dword ptr [rip+0x22021e], eax
cmp eax, 0x20617
jnle 0x7fab2cd9df3a
mov rdi, qword ptr [rip+0x21fd4f]
call 0x7fab2cda36d0
push rbp
lea rcx, ptr [rip+0x21a748]
lea rdx, ptr [rip+0x21a749]
mov rbp, rsp
push r15
push r14
push r13
push r12
mov r12, rdi
push rbx
sub rsp, 0x38
mov rsi, qword ptr [rip+0x21a5d7]
mov rdi, qword ptr [rip+0x21a5c8]
call 0x7fab2cda9cb0
push rbp
mov rbp, rsp
push r15
push r14
push r13
push r12
push rbx
sub rsp, 0x78
test rdi, rdi
mov r9, qword ptr [rip+0x214055]
setnz al
and r9, qword ptr [rip+0x214043]
mov qword ptr [rbp-0x70], rdi
mov qword ptr [rbp-0x78], rsi
mov qword ptr [rbp-0x48], rdx
movzx r12d, al
mov qword ptr [rbp-0x60], rcx
mov byte ptr [rbp-0x68], al
mov r14, r9
jz 0x7fab2cda9d2d
xor esi, esi
xor eax, eax
mov edi, 0x1
nop word ptr [rax+rax*1], ax
mov ecx, esi
mov rbx, r14
lea rdx, ptr [r12+0x1]
shr rbx, cl
mov rcx, rbx
and ecx, 0x1
cmovnz r12, rdx
add rax, 0x1
mov rdx, rdi
mov ecx, eax
mov esi, eax
shl rdx, cl
neg rdx
test rdx, r14
jnz 0x7fab2cda9d00
mov rax, qword ptr [rip+0x21404c]
test rax, rax
mov qword ptr [rbp-0x40], rax
jz 0x7fab2cda9e17
mov rax, qword ptr [rip+0x21404c]
test rax, rax
mov qword ptr [rbp-0x40], rax
jz 0x7fab2cda9e17
mov r8, qword ptr [rax+0x2a0]
movzx eax, word ptr [rax+0x2b0]
test rax, rax
mov qword ptr [rbp-0x38], rax
jz 0x7fab2cda9e17
xor r15d, r15d
mov qword ptr [rbp-0x50], r14
mov qword ptr [rbp-0x58], r12
mov r14, r8
mov r12, r15
jmp 0x7fab2cda9d82
cmp dword ptr [r14], 0x4
jnz 0x7fab2cda9d70
mov rax, qword ptr [rbp-0x40]
mov r13, qword ptr [r14+0x10]
mov r15, qword ptr [r14+0x28]
add r13, qword ptr [rax]
mov eax, 0xc
cmp rax, r15
mov rbx, r13
lea rdi, ptr [r13+0xc]
jb 0x7fab2cda9dda
jmp 0x7fab2cda9d70
add r12, 0x1
add r14, 0x38
cmp r12, qword ptr [rbp-0x38]
jnb 0x7fab2cda9e0f
cmp dword ptr [r14], 0x4
jnz 0x7fab2cda9d70
mov rax, qword ptr [rbp-0x40]
mov r13, qword ptr [r14+0x10]
mov r15, qword ptr [r14+0x28]
add r13, qword ptr [rax]
mov eax, 0xc
cmp rax, r15
mov rbx, r13
lea rdi, ptr [r13+0xc]
jb 0x7fab2cda9dda
cmp dword ptr [rbx+0x8], 0x2
mov edx, dword ptr [rbx]
jnz 0x7fab2cda9db0
cmp edx, 0x4
jnz 0x7fab2cda9db0
lea rsi, ptr [rip+0xdad1]
mov edx, 0x4
call 0x7fab2cdb52b0
mov eax, dword ptr [rbx+0x4]
add rdx, 0x3
add rax, 0x3
and rdx, 0xfffffffffffffffc
and rax, 0xfffffffffffffffc
lea rax, ptr [rdx+rax*1+0xc]
add rbx, rax
lea rdi, ptr [rbx+0xc]
mov rax, rdi
sub rax, r13
cmp rax, r15
jnb 0x7fab2cda9d70
cmp dword ptr [rbx+0x8], 0x2
mov edx, dword ptr [rbx]
jnz 0x7fab2cda9db0
cmp edx, 0x4
jnz 0x7fab2cda9db0
mov r14, qword ptr [rbp-0x50]
mov r12, qword ptr [rbp-0x58]
xor ebx, ebx
xor r13d, r13d
lea rdi, ptr [rip+0xdaa0]
xor esi, esi
call 0x7fab2cdb44f0
mov eax, 0x15
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab2cdb4500
ret 
lea rcx, ptr [rip+0x20ac79]
neg eax
mov dword ptr [rcx], eax
or rax, 0xffffffffffffffff
ret 
test eax, eax
jnz 0x7fab2cda9e66
mov edi, 0x10
call 0x7fab2cd9ba90
add r12, 0x1
mov rax, r12
shl rax, 0x4
add rax, 0x10
sub rsp, rax
lea r15, ptr [rsp+0xf]
and r15, 0xfffffffffffffff0
test r13, r13
jz 0x7fab2cdaa302
mov eax, dword ptr [r13-0x4]
mov esi, eax
mov eax, eax
or qword ptr [rip+0x213e7f], rax
or qword ptr [rip+0x213e80], rax
lea rax, ptr [r13+rbx*1]
cmp r13, rax
mov qword ptr [rbp-0x38], rax
jnb 0x7fab2cdaa302
xor ebx, ebx
mov qword ptr [rbp-0x50], r14
mov qword ptr [rbp-0x40], r12
mov r14, rbx
mov r12, r13
mov r13d, esi
nop dword ptr [rax], eax
lea rbx, ptr [r12+0x1]
mov rdi, rbx
call 0x7fab2cdb4c50
mov edx, 0x1
xor eax, eax
xor ebx, ebx
jmp 0x7fab2cda9f20
test r14, r14
jz 0x7fab2cda9f73
xor ecx, ecx
mov edx, 0x1
nop dword ptr [rax], eax
bt r14, rcx
jnb 0x7fab2cda9f5f
mov rax, rbx
lea rsi, ptr [rip+0xd439]
add rbx, 0x1
shl rax, 0x4
add rax, r15
mov qword ptr [rax], rsi
mov qword ptr [rax+0x8], 0x0
mov rax, rdx
shl rax, cl
xor r14, rax
add rcx, 0x1
test r14, r14
jnz 0x7fab2cda9f30
cmp byte ptr [rbp-0x68], 0x0
jz 0x7fab2cdaa3ad
mov rsi, qword ptr [rbp-0x70]
add rax, r15
lea rcx, ptr [rdx+0x1]
mov qword ptr [rax], rsi
mov rsi, qword ptr [rbp-0x78]
mov qword ptr [rax+0x8], rsi
mov rax, rdx
shl rax, 0x4
lea rsi, ptr [rip+0xd525]
add rax, r15
cmp r12, rcx
mov qword ptr [rax+0x8], 0x3
mov qword ptr [rax], rsi
jnz 0x7fab2cdaa3f8
cmp r12, 0x1
jz 0x7fab2cdaa32b
mov rax, qword ptr [r15+0x8]
mov rsi, rax
mov qword ptr [rbp-0x40], rax
mov rax, r12
shl rax, 0x4
cmp r12, 0x2
lea rax, ptr [r15+rax*1-0x10]
mov qword ptr [rbp-0x68], rax
mov rax, qword ptr [rax+0x8]
mov rcx, rax
mov qword ptr [rbp-0x38], rax
mov rax, rsi
lea rsi, ptr [rax+rcx*1+0x2]
jbe 0x7fab2cdaa060
add rsi, rsi
mov eax, 0x2
mov edi, 0x1
jmp 0x7fab2cdaa00e
mov r9d, 0x1
mov ecx, r12d
mov qword ptr [rbp-0x58], rdx
mov eax, r9d
mov dword ptr [rbp-0x50], r9d
mov dword ptr [rbp-0x90], r12d
shl eax, cl
mov rcx, qword ptr [rbp-0x48]
mov dword ptr [rbp-0x8c], eax
cdqe 
mov qword ptr [rbp-0x98], rax
mov qword ptr [rcx], rax
shl rax, 0x4
lea rdi, ptr [rsi+rax*1]
mov rbx, rax
call 0x7fab2cd9ba90
test rax, rax
mov r13, rax
mov r9d, dword ptr [rbp-0x50]
mov rdx, qword ptr [rbp-0x58]
jz 0x7fab2cdaa417
lea rdi, ptr [r13+rbx*1]
cmp r12, 0x2
mov qword ptr [r13], rdi
mov qword ptr [r13+0x10], rdi
jz 0x7fab2cdaa3b8
lea eax, ptr [r12-0x1]
lea rsi, ptr [rdx-0x1]
shl rdx, 0x4
mov qword ptr [rbp-0x80], r12
mov ebx, 0x1
mov qword ptr [rbp-0x88], r13
mov ecx, eax
mov dword ptr [rbp-0x70], eax
mov rax, qword ptr [r15]
shl r9d, cl
mov qword ptr [rbp-0x58], rsi
lea rsi, ptr [r15+rdx*1-0x8]
movsxd r14, r9d
mov dword ptr [rbp-0x78], r9d
mov qword ptr [rbp-0x50], rax
mov rax, qword ptr [rbp-0x68]
mov r12, r14
mov qword ptr [rbp-0x48], rsi
mov rax, qword ptr [rax]
mov r15, rax
nop dword ptr [rax+rax*1], eax
mov rdx, qword ptr [rbp-0x38]
mov rsi, r15
sub r12, 0x2
call 0x7fab2cdb5970
mov rdx, qword ptr [r15+0x18]
mov rsi, qword ptr [r15+0x10]
call 0x7fab2cdb5970
cmp rdx, 0x20
jnb 0x7fab2cdb59f0
test dl, 0x1
jz 0x7fab2cdb5986
movzx ecx, byte ptr [rsi]
mov byte ptr [rdi], cl
inc rsi
inc rdi
test dl, 0x2
jz 0x7fab2cdb5999
movzx ecx, word ptr [rsi]
mov word ptr [rdi], cx
add rsi, 0x2
add rdi, 0x2
test dl, 0x4
jz 0x7fab2cdb59aa
mov ecx, dword ptr [rsi]
mov dword ptr [rdi], ecx
add rsi, 0x4
add rdi, 0x4
test dl, 0x8
jz 0x7fab2cdb59c0
mov rcx, qword ptr [rsi]
mov qword ptr [rdi], rcx
add rsi, 0x8
add rdi, 0x8
nop dword ptr [rax], eax
and edx, 0xf0
jz 0x7fab2cdb59eb
test dl, 0x8
jz 0x7fab2cdb59c0
mov rcx, qword ptr [rsi]
mov qword ptr [rdi], rcx
add rsi, 0x8
add rdi, 0x8
nop dword ptr [rax], eax
and edx, 0xf0
jz 0x7fab2cdb59eb
nop dword ptr [rax+rax*1], eax
mov rcx, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov qword ptr [rdi], rcx
mov qword ptr [rdi+0x8], r8
sub edx, 0x10
lea rsi, ptr [rsi+0x10]
lea rdi, ptr [rdi+0x10]
jnz 0x7fab2cdb59d0
and edx, 0xf0
jz 0x7fab2cdb59eb
nop dword ptr [rax+rax*1], eax
mov rcx, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov qword ptr [rdi], rcx
mov qword ptr [rdi+0x8], r8
sub edx, 0x10
lea rsi, ptr [rsi+0x10]
lea rdi, ptr [rdi+0x10]
jnz 0x7fab2cdb59d0
mov rax, rdi
ret 
mov rax, rdi
ret 
mov rdx, qword ptr [rbp-0x40]
mov rsi, qword ptr [r15]
lea rdi, ptr [rax+0x1]
mov byte ptr [rax], 0x2f
call 0x7fab2cdb5970
test dl, 0x2
jz 0x7fab2cdb5999
movzx ecx, word ptr [rsi]
mov word ptr [rdi], cx
add rsi, 0x2
add rdi, 0x2
test dl, 0x4
jz 0x7fab2cdb59aa
mov ecx, dword ptr [rsi]
mov dword ptr [rdi], ecx
add rsi, 0x4
add rdi, 0x4
test dl, 0x8
jz 0x7fab2cdb59c0
mov dword ptr [rbp-0x78], 0x2
mov byte ptr [rax], 0x2f
mov dword ptr [rbp-0x70], 0x1
jmp 0x7fab2cdaa1a2
movzx ecx, byte ptr [rbp-0x90]
mov esi, 0x1
xor eax, eax
shl rsi, cl
mov rdx, rsi
shl rdx, 0x4
test rsi, rsi
jz 0x7fab2cdaa1d2
nop 
mov qword ptr [r13+rax*1+0x8], 0x0
add rax, 0x10
cmp rax, rdx
jnz 0x7fab2cdaa1c0
mov rdi, qword ptr [rbp-0x68]
mov r10, qword ptr [rbp-0x98]
mov r8d, 0x1
mov rcx, r12
add rdi, 0x8
nop word ptr [rax+rax*1], ax
sub rcx, 0x1
mov esi, r8d
mov rdx, r13
shl esi, cl
test r10, r10
mov rax, r10
movsxd rsi, esi
jz 0x7fab2cdaa23a
mov qword ptr [r13+rax*1+0x8], 0x0
add rax, 0x10
cmp rax, rdx
jnz 0x7fab2cdaa1c0
mov rdi, qword ptr [rbp-0x68]
mov r10, qword ptr [rbp-0x98]
mov r8d, 0x1
mov rcx, r12
add rdi, 0x8
nop word ptr [rax+rax*1], ax
sub rcx, 0x1
mov esi, r8d
mov rdx, r13
shl esi, cl
test r10, r10
mov rax, r10
movsxd rsi, esi
jz 0x7fab2cdaa23a
nop word ptr [rax+rax*1], ax
sub rax, 0x1
test rsi, rax
jz 0x7fab2cdaa231
mov rbx, qword ptr [rdi]
sub rax, 0x1
lea r9, ptr [rbx+0x1]
add qword ptr [rdx+0x8], r9
add rdx, 0x10
test rsi, rax
jnz 0x7fab2cdaa219
add rdx, 0x10
test rax, rax
jnz 0x7fab2cdaa210
sub rdi, 0x10
test rcx, rcx
jnz 0x7fab2cdaa1f0
sub rax, 0x1
test rsi, rax
jz 0x7fab2cdaa231
mov rbx, qword ptr [rdi]
sub rax, 0x1
lea r9, ptr [rbx+0x1]
add qword ptr [rdx+0x8], r9
add rdx, 0x10
test rsi, rax
jnz 0x7fab2cdaa219
add rdx, 0x10
test rax, rax
jnz 0x7fab2cdaa210
add rdx, 0x10
test rax, rax
jnz 0x7fab2cdaa210
sub rdi, 0x10
test rcx, rcx
jnz 0x7fab2cdaa1f0
mov r9d, dword ptr [rbp-0x8c]
movzx ecx, byte ptr [rbp-0x70]
mov edx, 0x1
lea rax, ptr [r13+0x20]
sub r9d, 0x2
movsxd r9, r9d
shl rdx, cl
cmp r9, rdx
jz 0x7fab2cdaa2b8
sub rcx, 0x1
mov esi, r8d
mov rdx, r13
shl esi, cl
test r10, r10
mov rax, r10
movsxd rsi, esi
jz 0x7fab2cdaa23a
nop word ptr [rax+rax*1], ax
sub rax, 0x1
test rsi, rax
jz 0x7fab2cdaa231
mov rbx, qword ptr [rdi]
sub rax, 0x1
lea r9, ptr [rbx+0x1]
add qword ptr [rdx+0x8], r9
add rdx, 0x10
test rsi, rax
jnz 0x7fab2cdaa219
sub rdi, 0x10
test rcx, rcx
jnz 0x7fab2cdaa1f0
mov r9d, dword ptr [rbp-0x8c]
movzx ecx, byte ptr [rbp-0x70]
mov edx, 0x1
lea rax, ptr [r13+0x20]
sub r9d, 0x2
movsxd r9, r9d
shl rdx, cl
cmp r9, rdx
jz 0x7fab2cdaa2b8
mov rsi, rax
mov rcx, r9
jmp 0x7fab2cdaa28d
mov esi, dword ptr [rbp-0x78]
mov r15, qword ptr [rbp-0x38]
neg esi
add r15, 0x1
movsxd rsi, esi
shl rsi, 0x4
nop dword ptr [rax], eax
mov rcx, r15
add rcx, qword ptr [rax+rsi*1]
add rax, 0x10
mov qword ptr [rax-0x10], rcx
sub rdx, 0x1
jnz 0x7fab2cdaa2d0
mov rax, qword ptr [r13+0x8]
mov rsi, qword ptr [rbp-0x60]
mov qword ptr [rsi], rax
lea rsp, ptr [rbp-0x28]
mov rax, r13
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov rcx, r15
add rcx, qword ptr [rax+rsi*1]
add rax, 0x10
mov qword ptr [rax-0x10], rcx
sub rdx, 0x1
jnz 0x7fab2cdaa2d0
mov rax, qword ptr [r13+0x8]
mov rsi, qword ptr [rbp-0x60]
mov qword ptr [rsi], rax
lea rsp, ptr [rbp-0x28]
mov rax, r13
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov edi, 0x28
mov qword ptr [rip+0x21a71f], rax
call 0x7fab2cd9ba90
test rax, rax
mov r15, rax
mov qword ptr [rip+0x21a6ed], rax
jz 0x7fab2cda3afe
mov rsi, qword ptr [rip+0x21a6f8]
mov rdx, 0xcccccccccccccccd
lea rax, ptr [rsi*4]
mov qword ptr [rbp-0x38], rsi
lea rbx, ptr [rax+0x4f]
mov qword ptr [rbp-0x50], rax
mov rax, rbx
mul rdx
mov rbx, rdx
shr rbx, 0x5
imul rdi, rbx, 0xa50
call 0x7fab2cd9ba90
mov rdx, qword ptr [rip+0x20b1e8]
lea rsi, ptr [rdx+rbx*1-0x1]
mov rax, rdx
neg rax
and rsi, rax
mov rbp, rsi
jz 0x7fab2cdb2b95
xor r9d, r9d
xor edi, edi
mov r8d, 0xffffffff
mov ecx, 0x22
mov edx, 0x3
mov rsi, rbp
call 0x7fab2cdb4610
mov r10, rcx
mov eax, 0x9
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab2cdb4623
ret 
cmp rax, 0xffffffffffffffff
jz 0x7fab2cdb2ba8
cmp rax, qword ptr [rip+0x20c5e7]
mov rdx, rax
cmovz rdx, qword ptr [rip+0x20c5e4]
add rax, rbp
mov qword ptr [rip+0x20c5d2], rax
add rbx, rdx
mov qword ptr [rip+0x20c5c0], rdx
mov qword ptr [rip+0x20c5c9], rbx
add rsp, 0x8
mov rax, rdx
pop rbx
pop rbp
ret 
test rax, rax
mov qword ptr [r15], rax
mov rsi, qword ptr [rbp-0x38]
jz 0x7fab2cda3bc9
lea r13, ptr [rbx+rbx*4]
lea rdx, ptr [rip+0x13f24]
mov qword ptr [rip+0x21b25f], rax
mov qword ptr [rax+0x10], 0x0
mov qword ptr [rax+0x20], 0x16
mov r14, rax
lea rcx, ptr [r13*8]
mov qword ptr [rax+0x8], rdx
lea rdx, ptr [rip+0x13211]
test rsi, rsi
mov dword ptr [rip+0x21a65c], 0x0
lea r8, ptr [r15+0x8]
mov qword ptr [rax+0x18], rdx
lea rbx, ptr [rax+rcx*1]
lea rax, ptr [r15+0x20]
mov qword ptr [rbp-0x58], rcx
lea r11, ptr [rip+0x131d1]
lea r13, ptr [rip+0x131f9]
mov qword ptr [rbp-0x48], rax
jz 0x7fab2cda3860
mov rdx, qword ptr [rbp-0x50]
lea rdi, ptr [r14+0x28]
xor esi, esi
mov qword ptr [rbp-0x40], r11
mov qword ptr [rbp-0x38], r8
call 0x7fab2cdb5960
mov rcx, rdx
movzx eax, sil
mov rdx, rdi
rep stosb byte ptr [rdi]
rep stosb byte ptr [rdi]
mov rax, rdx
ret 
mov r8, qword ptr [rbp-0x38]
cmp r8, qword ptr [rbp-0x48]
mov r11, qword ptr [rbp-0x40]
jz 0x7fab2cda38c0
lea rdi, ptr [rip+0x13e92]
mov qword ptr [r14], rbx
mov rsi, qword ptr [rbp-0x58]
mov qword ptr [r8], rbx
mov qword ptr [rbx+0x10], 0x0
add r11, 0x8
mov qword ptr [rbx+0x8], rdi
mov qword ptr [rbx+0x18], r13
lea rax, ptr [r8+0x8]
mov rdx, qword ptr [r11-0x8]
add r14, rsi
mov qword ptr [rbx+0x20], rdx
add rbx, rsi
cmp byte ptr [r13], 0x2f
lea rdx, ptr [r13+rdx*1+0x1]
jnz 0x7fab2cda3adf
mov r15, r8
mov r13, rdx
mov r8, rax
jmp 0x7fab2cda37e4
mov rdx, qword ptr [rbp-0x50]
lea rdi, ptr [r14+0x28]
xor esi, esi
mov qword ptr [rbp-0x40], r11
mov qword ptr [rbp-0x38], r8
call 0x7fab2cdb5960
mov rbx, qword ptr [rip+0x21a799]
mov qword ptr [r14], 0x0
mov qword ptr [rip+0x21b7a7], 0x1a
mov qword ptr [r15+0x8], 0x0
test rbx, rbx
jz 0x7fab2cda393f
movzx eax, byte ptr [rbx+0x314]
and eax, 0x3
cmp al, 0x2
jz 0x7fab2cda3baa
mov rax, qword ptr [rbx+0x128]
test rax, rax
jz 0x7fab2cda3a60
mov rax, qword ptr [rbx+0xb8]
mov qword ptr [rbx+0x3a8], 0xffffffffffffffff
test rax, rax
jz 0x7fab2cda3ab0
mov rdx, qword ptr [rbx+0x68]
mov rsi, qword ptr [rax+0x8]
lea rdi, ptr [rbx+0x318]
lea rcx, ptr [rip+0x13c64]
add rsi, qword ptr [rdx+0x8]
mov rdx, rbx
call 0x7fab2cda3340
mov qword ptr [rbx+0x318], 0xffffffffffffffff
jmp 0x7fab2cda393f
test r12, r12
jz 0x7fab2cda3a40
cmp byte ptr [r12], 0x0
jz 0x7fab2cda3a40
mov esi, 0x24
mov rdi, r12
call 0x7fab2cdb4a00
mov qword ptr [rip+0x21a3f5], 0xffffffffffffffff
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov rdi, qword ptr [rip+0x220aab]
xor esi, esi
call 0x7fab2cdab950
test rsi, rsi
jz 0x7fab2cdab9a8
lea rax, ptr [rsi+rsi*8]
lea rdx, ptr [rip+0x212700]
shl rax, 0x4
lea rax, ptr [rdx+rax*1+0x68]
cmp qword ptr [rax+0x8], 0x0
jz 0x7fab2cdab9b6
test rdi, rdi
jz 0x7fab2cdab9d0
mov rax, qword ptr [rip+0x212639]
cmp qword ptr [rax+0x8], 0x0
jnz 0x7fab2cdab970
test rdi, rdi
mov dword ptr [rax], 0x1
jnz 0x7fab2cdab97b
mov rdx, qword ptr [rip+0x212620]
mov rdi, qword ptr [rdx+0x20]
jmp 0x7fab2cdab97b
lea rdx, ptr [rsi+rsi*8]
lea rcx, ptr [rip+0x2126da]
mov qword ptr [rax+0x20], rdi
shl rdx, 0x4
mov rdx, qword ptr [rcx+rdx*1]
lea rcx, ptr [rip-0x59]
mov qword ptr [rax+0x10], rcx
mov qword ptr [rax+0x8], rdx
ret 
cmp qword ptr [rip+0x220aa4], 0x0
mov qword ptr [rbp-0xb8], rax
mov dword ptr [rax+0x18], 0x0
jnz 0x7fab2cd9df7d
mov rax, qword ptr [rip+0x220abd]
mov rax, qword ptr [rax]
mov qword ptr [rip+0x220a83], rax
movzx eax, byte ptr [rip+0x220d88]
add dword ptr [rip+0x2200dd], 0x1
and eax, 0xfffffffc
or eax, 0x1
mov byte ptr [rip+0x220d75], al
lea rax, ptr [rip+0x220a5a]
mov qword ptr [r15+0x18], rax
add qword ptr [rip+0x220a0e], 0x1
cmp qword ptr [rip+0x21fd8e], 0xfffffffffffffffe
mov qword ptr [rip+0x220a5f], r15
jnz 0x7fab2cd9dfce
xor eax, eax
cmp qword ptr [r15], 0x0
setz al
neg rax
mov qword ptr [rip+0x21fd72], rax
mov rax, qword ptr [rip+0x220d63]
movzx edx, word ptr [rax+0x38]
mov rcx, rax
add rcx, qword ptr [rax+0x20]
lea rsi, ptr [rdx*8]
mov rax, rdx
mov qword ptr [rip+0x220ca6], rcx
shl rax, 0x6
mov word ptr [rip+0x220cab], dx
sub rax, rsi
lea rax, ptr [rcx+rax*1-0x38]
test rdx, rdx
jz 0x7fab2cd9e035
mov esi, dword ptr [rax]
mov rcx, rax
sub rdx, 0x1
sub rax, 0x38
cmp esi, 0x6474e552
jnz 0x7fab2cd9e005
mov rax, qword ptr [rcx+0x10]
mov qword ptr [rip+0x220e26], rax
mov rax, qword ptr [rcx+0x28]
mov qword ptr [rip+0x220e23], rax
cmp qword ptr [rip+0x220de3], 0x0
jz 0x7fab2cd9e04b
call 0x7fab2cdad710
mov rax, qword ptr [rip+0x221026]
test rax, rax
jnz 0x7fab2cd9e20d
mov qword ptr [rbp-0x98], 0x0
mov rax, qword ptr [r15+0xe8]
test rax, rax
jz 0x7fab2cd9e07d
mov rcx, qword ptr [rbp-0xb8]
mov qword ptr [rax+0x8], rcx
mov rax, qword ptr [rip+0x220a5c]
test rax, rax
jz 0x7fab2cd9e094
mov rax, qword ptr [rbp-0xb8]
mov dword ptr [rax+0x18], 0x1
call 0x7fab2cdab940
ret 
mov eax, dword ptr [rip+0x21fd3b]
test eax, eax
jnz 0x7fab2cd9f483
mov rax, qword ptr [rbp-0xc0]
cmp qword ptr [rax], 0x0
jnz 0x7fab2cd9f464
mov r12, qword ptr [rip+0x21fbbb]
test r12, r12
jnz 0x7fab2cd9f3be
xor r12d, r12d
lea rdi, ptr [rip+0x1c2f0]
mov esi, 0x4
call 0x7fab2cdb44f0
mov eax, 0x15
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab2cdb4500
ret 
lea rcx, ptr [rip+0x20ac79]
neg eax
mov dword ptr [rcx], eax
or rax, 0xffffffffffffffff
ret 
test eax, eax
jz 0x7fab2cd9f33c
mov rax, qword ptr [rbp-0xc0]
mov rdx, qword ptr [rax]
test rdx, rdx
jnz 0x7fab2cd9e486
xor esi, esi
rdtsc 
mov r14, rdx
mov eax, eax
xor r13d, r13d
shl r14, 0x20
mov edx, r12d
mov rdi, r15
or r14, rax
cmp ebx, 0x3
setz r13b
xor r8d, r8d
mov ecx, r13d
call 0x7fab2cda8a90
push rbp
lea eax, ptr [rdx+0x2]
mov rbp, rsp
push r15
lea rax, ptr [rax+rax*2]
push r14
lea rax, ptr [rax*8+0x1e]
push r13
shr rax, 0x4
shl rax, 0x4
push r12
push rbx
sub rsp, 0xd8
mov dword ptr [rbp-0xd8], ecx
mov qword ptr [rbp-0xd0], rdi
sub rsp, rax
mov dword ptr [rbp-0xe0], r8d
lea rcx, ptr [rsp+0xf]
and rcx, 0xfffffffffffffff0
lea rax, ptr [rcx+0x18]
mov dword ptr [rcx], 0x0
mov qword ptr [rcx+0x8], rdi
mov qword ptr [rbp-0xf8], rcx
mov qword ptr [rcx+0x10], rax
movzx eax, byte ptr [rdi+0x314]
and eax, 0xffffff9f
or eax, 0x20
test edx, edx
mov byte ptr [rdi+0x314], al
jz 0x7fab2cda979e
lea r9d, ptr [rdx+0x1]
mov r8, rsi
mov esi, 0x1
mov eax, esi
add esi, 0x1
mov rdi, qword ptr [r8]
mov r10d, esi
lea rax, ptr [rax+rax*2]
add r8, 0x8
lea r10, ptr [r10+r10*2]
lea rax, ptr [rcx+rax*8]
lea r10, ptr [rcx+r10*8]
mov dword ptr [rax], 0x0
mov qword ptr [rax+0x8], rdi
mov qword ptr [rax+0x10], r10
movzx eax, byte ptr [rdi+0x314]
and eax, 0xffffff9f
or eax, 0x20
cmp esi, r9d
mov byte ptr [rdi+0x314], al
jnz 0x7fab2cda8b1b
mov edx, edx
mov r14, qword ptr [rcx+0x8]
mov dword ptr [rbp-0xac], r9d
lea rax, ptr [rdx+rdx*2]
shl rax, 0x3
add rax, rcx
mov qword ptr [rbp-0x68], 0x0
mov qword ptr [rbp-0xc0], rcx
mov qword ptr [rbp-0xb8], rax
mov qword ptr [rax+0x10], 0x0
mov eax, dword ptr [rip+0x2165e4]
mov qword ptr [rbp-0xf0], 0x0
mov dword ptr [rip+0x2165cf], 0x0
mov qword ptr [rbp-0xe8], 0x0
mov dword ptr [rbp-0xb0], eax
lea rax, ptr [rbp-0x58]
mov qword ptr [rbp-0x88], rax
lea rax, ptr [rbp-0x70]
mov qword ptr [rbp-0x90], rax
mov r14, rdi
xor eax, eax
mov dword ptr [rbp-0xac], 0x1
jmp 0x7fab2cda8b75
add rax, rcx
mov qword ptr [rbp-0x68], 0x0
mov qword ptr [rbp-0xc0], rcx
mov qword ptr [rbp-0xb8], rax
mov qword ptr [rax+0x10], 0x0
mov eax, dword ptr [rip+0x2165e4]
mov qword ptr [rbp-0xf0], 0x0
mov dword ptr [rip+0x2165cf], 0x0
mov qword ptr [rbp-0xe8], 0x0
mov dword ptr [rbp-0xb0], eax
lea rax, ptr [rbp-0x58]
mov qword ptr [rbp-0x88], rax
lea rax, ptr [rbp-0x70]
mov qword ptr [rbp-0x90], rax
lea rax, ptr [rbp-0x68]
mov qword ptr [rbp-0x98], rax
lea rax, ptr [rbp-0x60]
mov qword ptr [rbp-0xa0], rax
mov rax, rcx
xor r13d, r13d
cmp qword ptr [r14+0x2b8], 0x0
mov dword ptr [rax], 0x1
jz 0x7fab2cda91ad
cmp qword ptr [r14+0x48], 0x0
jz 0x7fab2cda8d4b
mov rax, qword ptr [r14+0x68]
mov rbx, qword ptr [r14+0x10]
mov qword ptr [rbp-0x58], r14
mov rax, qword ptr [rax+0x8]
mov qword ptr [rbp-0x78], rax
mov qword ptr [rbp-0x48], rax
mov eax, dword ptr [rbp-0xd8]
mov dword ptr [rbp-0x50], eax
mov eax, dword ptr [rbp-0xe0]
mov dword ptr [rbp-0x4c], eax
mov rax, qword ptr [rbx]
test rax, rax
jz 0x7fab2cda8d67
cmp qword ptr [r14+0x3b8], 0x0
jnz 0x7fab2cda8c08
cmp qword ptr [rbp-0xd0], r14
jz 0x7fab2cda8c08
movzx eax, word ptr [r14+0x2b2]
test ax, ax
jz 0x7fab2cda8c08
cmp qword ptr [r14+0x48], 0x0
jz 0x7fab2cda8d4b
mov rax, qword ptr [r14+0x68]
mov rbx, qword ptr [r14+0x10]
mov qword ptr [rbp-0x58], r14
mov rax, qword ptr [rax+0x8]
mov qword ptr [rbp-0x78], rax
mov qword ptr [rbp-0x48], rax
mov eax, dword ptr [rbp-0xd8]
mov dword ptr [rbp-0x50], eax
mov eax, dword ptr [rbp-0xe0]
mov dword ptr [rbp-0x4c], eax
mov rax, qword ptr [rbx]
test rax, rax
jz 0x7fab2cda8d67
mov rcx, qword ptr [rbp-0xc0]
xor r12d, r12d
mov qword ptr [rbp-0xc8], rcx
jmp 0x7fab2cda8c81
cmp rax, 0x1
jnz 0x7fab2cda9332
mov r15, qword ptr [rbp-0x78]
add r15, qword ptr [rbx+0x8]
mov esi, 0x24
mov rdi, r15
call 0x7fab2cdb4a00
movd xmm1, esi
mov eax, edi
and eax, 0xfff
punpcklbw xmm1, xmm1
cmp eax, 0xfc0
punpcklwd xmm1, xmm1
pshufd xmm1, xmm1, 0x0
jnle 0x7fab2cdb4b80
movdqu xmm0, xmmword ptr [rdi]
pxor xmm3, xmm3
movdqa xmm4, xmm0
pcmpeqb xmm0, xmm1
pcmpeqb xmm4, xmm3
por xmm0, xmm4
pmovmskb eax, xmm0
test eax, eax
jz 0x7fab2cdb4a58
bsf eax, eax
mov edx, 0x0
lea rax, ptr [rdi+rax*1]
cmp byte ptr [rax], sil
cmovnz rax, rdx
ret 
test rax, rax
jnz 0x7fab2cda9529
mov r8, qword ptr [rbp-0x88]
mov rdx, qword ptr [rbp-0x90]
lea rcx, ptr [rip-0x71e]
mov rsi, qword ptr [rbp-0x98]
mov rdi, qword ptr [rbp-0xa0]
mov qword ptr [rbp-0x40], r15
call 0x7fab2cdaaf50
push rbx
sub rsp, 0x130
lea rax, ptr [rsp+0x44]
mov qword ptr [rsp+0x18], rdi
mov qword ptr [rsp+0x48], rdi
mov qword ptr [rsp+0x20], rsi
mov qword ptr [rsp+0x50], rsi
mov qword ptr [rsp+0x30], rcx
mov qword ptr [rsp+0x38], r8
mov qword ptr [rsp+0x28], rdx
mov qword ptr [rsp+0x58], rdx
mov qword ptr [rsp+0x60], rax
call qword ptr [rip+0x213a60]
lea rax, ptr [rip+0x222cd9]
ret 
lea rdi, ptr [rsp+0x48]
mov rbx, qword ptr [rax]
xor esi, esi
mov qword ptr [rsp+0x8], rax
mov qword ptr [rax], rdi
lea rdi, ptr [rsp+0x68]
mov qword ptr [rsp+0x10], rbx
call 0x7fab2cdb4730
mov qword ptr [rdi], rbx
mov rax, rbp
xor rax, qword ptr [rip+0x2096b3]
rol rax, 0x11
mov qword ptr [rdi+0x8], rax
mov qword ptr [rdi+0x10], r12
mov qword ptr [rdi+0x18], r13
mov qword ptr [rdi+0x20], r14
mov qword ptr [rdi+0x28], r15
lea rdx, ptr [rsp+0x8]
xor rdx, qword ptr [rip+0x20968f]
rol rdx, 0x11
mov qword ptr [rdi+0x30], rdx
mov rax, qword ptr [rsp]
xor rax, qword ptr [rip+0x20967c]
rol rax, 0x11
mov qword ptr [rdi+0x38], rax
xor eax, eax
ret 
test eax, eax
mov ebx, eax
jnz 0x7fab2cdaaffc
mov rdi, qword ptr [rsp+0x38]
mov r9, qword ptr [rsp+0x30]
call r9
push rbx
mov rbx, rdi
mov rdi, qword ptr [rdi]
mov edx, 0x1
mov ecx, dword ptr [rbx+0x8]
mov r8d, dword ptr [rbx+0xc]
movzx eax, byte ptr [rdi+0x314]
mov r9, qword ptr [rdi+0x30]
and eax, 0x3
movzx esi, al
test al, al
cmovnz edx, esi
mov rsi, qword ptr [rbx+0x18]
call 0x7fab2cda3c40
push r15
push r14
push r13
push r12
push rbp
mov rbp, r9
push rbx
sub rsp, 0x3c8
test r9, r9
mov dword ptr [rsp+0x1c], edx
mov dword ptr [rsp+0x24], ecx
js 0x7fab2cda4683
cmp r9, qword ptr [rip+0x21acf4]
jnb 0x7fab2cda4664
lea rax, ptr [r9+r9*8]
lea r14, ptr [rip+0x21a3e3]
mov r12, rdi
mov rbx, rsi
mov r13d, r8d
shl rax, 0x4
mov r15, qword ptr [r14+rax*1]
test r15, r15
jnz 0x7fab2cda3caf
movzx eax, byte ptr [r15+0x315]
test al, 0x2
jnz 0x7fab2cda3ca6
test al, 0x20
jnz 0x7fab2cda3ca6
mov rsi, r15
mov rdi, rbx
call 0x7fab2cdac190
push rbp
mov rbp, rdi
push rbx
mov rbx, rsi
sub rsp, 0x8
mov rsi, qword ptr [rsi+0x8]
call 0x7fab2cdb4c20
mov al, byte ptr [rdi]
cmp al, byte ptr [rsi]
jnz 0x7fab2cdb4c33
inc rdi
inc rsi
test al, al
jnz 0x7fab2cdb4c20
xor eax, eax
ret 
mov eax, 0x1
mov ecx, 0xffffffff
cmovb eax, ecx
ret 
test eax, eax
mov edx, 0x1
jz 0x7fab2cdac1dd
mov rbx, qword ptr [rbx+0x38]
test rbx, rbx
jnz 0x7fab2cdac1c9
jmp 0x7fab2cdac1f0
mov rsi, qword ptr [rbx]
mov rdi, rbp
call 0x7fab2cdb4c20
test eax, eax
jnz 0x7fab2cdac1c0
mov edx, 0x1
add rsp, 0x8
mov eax, edx
pop rbx
pop rbp
ret 
mov rbx, qword ptr [rbx+0x8]
test rbx, rbx
jz 0x7fab2cdac1f0
mov rsi, qword ptr [rbx]
mov rdi, rbp
call 0x7fab2cdb4c20
add rsp, 0x8
xor edx, edx
pop rbx
mov eax, edx
pop rbp
ret 
test eax, eax
jz 0x7fab2cda3c98
mov rax, r15
add rsp, 0x3c8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
test byte ptr [r15+0x315], 0x1
jz 0x7fab2cda433a
mov r15, qword ptr [r15+0x18]
test r15, r15
jz 0x7fab2cda3ce8
movzx eax, byte ptr [r15+0x315]
test al, 0x2
jnz 0x7fab2cda3ca6
mov rax, qword ptr [r15+0xb0]
test rax, rax
jz 0x7fab2cda3ca6
mov rdx, qword ptr [r15+0x68]
mov rdi, rbx
mov rsi, qword ptr [rdx+0x8]
add rsi, qword ptr [rax+0x8]
call 0x7fab2cdb4c20
mov r15, qword ptr [r15+0x18]
test r15, r15
jz 0x7fab2cda3ce8
movzx eax, byte ptr [r15+0x315]
test al, 0x2
jnz 0x7fab2cda3ca6
test al, 0x20
jnz 0x7fab2cda3ca6
mov rsi, r15
mov rdi, rbx
call 0x7fab2cdac190
test eax, eax
jnz 0x7fab2cda3ca6
mov rdi, qword ptr [r15+0x38]
mov rsi, rbx
call 0x7fab2cda0410
test byte ptr [rip+0x219fd1], 0x40
jnz 0x7fab2cda3dd5
mov r8d, dword ptr [rip+0x21a0ec]
test r8d, r8d
jnz 0x7fab2cda4500
mov eax, r13d
and eax, 0x10000000
mov dword ptr [rsp+0x20], eax
mov esi, 0x2f
mov rdi, rbx
mov byte ptr [rsp+0x60], 0x0
call 0x7fab2cdb4a00
test rax, rax
jz 0x7fab2cda3e5b
test r12, r12
jz 0x7fab2cda3fa8
xor edx, edx
mov rsi, rbx
mov rdi, r12
call 0x7fab2cda2da0
mov rdi, rbx
call 0x7fab2cdb4c50
mov rcx, rdi
and ecx, 0x7
mov rax, rdi
jz 0x7fab2cdb4c70
neg ecx
add ecx, 0x8
cmp byte ptr [rax], 0x0
jz 0x7fab2cdb4d35
inc rax
dec ecx
jnz 0x7fab2cdb4c60
cmp byte ptr [rax], 0x0
jz 0x7fab2cdb4d35
inc rax
dec ecx
jnz 0x7fab2cdb4c60
mov r8, 0xfefefefefefefeff
nop word ptr [rax+rax*1], ax
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
xor rdx, rcx
or rdx, r8
inc rdx
jnz 0x7fab2cdb4cf0
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
xor rdx, rcx
or rdx, r8
inc rdx
jnz 0x7fab2cdb4cf0
sub rax, 0x8
test cl, cl
jz 0x7fab2cdb4d35
inc rax
test ch, ch
jz 0x7fab2cdb4d35
inc rax
test ecx, 0xff0000
jz 0x7fab2cdb4d35
sub rax, rdi
ret 
add rax, 0x1
test byte ptr [rip+0x219e52], 0x1
mov qword ptr [rsp+0x28], rax
jnz 0x7fab2cda4467
test r12, r12
jz 0x7fab2cda419c
cmp qword ptr [r12+0x128], 0x0
jz 0x7fab2cda4240
mov rax, qword ptr [rip+0x219e19]
lea rcx, ptr [rsp+0x60]
mov dword ptr [rsp+0x4c], r13d
mov qword ptr [rsp+0x50], rbp
mov byte ptr [rsp+0x48], 0x0
mov rbp, r12
mov r15, rcx
mov qword ptr [rsp+0x40], rax
lea rax, ptr [rsp+0x78]
mov qword ptr [rsp+0x30], rax
lea rax, ptr [rsp+0x68]
mov qword ptr [rsp+0x38], rax
mov eax, r13d
and eax, 0x4000000
mov r13d, eax
jmp 0x7fab2cda42df
mov rax, qword ptr [rbp+0x318]
lea r10, ptr [rbp+0x318]
cmp rax, 0xffffffffffffffff
jz 0x7fab2cda42cf
test rax, rax
jnz 0x7fab2cda4290
lea rcx, ptr [rip+0x133f2]
mov rsi, r10
mov edx, 0xf
mov rdi, rbp
mov qword ptr [rsp+0x58], r10
call 0x7fab2cda34f0
mov rbp, qword ptr [rbp+0x2d8]
test rbp, rbp
jz 0x7fab2cda3ff9
mov rax, qword ptr [rbp+0x318]
lea r10, ptr [rbp+0x318]
cmp rax, 0xffffffffffffffff
jz 0x7fab2cda42cf
test rax, rax
jnz 0x7fab2cda4290
cmp byte ptr [rsp+0x48], 0x0
mov r13d, dword ptr [rsp+0x4c]
mov rbp, qword ptr [rsp+0x50]
jz 0x7fab2cda41a8
cmp qword ptr [rip+0x219e2a], 0xffffffffffffffff
mov rax, r12
jnz 0x7fab2cda3ead
mov eax, 0x1
mov r10d, 0xffffffff
jmp 0x7fab2cda3ef3
mov rcx, qword ptr [rsp+0x40]
test rcx, rcx
jz 0x7fab2cda3e91
movzx eax, byte ptr [rcx+0x314]
and eax, 0x3
cmp al, 0x2
jz 0x7fab2cda3e91
mov rax, qword ptr [rcx+0x318]
lea r15, ptr [rcx+0x318]
cmp rax, 0xffffffffffffffff
jz 0x7fab2cda3e91
cmp qword ptr [rip+0x219fa7], 0xffffffffffffffff
jz 0x7fab2cda401f
test r12, r12
mov rax, r12
cmovz rax, qword ptr [rip+0x21a1b3]
lea rcx, ptr [rsp+0x60]
mov rsi, qword ptr [rsp+0x28]
mov edx, r13d
lea r9, ptr [rsp+0x78]
lea r8, ptr [rsp+0x68]
and edx, 0x4000000
mov qword ptr [rsp+0x10], rcx
lea rcx, ptr [rip+0x219f6a]
mov dword ptr [rsp+0x8], 0x2
mov qword ptr [rsp], rax
mov rdi, rbx
call 0x7fab2cda0ff0
mov eax, 0x1
mov r10d, 0xffffffff
jmp 0x7fab2cda3ef3
test r12, r12
setnz cl
and al, cl
mov byte ptr [rsp+0x30], cl
mov byte ptr [rsp+0x38], al
jz 0x7fab2cda3f6d
mov rax, qword ptr [r12+0x3a8]
lea r15, ptr [r12+0x3a8]
cmp rax, 0xffffffffffffffff
jz 0x7fab2cda404e
test rax, rax
jz 0x7fab2cda402f
movzx eax, byte ptr [rsp+0x38]
mov byte ptr [rsp+0x30], al
mov eax, r13d
and eax, 0x4000000
mov dword ptr [rsp+0x40], eax
jnz 0x7fab2cda4616
mov esi, dword ptr [rip+0x219c71]
test esi, esi
jnz 0x7fab2cda412d
mov rdi, rbx
call 0x7fab2cdb1d00
push r15
push r14
push r13
push r12
push rbp
mov rbp, rdi
push rbx
sub rsp, 0x28
test byte ptr [rip+0x20bfa8], 0x1
jnz 0x7fab2cdb2308
mov r14, qword ptr [rip+0x20d3db]
test r14, r14
jz 0x7fab2cdb1ec7
cmp r14, 0xffffffffffffffff
jz 0x7fab2cdb1e18
lea rsi, ptr [rip+0x20d222]
lea rdi, ptr [rip+0x5f24]
mov edx, 0x1
call 0x7fab2cdabff0
push r13
xor eax, eax
mov r13d, edx
push r12
mov r12, rsi
mov esi, 0x80000
push rbp
mov rbp, 0xffffffffffffffff
push rbx
sub rsp, 0x98
call 0x7fab2cdb4490
mov eax, 0x2
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab2cdb44a0
ret 
test eax, eax
mov ebx, eax
js 0x7fab2cdac04b
mov rdx, rsp
mov esi, eax
mov edi, 0x1
call 0x7fab2cdb4410
cmp edi, 0x1
mov eax, esi
jnbe 0x7fab2cdb4430
movsxd rdi, eax
mov rsi, rdx
mov eax, 0x5
syscall 
cmp rax, 0xfffffffffffff000
jnbe 0x7fab2cdb4440
ret 
test eax, eax
js 0x7fab2cdac03d
mov rsi, qword ptr [rsp+0x30]
test rsi, rsi
mov qword ptr [r12], rsi
jnz 0x7fab2cdac060
mov rbp, 0xffffffffffffffff
mov edi, ebx
call 0x7fab2cdb45f0
xor r9d, r9d
mov r8d, ebx
mov ecx, 0x2
mov edx, r13d
xor edi, edi
call 0x7fab2cdb4610
mov r10, rcx
mov eax, 0x9
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab2cdb4623
ret 
mov rbp, rax
jmp 0x7fab2cdac044
mov edi, ebx
call 0x7fab2cdb45f0
mov eax, 0x3
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab2cdb4600
ret 
add rsp, 0x98
mov rax, rbp
pop rbx
pop rbp
pop r12
pop r13
ret 
cmp rax, 0xffffffffffffffff
mov rbx, rax
jz 0x7fab2cdb1f72
mov r14, qword ptr [rip+0x20d1fd]
cmp r14, 0x10
jbe 0x7fab2cdb1f67
lea rsi, ptr [rip+0x5f1c]
mov edx, 0xb
mov rdi, rax
call 0x7fab2cdb52b0
push r15
mov r8, rdi
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rsi
sub rsp, 0xd0
cmp rdx, 0xf
jbe 0x7fab2cdb53c5
test sil, 0x7
mov r9, rsi
jz 0x7fab2cdb531d
movzx eax, byte ptr [rdi]
movzx ecx, byte ptr [rsi]
add r8, 0x1
add rbx, 0x1
sub rax, rcx
jz 0x7fab2cdb5311
test rdx, rdx
jz 0x7fab2cdb5400
movzx eax, byte ptr [r8]
movzx esi, byte ptr [rbx]
lea rcx, ptr [r8+0x1]
sub rax, rsi
jnz 0x7fab2cdb5402
add rdx, r8
sub rbx, r8
jmp 0x7fab2cdb53fb
cmp rcx, rdx
jnz 0x7fab2cdb53e8
xor eax, eax
add rsp, 0xd0
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
mov rsi, rcx
add rcx, 0x1
movzx eax, byte ptr [rsi]
movzx esi, byte ptr [rbx+rsi*1]
sub rax, rsi
jnz 0x7fab2cdb5402
cmp rcx, rdx
jnz 0x7fab2cdb53e8
xor eax, eax
add rsp, 0xd0
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
test eax, eax
jnz 0x7fab2cdb1f82
mov eax, dword ptr [rbx+0xc]
mov qword ptr [rip+0x20d1e5], rbx
lea rax, ptr [rax+rax*2]
lea rax, ptr [rax*4+0x17]
and rax, 0xfffffffffffffff8
lea rdi, ptr [rbx+rax*1]
add rax, 0x30
cmp r14, rax
mov qword ptr [rip+0x20d1bb], rdi
jb 0x7fab2cdb1f54
lea rsi, ptr [rip+0x5ee2]
mov edx, 0x14
call 0x7fab2cdb52b0
mov rdi, r8
mov rax, rdx
shr rax, 0x3
and edi, 0x7
jnz 0x7fab2cdb5418
mov rcx, rax
and ecx, 0x3
cmp rcx, 0x1
jz 0x7fab2cdb56b7
jb 0x7fab2cdb5667
cmp rcx, 0x3
jnz 0x7fab2cdb54af
mov rdi, qword ptr [r8]
mov rsi, qword ptr [rbx]
lea rcx, ptr [r8-0x8]
lea rbx, ptr [r9-0x8]
add rax, 0x1
cmp rdi, rsi
mov r11, qword ptr [rcx+0x10]
mov r10, qword ptr [rbx+0x10]
jz 0x7fab2cdb54c1
mov qword ptr [rsp-0x28], rdi
lea r10, ptr [rsp-0x28]
lea rdi, ptr [rsp-0x38]
mov qword ptr [rsp-0x38], rsi
xor eax, eax
nop dword ptr [rax], eax
movzx esi, byte ptr [r10+rax*1]
movzx ecx, byte ptr [rdi+rax*1]
add rax, 0x1
cmp sil, cl
jz 0x7fab2cdb5390
mov r11, qword ptr [r8]
mov r10, qword ptr [rbx]
lea rcx, ptr [r8-0x10]
lea rbx, ptr [r9-0x10]
add rax, 0x2
cmp r11, r10
mov rdi, qword ptr [rcx+0x18]
mov rsi, qword ptr [rbx+0x18]
jz 0x7fab2cdb57ae
mov qword ptr [rsp-0x58], r10
lea rdi, ptr [rsp-0x58]
lea r10, ptr [rsp-0x48]
mov qword ptr [rsp-0x48], r11
xor eax, eax
nop dword ptr [rax+rax*1], eax
movzx esi, byte ptr [r10+rax*1]
movzx ecx, byte ptr [rdi+rax*1]
add rax, 0x1
cmp sil, cl
jz 0x7fab2cdb54f0
jmp 0x7fab2cdb53a8
sub rax, 0x4
jz 0x7fab2cdb5757
add rcx, 0x20
add rbx, 0x20
jmp 0x7fab2cdb56cf
cmp rdi, rsi
jz 0x7fab2cdb53b5
mov qword ptr [rsp-0x68], rdi
lea r10, ptr [rsp-0x68]
lea rdi, ptr [rsp-0x78]
mov qword ptr [rsp-0x78], rsi
xor eax, eax
nop word ptr [rax+rax*1], ax
movzx esi, byte ptr [r10+rax*1]
movzx ecx, byte ptr [rdi+rax*1]
add rax, 0x1
cmp sil, cl
jz 0x7fab2cdb5780
jmp 0x7fab2cdb53a8
mov rbx, rdx
and edx, 0x7
and rbx, 0xfffffffffffffff8
add r8, rbx
add rbx, r9
test rdx, rdx
jz 0x7fab2cdb5400
movzx eax, byte ptr [r8]
movzx esi, byte ptr [rbx]
lea rcx, ptr [r8+0x1]
sub rax, rsi
jnz 0x7fab2cdb5402
add rdx, r8
sub rbx, r8
jmp 0x7fab2cdb53fb
test eax, eax
jz 0x7fab2cdb1f5f
mov qword ptr [rip+0x20d199], 0xffffffffffffffff
mov rax, rbx
jmp 0x7fab2cdb1d42
mov rax, rbx
jmp 0x7fab2cdb1d42
mov r12, qword ptr [rip+0x20d3af]
cmp r12, 0xffffffffffffffff
jz 0x7fab2cdb1e30
add rax, r14
lea rdi, ptr [rip+0x5b66]
xor esi, esi
mov qword ptr [rsp], rax
sub qword ptr [rsp], r12
mov rbx, qword ptr [rsp]
call 0x7fab2cdb44f0
mov dword ptr [rsp+0x18], eax
mov rax, qword ptr [rip+0x20bf9d]
mov r13d, ebx
mov qword ptr [rsp+0x8], rax
mov rax, qword ptr [rip+0x20bf96]
mov qword ptr [rsp+0x10], rax
mov rax, qword ptr [rip+0x20d362]
mov r15d, dword ptr [rax+0x14]
sub r15d, 0x1
js 0x7fab2cdb1e18
mov r14d, r15d
sar r14d, 0x1
movsxd rsi, r14d
lea rsi, ptr [rsi+rsi*2]
mov esi, dword ptr [rax+rsi*8+0x34]
cmp ebx, esi
jbe 0x7fab2cdb1e18
xor ebx, ebx
jmp 0x7fab2cdb1df3
add rsi, r12
mov rdi, rbp
call 0x7fab2cdb1c10
movsx edx, byte ptr [rdi]
movsx eax, byte ptr [rsi]
nop word ptr [rax+rax*1], ax
test dl, dl
jz 0x7fab2cdb1ce1
lea ecx, ptr [rdx-0x30]
cmp cl, 0x9
lea ecx, ptr [rax-0x30]
jnbe 0x7fab2cdb1cc0
cmp cl, 0x9
jnbe 0x7fab2cdb1cf6
cmp cl, 0x9
jbe 0x7fab2cdb1ce9
cmp dl, al
jnz 0x7fab2cdb1cf1
movsx edx, byte ptr [rdi+0x1]
movsx eax, byte ptr [rsi+0x1]
add rdi, 0x1
add rsi, 0x1
test dl, dl
jnz 0x7fab2cdb1c28
lea ecx, ptr [rdx-0x30]
cmp cl, 0x9
lea ecx, ptr [rax-0x30]
jnbe 0x7fab2cdb1cc0
cmp cl, 0x9
jnbe 0x7fab2cdb1cf6
lea r8d, ptr [rdx-0x30]
movsx edx, byte ptr [rdi+0x1]
lea ecx, ptr [rax-0x30]
lea r10, ptr [rdi+0x1]
lea r9, ptr [rsi+0x1]
mov rdi, r10
lea eax, ptr [rdx-0x30]
cmp al, 0x9
jnbe 0x7fab2cdb1c77
sub edx, eax
mov eax, edx
ret 
test eax, eax
jz 0x7fab2cdb1fd8
jns 0x7fab2cdb1dc0
lea ebx, ptr [r14+0x1]
cmp ebx, r15d
nop 
jle 0x7fab2cdb1dc9
lea r15d, ptr [r14-0x1]
cmp ebx, r15d
jnle 0x7fab2cdb1e18
lea eax, ptr [rbx+r15*1]
mov rsi, qword ptr [rip+0x20d324]
mov edx, eax
shr edx, 0x1f
lea r14d, ptr [rdx+rax*1]
sar r14d, 0x1
movsxd rax, r14d
lea rax, ptr [rax+rax*2]
lea rax, ptr [rsi+rax*8]
mov esi, dword ptr [rax+0x34]
cmp r13d, esi
jbe 0x7fab2cdb1e18
add rsi, r12
mov rdi, rbp
call 0x7fab2cdb1c10
lea eax, ptr [rbx+r15*1]
mov rsi, qword ptr [rip+0x20d324]
mov edx, eax
shr edx, 0x1f
lea r14d, ptr [rdx+rax*1]
sar r14d, 0x1
movsxd rax, r14d
lea rax, ptr [rax+rax*2]
lea rax, ptr [rsi+rax*8]
mov esi, dword ptr [rax+0x34]
cmp r13d, esi
jbe 0x7fab2cdb1e18
add rsi, r12
mov rdi, rbp
call 0x7fab2cdb1c10
movsx eax, byte ptr [rsi+0x1]
lea esi, ptr [rax-0x30]
cmp sil, 0x9
mov rsi, r9
jnbe 0x7fab2cdb1ca8
nop word ptr [rax+rax*1], ax
lea ecx, ptr [rcx+rcx*4]
add rsi, 0x1
lea ecx, ptr [rax+rcx*2-0x30]
movsx eax, byte ptr [rsi]
lea r9d, ptr [rax-0x30]
cmp r9b, 0x9
jbe 0x7fab2cdb1c90
cmp r8d, ecx
jz 0x7fab2cdb1c20
cmp r8d, ecx
jz 0x7fab2cdb1c20
mov edx, r8d
sub edx, ecx
mov eax, edx
ret 
test dl, dl
jz 0x7fab2cdb1ce1
lea ecx, ptr [rdx-0x30]
cmp cl, 0x9
lea ecx, ptr [rax-0x30]
jnbe 0x7fab2cdb1cc0
cmp cl, 0x9
jnbe 0x7fab2cdb1cf6
movsx edx, al
neg edx
mov eax, edx
ret 
test r14d, r14d
mov dword ptr [rsp+0x1c], r14d
jle 0x7fab2cdb203a
lea ebx, ptr [r14-0x1]
mov rax, qword ptr [rip+0x20d10b]
movsxd rsi, ebx
lea rsi, ptr [rsi+rsi*2]
mov esi, dword ptr [rax+rsi*8+0x34]
cmp dword ptr [rsp], esi
jnbe 0x7fab2cdb202b
jmp 0x7fab2cdb22d5
add rsi, r12
mov rdi, rbp
call 0x7fab2cdb1c10
test eax, eax
jz 0x7fab2cdb2008
mov rax, qword ptr [rip+0x20d0b7]
mov ebx, r14d
mov r14, qword ptr [rsp+0x10]
and r14, qword ptr [rsp+0x8]
mov rsi, 0x8000000000000000
mov ecx, dword ptr [rsp+0x18]
xor r8d, r8d
or r14, rsi
test ecx, ecx
not r14
jz 0x7fab2cdb212b
jmp 0x7fab2cdb2083
cmp ebx, dword ptr [rsp+0x1c]
movsxd rsi, ebx
lea rsi, ptr [rsi+rsi*2]
lea rdx, ptr [rax+rsi*8+0x30]
jle 0x7fab2cdb20c7
mov eax, dword ptr [rdx+0x4]
mov qword ptr [rsp+0x8], rdx
cmp r13d, eax
jbe 0x7fab2cdb21c1
lea rsi, ptr [r12+rax*1]
mov rdi, rbp
mov qword ptr [rsp], r8
call 0x7fab2cdb1c10
cmp dword ptr [rdx], 0x303
jnz 0x7fab2cdb2070
mov eax, dword ptr [rdx+0x8]
cmp r13d, eax
jbe 0x7fab2cdb2070
test r8, r8
jz 0x7fab2cdb20e8
test qword ptr [rdx+0x10], r14
jnz 0x7fab2cdb2070
mov esi, dword ptr [rip+0x20bbd0]
test esi, esi
jnz 0x7fab2cdb22c7
cmp dword ptr [rip+0x20bc0e], 0x303
lea r8, ptr [r12+rax*1]
jnz 0x7fab2cdb2070
cmp dword ptr [rdx+0xc], esi
jnbe 0x7fab2cdb2070
jmp 0x7fab2cdb20fc
cmp dword ptr [rip+0x20bc0e], 0x303
lea r8, ptr [r12+rax*1]
jnz 0x7fab2cdb2070
jmp 0x7fab2cdb21c1
test byte ptr [rip+0x20baf8], 0x1
jnz 0x7fab2cdb22de
add rsp, 0x28
mov rax, r8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
test rax, rax
mov qword ptr [rsp+0x38], rax
jz 0x7fab2cda412d
cmp byte ptr [rsp+0x30], 0x0
mov rax, r12
jz 0x7fab2cda4396
test byte ptr [rax+0x3d5], 0x8
jnz 0x7fab2cda43e2
cmp byte ptr [rsp+0x30], 0x0
mov rdx, r12
jz 0x7fab2cda43d0
mov r15, qword ptr [rsp+0x38]
lea rsi, ptr [rsp+0x78]
lea r8, ptr [rsp+0x60]
mov ecx, 0x8
mov rdi, r15
call 0x7fab2cda0af0
push rbp
mov rbp, rsp
push r15
push r14
push r13
mov r13, r8
push r12
push rbx
mov rbx, rsi
sub rsp, 0x28
mov eax, dword ptr [rip+0x21d2db]
mov qword ptr [rbp-0x40], rdi
test eax, eax
jnz 0x7fab2cda0f16
mov rdi, qword ptr [rbp-0x40]
xor eax, eax
mov esi, 0x80000
call 0x7fab2cdb4490
cmp eax, 0xffffffff
mov dword ptr [rbp-0x34], eax
jz 0x7fab2cda0d42
mov dword ptr [rip+0x21e641], 0x0
xor r14d, r14d
mov qword ptr [rbx], 0x0
mov r15d, 0x340
mov edi, dword ptr [rbp-0x34]
mov rdx, r15
lea rsi, ptr [rbx+r14*1+0x8]
sub rdx, r14
call 0x7fab2cdb44b0
mov eax, 0x0
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab2cdb44c0
ret 
test rax, rax
jle 0x7fab2cda0e83
add rax, qword ptr [rbx]
cmp rax, 0x3f
mov r14, rax
mov qword ptr [rbx], rax
jbe 0x7fab2cda0b4f
cmp r14, 0x3f
jle 0x7fab2cda0ef7
lea r15, ptr [rbx+0x8]
lea rsi, ptr [rip+0x19b91]
mov edx, 0x8
mov rdi, r15
call 0x7fab2cdb52b0
test eax, eax
jnz 0x7fab2cda0f90
movzx eax, byte ptr [rbx+0x10]
test al, al
jnz 0x7fab2cda0d56
lea rdi, ptr [rbx+0x11]
lea rsi, ptr [rip+0x19b6e]
mov edx, 0x7
call 0x7fab2cdb52b0
test eax, eax
jnz 0x7fab2cda0d64
cmp dword ptr [rbx+0x1c], 0x1
jnz 0x7fab2cda0fbf
cmp word ptr [rbx+0x1a], 0x3e
jnz 0x7fab2cda0d30
movzx eax, word ptr [rbx+0x18]
sub eax, 0x2
cmp ax, 0x1
jnbe 0x7fab2cda0fcd
cmp word ptr [rbx+0x3e], 0x38
jnz 0x7fab2cda0fdb
movzx ecx, word ptr [rbx+0x40]
mov rsi, qword ptr [rbx+0x28]
movzx r8d, cx
lea rax, ptr [r8*8]
shl r8, 0x6
mov r13, r8
sub r13, rax
lea rax, ptr [r13+rsi*1]
cmp rax, r14
jnbe 0x7fab2cda0df8
lea r15, ptr [rbx+rsi*1+0x8]
mov r8, r13
add r8, r15
cmp r15, r8
jnb 0x7fab2cda0d98
mov r14, r15
jmp 0x7fab2cda0c6a
cmp dword ptr [r14], 0x4
jnz 0x7fab2cda0c48
mov r12, qword ptr [r14+0x20]
cmp r12, 0x1f
jbe 0x7fab2cda0c48
cmp qword ptr [r14+0x30], 0x3
jbe 0x7fab2cda0c48
movzx eax, cx
add r14, 0x38
lea rdx, ptr [rax*8]
shl rax, 0x6
sub rax, rdx
add rax, r15
cmp r14, rax
jnb 0x7fab2cda0d98
cmp dword ptr [r14], 0x4
jnz 0x7fab2cda0c48
mov r12, qword ptr [r14+0x20]
cmp r12, 0x1f
jbe 0x7fab2cda0c48
cmp qword ptr [r14+0x30], 0x3
jbe 0x7fab2cda0c48
mov rsi, qword ptr [r14+0x8]
lea rax, ptr [rsi+r12*1]
cmp rax, qword ptr [rbx]
jnbe 0x7fab2cda0db0
lea r13, ptr [rbx+rsi*1+0x8]
jmp 0x7fab2cda0cd1
lea rsi, ptr [rip+0x19a38]
mov edx, 0x10
mov rdi, r13
call 0x7fab2cdb52b0
movzx esi, byte ptr [r10+rax*1]
movzx ecx, byte ptr [rdi+rax*1]
add rax, 0x1
cmp sil, cl
jz 0x7fab2cdb54f0
jmp 0x7fab2cdb53a8
movzx eax, sil
sub eax, ecx
cdqe 
test rax, rax
jnz 0x7fab2cdb5402
mov rbx, rdx
and edx, 0x7
and rbx, 0xfffffffffffffff8
add r8, rbx
add rbx, r9
test rdx, rdx
jz 0x7fab2cdb5400
movzx eax, byte ptr [r8]
movzx esi, byte ptr [rbx]
lea rcx, ptr [r8+0x1]
sub rax, rsi
jnz 0x7fab2cdb5402
add rsp, 0xd0
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
test eax, eax
jnz 0x7fab2cda0ca0
test r12, r12
jz 0x7fab2cda0d88
mov eax, dword ptr [r13+0x10]
mov r8d, dword ptr [r13+0x14]
mov edi, dword ptr [r13+0x18]
mov esi, dword ptr [r13+0x1c]
test eax, eax
jnz 0x7fab2cda0d30
mov esi, dword ptr [r13]
mov eax, dword ptr [r13+0x4]
lea rdx, ptr [r12-0x20]
add rsi, 0x3
add rax, 0x3
and rsi, 0xfffffffffffffffc
and rax, 0xfffffffffffffffc
lea rax, ptr [rsi+rax*1+0xc]
cmp rax, rdx
jnbe 0x7fab2cda0d88
sub r12, rax
add r13, rax
lea rsi, ptr [rip+0x19a38]
mov edx, 0x10
mov rdi, r13
call 0x7fab2cdb52b0
mov rcx, rax
shl edi, 0x3
mov esi, 0x40
mov rbp, r8
and ecx, 0x3
sub esi, edi
and rbp, 0xfffffffffffffff8
cmp rcx, 0x1
jz 0x7fab2cdb55e7
jb 0x7fab2cdb556f
cmp rcx, 0x3
jnz 0x7fab2cdb5507
mov r14, qword ptr [rbx]
lea rbx, ptr [r9-0x10]
mov r11, qword ptr [rbp]
mov r10, qword ptr [rbp+0x8]
add rax, 0x2
sub rbp, 0x8
mov ecx, esi
mov r15, r10
mov r12, qword ptr [rbp+0x18]
shl r15, cl
mov ecx, edi
mov r13, qword ptr [rbx+0x18]
shr r11, cl
or r15, r11
cmp r15, r14
jz 0x7fab2cdb5797
lea r10, ptr [rsp+0x58]
lea rdi, ptr [rsp+0x48]
mov qword ptr [rsp+0x58], r15
mov qword ptr [rsp+0x48], r14
xor eax, eax
nop dword ptr [rax], eax
movzx esi, byte ptr [r10+rax*1]
movzx ecx, byte ptr [rdi+rax*1]
add rax, 0x1
cmp sil, cl
jz 0x7fab2cdb5558
jmp 0x7fab2cdb53a8
sub rax, 0x4
jz 0x7fab2cdb5707
add rbp, 0x20
add rbx, 0x20
jmp 0x7fab2cdb5604
mov ecx, esi
shl r12, cl
mov ecx, edi
shr r10, cl
mov rsi, r12
or rsi, r10
cmp rsi, r13
jz 0x7fab2cdb53b5
lea r10, ptr [rsp+0x38]
lea rdi, ptr [rsp+0x28]
mov qword ptr [rsp+0x38], rsi
mov qword ptr [rsp+0x28], r13
xor eax, eax
nop word ptr [rax+rax*1], ax
movzx esi, byte ptr [r10+rax*1]
movzx ecx, byte ptr [rdi+rax*1]
add rax, 0x1
cmp sil, cl
jz 0x7fab2cdb5740
jmp 0x7fab2cdb53a8
xor eax, eax
add rsp, 0xd0
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
mov edx, dword ptr [rip+0x21cfb8]
mov eax, dword ptr [rbp-0x34]
test edx, edx
jz 0x7fab2cda0d47
movzx r8d, r8b
movzx ecx, dil
movzx esi, sil
shl r8d, 0x8
add ecx, r8d
shl ecx, 0x8
add ecx, esi
cmp ecx, edx
jbe 0x7fab2cda0d47
nop 
mov edi, dword ptr [rbp-0x34]
call 0x7fab2cdb45f0
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
cmp eax, 0xffffffff
mov dword ptr [rsp+0x48], eax
jz 0x7fab2cda412d
mov rdi, r15
mov qword ptr [rsp+0x38], r15
call 0x7fab2cdb4c50
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
xor rdx, rcx
or rdx, r8
inc rdx
jnz 0x7fab2cdb4cf0
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
xor rdx, rcx
or rdx, r8
inc rdx
jz 0x7fab2cdb4c80
nop dword ptr [rax+rax*1], eax
sub rax, 0x8
test cl, cl
jz 0x7fab2cdb4d35
inc rax
test ch, ch
jz 0x7fab2cdb4d35
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
xor rdx, rcx
or rdx, r8
inc rdx
jnz 0x7fab2cdb4cf0
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
inc rax
test ecx, 0xff000000
jz 0x7fab2cdb4d35
inc rax
shr rcx, 0x20
test cl, cl
jz 0x7fab2cdb4d35
inc rax
test ch, ch
jz 0x7fab2cdb4d35
lea r15, ptr [rax+0x1]
mov rdi, r15
call 0x7fab2cd9ba90
jmp qword ptr [rip+0x22258a]
mov rsi, rdi
mov edi, 0x8
jmp 0x7fab2cd9ba80
jmp qword ptr [rip+0x222592]
push rbp
push rbx
mov rbx, rsi
sub rsp, 0x8
mov rax, qword ptr [rip+0x20c668]
test rax, rax
jz 0x7fab2cdb2b70
mov rdx, qword ptr [rip+0x20c660]
mov rcx, rax
lea rax, ptr [rdx+rdi*1-0x1]
neg rdi
and rax, rdi
lea rdx, ptr [rax+rbx*1]
mov qword ptr [rip+0x20c647], rax
cmp rdx, rcx
jnb 0x7fab2cdb2ae9
mov rcx, rax
neg rcx
cmp rbx, rcx
jb 0x7fab2cdb2b68
mov rbx, rdx
mov rdx, rax
jmp 0x7fab2cdb2b49
mov qword ptr [rip+0x20c5c0], rdx
mov qword ptr [rip+0x20c5c9], rbx
add rsp, 0x8
mov rax, rdx
pop rbx
pop rbp
ret 
test rax, rax
mov r10d, dword ptr [rsp+0x48]
jz 0x7fab2cda4534
mov rsi, qword ptr [rsp+0x38]
mov rdx, r15
mov rdi, rax
call 0x7fab2cdb5ba0
cmp rdx, 0x20
mov rax, rdi
jnb 0x7fab2cdb5c20
test dl, 0x1
jz 0x7fab2cdb5bb9
movzx ecx, byte ptr [rsi]
mov byte ptr [rdi], cl
inc rsi
inc rdi
test dl, 0x2
jz 0x7fab2cdb5bd0
mov qword ptr [rsp-0x8], rax
mov ecx, esi
and ecx, 0x7
jz 0x7fab2cdb5c60
lea rdx, ptr [rcx+rdx*1-0x8]
sub ecx, 0x8
nop word ptr [rax+rax*1], ax
movzx eax, byte ptr [rsi]
mov byte ptr [rdi], al
inc ecx
lea rsi, ptr [rsi+0x1]
lea rdi, ptr [rdi+0x1]
jnz 0x7fab2cdb5c40
nop word ptr [rax+rax*1], ax
cmp rdx, 0x400
jnbe 0x7fab2cdb5ce0
movzx eax, byte ptr [rsi]
mov byte ptr [rdi], al
inc ecx
lea rsi, ptr [rsi+0x1]
lea rdi, ptr [rdi+0x1]
jnz 0x7fab2cdb5c40
nop word ptr [rax+rax*1], ax
cmp rdx, 0x400
jnbe 0x7fab2cdb5ce0
mov ecx, edx
shr ecx, 0x5
jz 0x7fab2cdb5cd0
dec ecx
mov rax, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov r9, qword ptr [rsi+0x10]
mov r10, qword ptr [rsi+0x18]
mov qword ptr [rdi], rax
mov qword ptr [rdi+0x8], r8
mov qword ptr [rdi+0x10], r9
mov qword ptr [rdi+0x18], r10
lea rsi, ptr [rsi+0x20]
lea rdi, ptr [rdi+0x20]
jz 0x7fab2cdb5cd0
dec ecx
mov rax, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov r9, qword ptr [rsi+0x10]
mov r10, qword ptr [rsi+0x18]
mov qword ptr [rdi], rax
mov qword ptr [rdi+0x8], r8
mov qword ptr [rdi+0x10], r9
mov qword ptr [rdi+0x18], r10
lea rsi, ptr [rsi+0x20]
lea rdi, ptr [rdi+0x20]
jnz 0x7fab2cdb5c70
nop word ptr [rax+rax*1], ax
and edx, 0x1f
mov rax, qword ptr [rsp-0x8]
jnz 0x7fab2cdb5ba9
and edx, 0x1f
mov rax, qword ptr [rsp-0x8]
jnz 0x7fab2cdb5ba9
ret 
test dl, 0x1
jz 0x7fab2cdb5bb9
movzx ecx, byte ptr [rsi]
mov byte ptr [rdi], cl
inc rsi
inc rdi
test dl, 0x2
jz 0x7fab2cdb5bd0
movzx ecx, word ptr [rsi]
mov word ptr [rdi], cx
add rsi, 0x2
add rdi, 0x2
nop dword ptr [rax], eax
test dl, 0x4
jz 0x7fab2cdb5be1
test dl, 0x2
jz 0x7fab2cdb5bd0
movzx ecx, word ptr [rsi]
mov word ptr [rdi], cx
add rsi, 0x2
add rdi, 0x2
nop dword ptr [rax], eax
test dl, 0x4
jz 0x7fab2cdb5be1
mov ecx, dword ptr [rsi]
mov dword ptr [rdi], ecx
add rsi, 0x4
add rdi, 0x4
test dl, 0x8
jz 0x7fab2cdb5bf4
test dl, 0x4
jz 0x7fab2cdb5be1
mov ecx, dword ptr [rsi]
mov dword ptr [rdi], ecx
add rsi, 0x4
add rdi, 0x4
test dl, 0x8
jz 0x7fab2cdb5bf4
mov rcx, qword ptr [rsi]
mov qword ptr [rdi], rcx
add rsi, 0x8
add rdi, 0x8
and edx, 0xf0
jz 0x7fab2cdb5c1b
and edx, 0xf0
jz 0x7fab2cdb5c1b
nop dword ptr [rax], eax
mov rcx, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov qword ptr [rdi], rcx
mov qword ptr [rdi+0x8], r8
sub edx, 0x10
lea rsi, ptr [rsi+0x10]
lea rdi, ptr [rdi+0x10]
jnz 0x7fab2cdb5c00
ret 
ret 
test rax, rax
mov qword ptr [rsp+0x68], rax
mov r10d, dword ptr [rsp+0x48]
jnz 0x7fab2cda3f77
mov edi, r10d
call 0x7fab2cdb45f0
test byte ptr [rip+0x219d42], 0x1
jz 0x7fab2cda3d7b
lea rdi, ptr [rip+0x133ed]
xor eax, eax
mov dword ptr [rsp+0x28], r10d
call 0x7fab2cdac080
mov ecx, dword ptr [rsp+0x20]
mov eax, 0x0
test ecx, ecx
cmovnz r12, rax
cmp r10d, 0xffffffff
jz 0x7fab2cda4542
mov rax, qword ptr [rip+0x21a0c5]
mov r9d, dword ptr [rsp+0x1c]
lea rdx, ptr [rsp+0x78]
mov rcx, qword ptr [rsp+0x68]
mov qword ptr [rsp+0x10], rbp
mov r8, r12
mov dword ptr [rsp], r13d
mov esi, r10d
mov rdi, rbx
mov qword ptr [rsp+0x70], rax
lea rax, ptr [rsp+0x70]
mov qword ptr [rsp+0x8], rax
call 0x7fab2cda15d0
push rbp
mov rbp, rsp
push r15
push r14
mov r14d, esi
push r13
push r12
mov r12, r8
push rbx
mov ebx, r9d
sub rsp, 0x128
mov dword ptr [rbp-0xe4], esi
mov rsi, qword ptr [rbp+0x20]
mov qword ptr [rbp-0xf8], rdi
xor edi, edi
mov qword ptr [rbp-0x100], rdx
mov qword ptr [rbp-0x108], rcx
call 0x7fab2cdab950
test rsi, rsi
jz 0x7fab2cdab9a8
lea rax, ptr [rsi+rsi*8]
lea rdx, ptr [rip+0x212700]
shl rax, 0x4
lea rax, ptr [rdx+rax*1+0x68]
cmp qword ptr [rax+0x8], 0x0
jz 0x7fab2cdab9b6
test rdi, rdi
jz 0x7fab2cdab9d0
mov rax, qword ptr [rip+0x212639]
cmp qword ptr [rax+0x8], 0x0
jnz 0x7fab2cdab970
test rdi, rdi
mov dword ptr [rax], 0x1
jnz 0x7fab2cdab97b
mov rdx, qword ptr [rip+0x212620]
mov rdi, qword ptr [rdx+0x20]
jmp 0x7fab2cdab97b
test rdi, rdi
jz 0x7fab2cdab9d0
mov dword ptr [rax], 0x1
lea rdx, ptr [rsi+rsi*8]
lea rcx, ptr [rip+0x2126da]
mov qword ptr [rax+0x20], rdi
shl rdx, 0x4
mov rdx, qword ptr [rcx+rdx*1]
lea rcx, ptr [rip-0x59]
mov qword ptr [rax+0x10], rcx
mov qword ptr [rax+0x8], rdx
ret 
ret 
lea rdx, ptr [rbp-0xc0]
mov esi, r14d
mov edi, 0x1
mov qword ptr [rbp-0xf0], rax
call 0x7fab2cdb4410
test eax, eax
js 0x7fab2cda25bf
mov rax, qword ptr [rbp+0x20]
lea rdi, ptr [rip+0x21ca1f]
lea rax, ptr [rax+rax*8]
shl rax, 0x4
mov r13, qword ptr [rdi+rax*1]
test r13, r13
jz 0x7fab2cda16f0
mov rax, qword ptr [rbp-0xb8]
mov rdx, qword ptr [rbp-0xc0]
jmp 0x7fab2cda1679
test byte ptr [r13+0x315], 0x20
jnz 0x7fab2cda1670
cmp qword ptr [r13+0x3a0], rax
jnz 0x7fab2cda1670
cmp qword ptr [r13+0x398], rdx
jnz 0x7fab2cda1670
mov r13, qword ptr [r13+0x18]
test r13, r13
jz 0x7fab2cda16f0
test byte ptr [r13+0x315], 0x20
jnz 0x7fab2cda1670
cmp qword ptr [r13+0x3a0], rax
jnz 0x7fab2cda1670
cmp qword ptr [rbp+0x20], 0x0
jnz 0x7fab2cda2280
test byte ptr [rbp+0x10], 0x4
jnz 0x7fab2cda2176
test byte ptr [rip+0x21c5b4], 0x40
jnz 0x7fab2cda25a1
mov rax, qword ptr [rbp-0xf0]
mov eax, dword ptr [rax+0x18]
test eax, eax
jz 0x7fab2cda18b8
cmp eax, 0x1
jnz 0x7fab2cda25d5
mov byte ptr [rbp-0xe7], 0x0
mov r9, qword ptr [rbp+0x20]
mov r8d, dword ptr [rbp+0x10]
mov rcx, r12
mov rsi, qword ptr [rbp-0xf8]
mov rdi, qword ptr [rbp-0x108]
mov edx, ebx
call 0x7fab2cda6a70
push r15
push r14
push r13
push r12
mov r12, r9
push rbp
push rbx
mov rbx, rcx
sub rsp, 0x38
mov qword ptr [rsp+0x8], rdi
mov rdi, rsi
mov dword ptr [rsp+0x24], edx
mov qword ptr [rsp+0x18], rsi
mov dword ptr [rsp+0x10], r8d
call 0x7fab2cdb4c50
mov r13d, dword ptr [rip+0x217342]
mov rbp, rax
lea rdx, ptr [rax+0x1]
mov r15d, r13d
shl r15, 0x4
test r13d, r13d
jnz 0x7fab2cda6add
mov eax, dword ptr [rsp+0x10]
and eax, 0x20000000
cmp eax, 0x1
sbb r15, r15
not r15
and r15d, 0x100
test eax, eax
mov eax, 0x10
cmovnz r13d, eax
lea rdi, ptr [r15+rbp*1+0x491]
mov esi, 0x1
mov qword ptr [rsp+0x28], rdx
call 0x7fab2cd9bab0
jmp qword ptr [rip+0x22257a]
mov rcx, rdi
mov eax, 0xffffffff
mov rdx, rcx
or rdx, rsi
imul rdi, rsi
cmp rdx, rax
jnbe 0x7fab2cdb2bdc
jmp 0x7fab2cd9ba90
test rax, rax
mov r14, rax
jz 0x7fab2cda6da1
lea r15, ptr [rax+r15*1+0x470]
mov rdx, qword ptr [rsp+0x28]
mov rsi, qword ptr [rsp+0x18]
mov qword ptr [r14+0x28], rax
lea rdi, ptr [r15+0x20]
mov qword ptr [rax+0x2c8], r15
lea rax, ptr [r15+0x8]
mov qword ptr [r14+0x38], rax
call 0x7fab2cdb5ba0
test dl, 0x8
jz 0x7fab2cdb5bf4
mov rcx, qword ptr [rsi]
mov qword ptr [rdi], rcx
add rsi, 0x8
add rdi, 0x8
and edx, 0xf0
jz 0x7fab2cdb5c1b
nop dword ptr [rax], eax
mov rcx, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov qword ptr [rdi], rcx
mov qword ptr [rdi+0x8], r8
sub edx, 0x10
lea rsi, ptr [rsi+0x10]
lea rdi, ptr [rdi+0x10]
jnz 0x7fab2cdb5c00
mov qword ptr [r15+0x8], rax
add rbp, rax
mov rax, qword ptr [rsp+0x8]
mov dword ptr [r15+0x18], 0x1
movzx r15d, byte ptr [rsp+0x24]
cmp byte ptr [rax], 0x0
cmovnz rbp, rax
movzx eax, byte ptr [r14+0x314]
and r15d, 0x3
mov qword ptr [r14+0x8], rbp
and eax, 0xfffffffc
or eax, r15d
test byte ptr [rip+0x217155], 0x1
mov byte ptr [r14+0x314], al
jz 0x7fab2cda6d18
test r13d, r13d
mov qword ptr [r14+0x2d8], rbx
mov qword ptr [r14+0x30], r12
jz 0x7fab2cda6bb0
lea eax, ptr [r13-0x1]
mov rdx, r14
shl rax, 0x4
lea rax, ptr [r14+rax*1+0x10]
nop dword ptr [rax], eax
mov qword ptr [rdx+0x470], r14
add rdx, 0x10
cmp rdx, rax
jnz 0x7fab2cda6ba0
mov dword ptr [r14+0x3cc], 0x1
jmp 0x7fab2cda6b79
test r13d, r13d
mov qword ptr [r14+0x2d8], rbx
mov qword ptr [r14+0x30], r12
jz 0x7fab2cda6bb0
lea eax, ptr [r13-0x1]
mov rdx, r14
shl rax, 0x4
lea rax, ptr [r14+rax*1+0x10]
nop dword ptr [rax], eax
mov qword ptr [rdx+0x470], r14
add rdx, 0x10
cmp rdx, rax
jnz 0x7fab2cda6ba0
lea rax, ptr [r14+0x358]
lea rdx, ptr [rip+0x2174a2]
mov qword ptr [r14+0x378], 0x4
mov qword ptr [r14+0x380], rax
lea rax, ptr [r12+r12*8]
shl rax, 0x4
mov rax, qword ptr [rdx+rax*1]
xor edx, edx
test rax, rax
jz 0x7fab2cda6bf5
lea rax, ptr [r14+0x358]
lea rdx, ptr [rip+0x2174a2]
mov qword ptr [r14+0x378], 0x4
mov qword ptr [r14+0x380], rax
lea rax, ptr [r12+r12*8]
shl rax, 0x4
mov rax, qword ptr [rdx+rax*1]
xor edx, edx
test rax, rax
jz 0x7fab2cda6bf5
add rax, 0x2b8
mov edx, 0x1
mov qword ptr [r14+0x358], rax
test rbx, rbx
jnz 0x7fab2cda6c03
jmp 0x7fab2cda6d28
mov rax, qword ptr [rbx+0x2d8]
test rax, rax
jnz 0x7fab2cda6c00
test edx, edx
lea rcx, ptr [rbx+0x2b8]
jnz 0x7fab2cda6ce8
xor eax, eax
mov qword ptr [r14+rax*1+0x358], rcx
lea rax, ptr [r14+0x2b8]
mov qword ptr [r14+0x388], rax
mov rax, qword ptr [rsp+0x8]
movzx ebp, byte ptr [rax]
mov rax, r14
test bpl, bpl
jz 0x7fab2cda6cd2
mov rax, qword ptr [r14+0x358]
cmp rcx, rax
jz 0x7fab2cda6c28
test byte ptr [rsp+0x10], 0x8
jz 0x7fab2cda6db4
mov qword ptr [r14+0x360], rax
xor eax, eax
jmp 0x7fab2cda6c20
lea rax, ptr [r14+0x2b8]
mov qword ptr [r14+0x388], rax
mov rax, qword ptr [rsp+0x8]
movzx ebp, byte ptr [rax]
mov rax, r14
test bpl, bpl
jz 0x7fab2cda6cd2
mov rdi, qword ptr [rsp+0x8]
xor r12d, r12d
call 0x7fab2cdb4c50
mov r8, 0xfefefefefefefeff
nop word ptr [rax+rax*1], ax
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
xor rdx, rcx
or rdx, r8
inc rdx
jnz 0x7fab2cdb4cf0
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
xor rdx, rcx
or rdx, r8
inc rdx
jnz 0x7fab2cdb4cf0
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
xor rdx, rcx
or rdx, r8
inc rdx
jnz 0x7fab2cdb4cf0
mov rcx, qword ptr [rax]
add rax, 0x8
mov rdx, r8
add rdx, rcx
jnb 0x7fab2cdb4cf0
xor rdx, rcx
or rdx, r8
inc rdx
jz 0x7fab2cdb4c80
nop dword ptr [rax+rax*1], eax
sub rax, 0x8
test cl, cl
jz 0x7fab2cdb4d35
mov r13, rax
lea rax, ptr [rax+0x1]
cmp bpl, 0x2f
mov qword ptr [rsp+0x10], rax
mov rbx, rax
jnz 0x7fab2cda6c9f
jmp 0x7fab2cda6d8c
mov rdi, rax
call 0x7fab2cd9ba90
test rax, rax
mov r15, rax
jz 0x7fab2cda6da8
mov rdi, rax
jmp 0x7fab2cda6d5a
mov rdx, qword ptr [rsp+0x10]
mov rsi, qword ptr [rsp+0x8]
call 0x7fab2cdb5970
cmp rdx, 0x20
jnb 0x7fab2cdb59f0
test dl, 0x1
jz 0x7fab2cdb5986
movzx ecx, byte ptr [rsi]
mov byte ptr [rdi], cl
inc rsi
inc rdi
test dl, 0x2
jz 0x7fab2cdb5999
mov ecx, esi
and ecx, 0x7
jz 0x7fab2cdb5a20
lea rdx, ptr [rcx+rdx*1-0x8]
sub ecx, 0x8
nop 
movzx eax, byte ptr [rsi]
mov byte ptr [rdi], al
inc ecx
lea rsi, ptr [rsi+0x1]
lea rdi, ptr [rdi+0x1]
jnz 0x7fab2cdb5a00
nop word ptr [rax+rax*1], ax
cmp rdx, 0x400
jnbe 0x7fab2cdb5aa0
cmp rdx, 0x400
jnbe 0x7fab2cdb5aa0
mov ecx, edx
shr ecx, 0x5
jz 0x7fab2cdb5a90
dec ecx
mov rax, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov r9, qword ptr [rsi+0x10]
mov r10, qword ptr [rsi+0x18]
mov qword ptr [rdi], rax
mov qword ptr [rdi+0x8], r8
mov qword ptr [rdi+0x10], r9
mov qword ptr [rdi+0x18], r10
lea rsi, ptr [rsi+0x20]
lea rdi, ptr [rdi+0x20]
jz 0x7fab2cdb5a90
and edx, 0x1f
jnz 0x7fab2cdb5976
mov rax, rdi
ret 
test dl, 0x1
jz 0x7fab2cdb5986
movzx ecx, byte ptr [rsi]
mov byte ptr [rdi], cl
inc rsi
inc rdi
test dl, 0x2
jz 0x7fab2cdb5999
movzx ecx, word ptr [rsi]
mov word ptr [rdi], cx
add rsi, 0x2
add rdi, 0x2
test dl, 0x4
jz 0x7fab2cdb59aa
test dl, 0x2
jz 0x7fab2cdb5999
movzx ecx, word ptr [rsi]
mov word ptr [rdi], cx
add rsi, 0x2
add rdi, 0x2
test dl, 0x4
jz 0x7fab2cdb59aa
mov ecx, dword ptr [rsi]
mov dword ptr [rdi], ecx
add rsi, 0x4
add rdi, 0x4
test dl, 0x8
jz 0x7fab2cdb59c0
and edx, 0xf0
jz 0x7fab2cdb59eb
nop dword ptr [rax+rax*1], eax
mov rcx, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov qword ptr [rdi], rcx
mov qword ptr [rdi+0x8], r8
sub edx, 0x10
lea rsi, ptr [rsi+0x10]
lea rdi, ptr [rdi+0x10]
jnz 0x7fab2cdb59d0
mov rax, rdi
ret 
mov rax, rdi
ret 
jmp 0x7fab2cda6d73
cmp byte ptr [rax-0x1], 0x2f
lea rdx, ptr [rax-0x1]
jnz 0x7fab2cda6d70
cmp r15, rdx
cmovz rdx, rax
mov byte ptr [rdx], 0x0
jmp 0x7fab2cda6cc8
mov rax, rdx
cmp byte ptr [rax-0x1], 0x2f
lea rdx, ptr [rax-0x1]
jnz 0x7fab2cda6d70
cmp r15, rdx
cmovz rdx, rax
mov byte ptr [rdx], 0x0
jmp 0x7fab2cda6cc8
mov qword ptr [r14+0x338], r15
mov rax, r14
add rsp, 0x38
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
test rax, rax
mov r12, rax
jz 0x7fab2cda2487
mov rdi, qword ptr [rbp-0x100]
mov rax, qword ptr [rdi+0x20]
mov rsi, qword ptr [rdi+0x28]
mov qword ptr [r12+0x2a8], rax
movzx eax, word ptr [rdi+0x18]
mov word ptr [rbp-0xe6], ax
movzx eax, word ptr [rdi+0x40]
movzx edx, ax
mov word ptr [r12+0x2b0], ax
lea rcx, ptr [rdx*8]
mov rbx, rdx
shl rbx, 0x6
sub rbx, rcx
lea rcx, ptr [rbx+rsi*1]
cmp rcx, qword ptr [rdi]
jnbe 0x7fab2cda1fb1
lea r13, ptr [rdi+rsi*1+0x8]
lea rdx, ptr [rdx+rdx*2]
mov qword ptr [rbp-0x110], rsp
add rbx, r13
shl rdx, 0x4
add rdx, 0x16
and edx, 0xfffff0
sub rsp, rdx
lea rdi, ptr [rsp+0x3f]
mov qword ptr [rbp-0xd8], rdi
shr qword ptr [rbp-0xd8], 0x3
mov rdi, qword ptr [rbp-0xd8]
shl rdi, 0x3
cmp r13, rbx
mov qword ptr [rbp-0xc8], rdi
jnb 0x7fab2cda21db
mov edi, dword ptr [rbp+0x10]
xor r15d, r15d
xor r14d, r14d
mov rbx, r13
mov qword ptr [rbp-0xd0], 0x7
and edi, 0x8000000
mov dword ptr [rbp-0xe0], edi
mov edi, r15d
mov r15, r14
mov r14, r13
mov r13d, edi
jmp 0x7fab2cda1882
mov edx, dword ptr [rbx]
cmp edx, 0x6
jz 0x7fab2cda18f0
jnbe 0x7fab2cda1838
cmp edx, 0x1
data16 nop 
jz 0x7fab2cda1908
mov rdx, qword ptr [rbx+0x10]
mov qword ptr [r12+0x2a0], rdx
jmp 0x7fab2cda1860
movzx edx, ax
add rbx, 0x38
lea rcx, ptr [rdx*8]
shl rdx, 0x6
sub rdx, rcx
add rdx, r14
cmp rbx, rdx
jnb 0x7fab2cda1a70
mov edx, dword ptr [rbx]
cmp edx, 0x6
jz 0x7fab2cda18f0
jnbe 0x7fab2cda1838
cmp edx, 0x1
data16 nop 
jz 0x7fab2cda1908
cmp edx, 0x2
jnz 0x7fab2cda1860
mov rdx, qword ptr [rbx+0x10]
mov qword ptr [r12+0x10], rdx
mov rdx, qword ptr [rbx+0x28]
shr rdx, 0x4
mov word ptr [r12+0x2b2], dx
jmp 0x7fab2cda1860
mov rsi, qword ptr [rip+0x21c3c9]
mov rdx, qword ptr [rbx+0x30]
lea r9, ptr [rsi-0x1]
test rdx, r9
jnz 0x7fab2cda223d
mov rcx, qword ptr [rbx+0x10]
mov rdi, qword ptr [rbx+0x8]
sub rdx, 0x1
mov r10, rcx
sub r10, rdi
test rdx, r10
jnz 0x7fab2cda2249
lea rdx, ptr [r15+r15*2]
mov r11, rcx
add r11, qword ptr [rbx+0x20]
lea r10, ptr [r15+0x1]
mov r15, rcx
add rcx, qword ptr [rbx+0x28]
shl rdx, 0x4
add rdx, qword ptr [rbp-0xc8]
neg rsi
and r15, rsi
add r9, r11
and r9, rsi
and rsi, rdi
cmp r10, 0x1
mov qword ptr [rdx], r15
mov qword ptr [rdx+0x8], r9
mov qword ptr [rdx+0x10], r11
mov qword ptr [rdx+0x18], rcx
mov qword ptr [rdx+0x20], rsi
jbe 0x7fab2cda1991
mov ecx, dword ptr [rbx+0x4]
mov esi, 0x73516240
mov r15, r10
and ecx, 0x7
shl ecx, 0x2
sar esi, cl
and esi, 0xf
mov dword ptr [rdx+0x28], esi
jmp 0x7fab2cda1860
cmp r15, qword ptr [rdx-0x28]
mov ecx, 0x1
cmovnz r13d, ecx
mov ecx, dword ptr [rbx+0x4]
mov esi, 0x73516240
mov r15, r10
and ecx, 0x7
shl ecx, 0x2
sar esi, cl
and esi, 0xf
mov dword ptr [rdx+0x28], esi
jmp 0x7fab2cda1860
cmp edx, 0x6474e551
jz 0x7fab2cda1a60
cmp edx, 0x6474e552
jz 0x7fab2cda1a30
cmp edx, 0x7
jz 0x7fab2cda19b0
nop dword ptr [rax], eax
movzx edx, ax
add rbx, 0x38
lea rcx, ptr [rdx*8]
shl rdx, 0x6
sub rdx, rcx
add rdx, r14
cmp rbx, rdx
jnb 0x7fab2cda1a70
mov edx, dword ptr [rbx]
cmp edx, 0x6
jz 0x7fab2cda18f0
jnbe 0x7fab2cda1838
mov edi, dword ptr [rbx+0x4]
mov qword ptr [rbp-0xd0], rdi
jmp 0x7fab2cda1860
mov rax, qword ptr [rbx+0x10]
mov qword ptr [r12+0x458], rax
mov rax, qword ptr [rbx+0x28]
mov qword ptr [r12+0x460], rax
movzx eax, word ptr [r12+0x2b0]
jmp 0x7fab2cda1860
mov eax, r13d
mov r13, r14
mov r14, r15
test r14, r14
mov r15d, eax
jz 0x7fab2cda21db
lea rbx, ptr [r14+r14*2-0x3]
mov rax, qword ptr [rbp-0xd8]
shl rbx, 0x4
add rbx, qword ptr [rbp-0xc8]
mov rdi, qword ptr [rax*8]
mov rsi, qword ptr [rbx+0x18]
mov qword ptr [rbp-0xe0], rsi
sub qword ptr [rbp-0xe0], rdi
cmp word ptr [rbp-0xe6], 0x3
jnz 0x7fab2cda2312
and rdi, qword ptr [rip+0x21c275]
mov edx, dword ptr [rax*8+0x28]
mov ecx, 0x802
mov r9, qword ptr [rax*8+0x20]
mov r8d, dword ptr [rbp-0xe4]
mov rsi, qword ptr [rbp-0xe0]
call 0x7fab2cdb4610
cmp rax, 0xffffffffffffffff
mov qword ptr [r12+0x340], rax
jz 0x7fab2cda1c40
mov rsi, qword ptr [rbp-0xe0]
mov rdi, qword ptr [rbp-0xd8]
lea rdx, ptr [rax+rsi*1]
sub rax, qword ptr [rdi*8]
test r15b, r15b
mov qword ptr [r12+0x348], rdx
mov qword ptr [r12], rax
jnz 0x7fab2cda1c60
or byte ptr [r12+0x315], 0x40
mov rbx, qword ptr [rbp-0xc8]
mov edx, dword ptr [rbx+0x28]
test dl, 0x4
jz 0x7fab2cda1b5b
mov rdx, qword ptr [rdi*8+0x8]
mov rsi, qword ptr [rbx]
lea rdi, ptr [rax+rdx*1]
sub rsi, rdx
xor edx, edx
call 0x7fab2cdb4660
mov eax, 0xa
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab2cdb4670
ret 
jmp 0x7fab2cda1b33
or byte ptr [r12+0x315], 0x40
mov rbx, qword ptr [rbp-0xc8]
mov edx, dword ptr [rbx+0x28]
test dl, 0x4
jz 0x7fab2cda1b5b
mov rax, qword ptr [rbx+0x8]
add rax, qword ptr [r12]
mov qword ptr [r12+0x350], rax
cmp qword ptr [r12+0x2a0], 0x0
jz 0x7fab2cda2056
mov rax, qword ptr [rbx+0x18]
mov r8, qword ptr [rbx+0x10]
cmp rax, r8
jbe 0x7fab2cda1bec
add rbx, 0x30
lea rax, ptr [r14+r14*2]
shl rax, 0x4
add rax, qword ptr [rbp-0xc8]
cmp rbx, rax
jnb 0x7fab2cda1c7e
mov rsi, qword ptr [rbx+0x8]
mov rax, qword ptr [rbx]
cmp rsi, rax
jbe 0x7fab2cda1b43
sub rsi, rax
add rax, qword ptr [r12]
mov edx, dword ptr [rbx+0x28]
mov r9, qword ptr [rbx+0x20]
mov r8d, dword ptr [rbp-0xe4]
mov ecx, 0x812
mov rdi, rax
call 0x7fab2cdb4610
cmp rax, 0xffffffffffffffff
jnz 0x7fab2cda1b43
lea rbx, ptr [rip+0x17469]
mov rsp, qword ptr [rbp-0x110]
mov r13d, dword ptr [rip+0x21d52b]
jmp 0x7fab2cda21a4
mov edx, dword ptr [rbx+0x28]
test dl, 0x4
jz 0x7fab2cda1b5b
mov rax, qword ptr [rbx+0x8]
add rax, qword ptr [r12]
mov qword ptr [r12+0x350], rax
cmp qword ptr [r12+0x2a0], 0x0
jz 0x7fab2cda2056
mov rax, qword ptr [rbx+0x18]
mov r8, qword ptr [rbx+0x10]
cmp rax, r8
jbe 0x7fab2cda1bec
cmp qword ptr [r12+0x2a0], 0x0
jz 0x7fab2cda2056
mov rax, qword ptr [rbx+0x18]
mov r8, qword ptr [rbx+0x10]
cmp rax, r8
jbe 0x7fab2cda1bec
mov rcx, qword ptr [r12]
mov rsi, qword ptr [rip+0x21c156]
add r8, rcx
add rcx, rax
mov rax, rsi
lea r15, ptr [r8+rsi*1-0x1]
neg rax
and r15, rax
cmp r15, rcx
cmovnbe r15, rcx
cmp r8, r15
jnb 0x7fab2cda1be3
test dl, 0x2
jz 0x7fab2cda236c
mov rdx, r15
xor esi, esi
mov rdi, r8
sub rdx, r8
mov qword ptr [rbp-0x118], rcx
mov qword ptr [rbp-0xd8], r8
call 0x7fab2cdb5960
mov rcx, rdx
movzx eax, sil
mov rdx, rdi
rep stosb byte ptr [rdi]
rep stosb byte ptr [rdi]
mov rax, rdx
ret 
mov edx, dword ptr [rbx+0x28]
mov r8, qword ptr [rbp-0xd8]
mov rcx, qword ptr [rbp-0x118]
test dl, 0x2
jz 0x7fab2cda23b9
cmp rcx, r15
jnbe 0x7fab2cda20ad
add rbx, 0x30
lea rax, ptr [r14+r14*2]
shl rax, 0x4
add rax, qword ptr [rbp-0xc8]
cmp rbx, rax
jnb 0x7fab2cda1c7e
mov edx, dword ptr [rbx+0x28]
mov rsi, rcx
xor r9d, r9d
sub rsi, r15
mov r8d, 0xffffffff
mov ecx, 0x32
mov rdi, r15
call 0x7fab2cdb4610
cmp rax, 0xffffffffffffffff
jnz 0x7fab2cda1bec
lea rbx, ptr [rip+0x15570]
jmp 0x7fab2cda1c47
movzx r14d, word ptr [rbp-0xe6]
mov rdx, qword ptr [r12+0x10]
mov rsp, qword ptr [rbp-0x110]
test rdx, rdx
jz 0x7fab2cda2194
mov rdi, qword ptr [r12]
add rdx, rdi
test rdx, rdx
mov qword ptr [r12+0x10], rdx
jz 0x7fab2cda2169
mov rax, qword ptr [rdx]
lea rsi, ptr [r12+0x40]
test rax, rax
jz 0x7fab2cda1d3e
mov r8d, 0x6fffffff
mov r11d, 0x6ffffdff
mov r15d, 0x6ffffeff
mov rbx, 0x37ffff1a0
mov r10d, 0x31
mov r9d, 0x70000021
jmp 0x7fab2cda1d09
cmp rax, 0x21
jbe 0x7fab2cda1cf9
mov rcx, r8
sub rcx, rax
cmp rcx, 0xf
jbe 0x7fab2cda1cf0
lea ecx, ptr [rax+rax*1]
sar ecx, 0x1
cmp ecx, 0xfffffffc
jbe 0x7fab2cda2010
mov qword ptr [rsi+rax*8], rdx
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jz 0x7fab2cda1d3e
cmp rax, 0x21
jbe 0x7fab2cda1cf9
mov rcx, r8
sub rcx, rax
cmp rcx, 0xf
jbe 0x7fab2cda1cf0
lea ecx, ptr [rax+rax*1]
sar ecx, 0x1
cmp ecx, 0xfffffffc
jbe 0x7fab2cda2010
mov eax, r10d
sub eax, ecx
mov qword ptr [rsi+rax*8], rdx
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jnz 0x7fab2cda1d09
test rdi, rdi
jz 0x7fab2cda1dbc
mov rcx, r11
sub rcx, rax
cmp rcx, 0xb
jnbe 0x7fab2cda202c
neg rax
lea rax, ptr [rsi+rax*8]
mov qword ptr [rax+rbx*1], rdx
jmp 0x7fab2cda1cfd
mov rcx, r15
sub rcx, rax
cmp rcx, 0xa
jnbe 0x7fab2cda1cfd
neg rax
mov rcx, 0x37ffffa00
lea rax, ptr [rsi+rax*8]
mov qword ptr [rax+rcx*1], rdx
jmp 0x7fab2cda1cfd
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jz 0x7fab2cda1d3e
cmp rax, 0x21
jbe 0x7fab2cda1cf9
mov rcx, r8
sub rcx, rax
cmp rcx, 0xf
jbe 0x7fab2cda1cf0
mov rcx, r9
sub rcx, rax
mov rax, rcx
mov qword ptr [rsi+rax*8], rdx
add rdx, 0x10
mov rax, qword ptr [rdx]
test rax, rax
jz 0x7fab2cda1d3e
cmp rax, 0x21
jbe 0x7fab2cda1cf9
mov rcx, r8
sub rcx, rax
cmp rcx, 0xf
jbe 0x7fab2cda1cf0
test rdi, rdi
jz 0x7fab2cda1dbc
mov rax, qword ptr [r12+0x60]
test rax, rax
jz 0x7fab2cda1d51
add qword ptr [rax+0x8], rdi
mov rax, qword ptr [r12+0x58]
test rax, rax
jz 0x7fab2cda1d5f
add qword ptr [rax+0x8], rdi
mov rax, qword ptr [r12+0x68]
test rax, rax
jz 0x7fab2cda1d6d
add qword ptr [rax+0x8], rdi
mov rax, qword ptr [r12+0x70]
test rax, rax
jz 0x7fab2cda1d7b
add qword ptr [rax+0x8], rdi
mov rax, qword ptr [r12+0x78]
test rax, rax
jz 0x7fab2cda1d89
add qword ptr [rax+0x8], rdi
mov rax, qword ptr [r12+0xf8]
test rax, rax
jz 0x7fab2cda1d9a
add qword ptr [rax+0x8], rdi
mov rax, qword ptr [r12+0x1c8]
test rax, rax
jz 0x7fab2cda1dab
add qword ptr [rax+0x8], rdi
mov rax, qword ptr [r12+0x298]
test rax, rax
jz 0x7fab2cda1dbc
add qword ptr [rax+0x8], rdi
mov rax, qword ptr [r12+0xe0]
test rax, rax
jz 0x7fab2cda1dd4
cmp qword ptr [rax+0x8], 0x7
jnz 0x7fab2cda2659
cmp qword ptr [r12+0x78], 0x0
jz 0x7fab2cda1def
mov rax, qword ptr [r12+0x88]
cmp qword ptr [rax+0x8], 0x18
jnz 0x7fab2cda2678
mov rdx, qword ptr [r12+0x130]
test rdx, rdx
jz 0x7fab2cda1e2c
mov rax, qword ptr [rdx+0x8]
test al, 0x2
mov dword ptr [r12+0x3d8], eax
jz 0x7fab2cda1e14
test al, 0x4
jz 0x7fab2cda1e20
mov qword ptr [r12+0xf0], rdx
test al, 0x8
jz 0x7fab2cda1e2c
mov qword ptr [r12+0x100], rdx
mov rax, qword ptr [r12+0x170]
test rax, rax
jz 0x7fab2cda215c
test al, 0x8
jz 0x7fab2cda1e2c
mov qword ptr [r12+0x100], rdx
mov rax, qword ptr [r12+0x170]
test rax, rax
jz 0x7fab2cda215c
test byte ptr [rip+0x21be7c], 0x40
mov rax, qword ptr [rax+0x8]
mov dword ptr [r12+0x3d4], eax
mov ecx, eax
mov edx, eax
jnz 0x7fab2cda2255
mov rax, qword ptr [r12+0x170]
test rax, rax
jz 0x7fab2cda215c
test byte ptr [rip+0x21be7c], 0x40
mov rax, qword ptr [rax+0x8]
mov dword ptr [r12+0x3d4], eax
mov ecx, eax
mov edx, eax
jnz 0x7fab2cda2255
and ecx, 0x1
jz 0x7fab2cda1e6f
cmp qword ptr [r12+0x128], 0x0
jz 0x7fab2cda1e86
mov qword ptr [r12+0xb8], 0x0
and edx, 0x40
jnz 0x7fab2cda24ef
mov rax, qword ptr [r12+0x2a0]
test rax, rax
jz 0x7fab2cda21ee
and edx, 0x40
jnz 0x7fab2cda24ef
mov rax, qword ptr [r12+0x2a0]
test rax, rax
jz 0x7fab2cda21ee
add rax, qword ptr [r12]
mov qword ptr [r12+0x2a0], rax
mov eax, dword ptr [rip+0x21d0ce]
not eax
and rax, qword ptr [rbp-0xd0]
test al, 0x1
jnz 0x7fab2cda2839
mov rax, qword ptr [r12+0x418]
test rax, rax
jz 0x7fab2cda1edc
add rax, qword ptr [r12]
mov qword ptr [r12+0x418], rax
mov edi, dword ptr [rbp-0xe4]
call 0x7fab2cdb45f0
mov edi, dword ptr [rbp-0xe4]
call 0x7fab2cdb45f0
test eax, eax
jnz 0x7fab2cda282d
movzx eax, byte ptr [r12+0x314]
mov edx, eax
and edx, 0x3
cmp dl, 0x1
jz 0x7fab2cda20e8
mov r8, qword ptr [r12]
mov rax, r8
add rax, qword ptr [r12+0x2a8]
test byte ptr [rip+0x21bda4], 0x40
mov qword ptr [r12+0x2a8], rax
jnz 0x7fab2cda27c3
cmp r14d, 0x2
jnz 0x7fab2cda1f06
and eax, 0xfffffffc
mov byte ptr [r12+0x314], al
jmp 0x7fab2cda1f06
mov r8, qword ptr [r12]
mov rax, r8
add rax, qword ptr [r12+0x2a8]
test byte ptr [rip+0x21bda4], 0x40
mov qword ptr [r12+0x2a8], rax
jnz 0x7fab2cda27c3
mov rdi, r12
call 0x7fab2cda6930
mov rax, qword ptr [rdi+0x298]
test rax, rax
jz 0x7fab2cda6993
mov rax, qword ptr [rax+0x8]
mov ecx, dword ptr [rax]
mov dword ptr [rdi+0x2ec], ecx
mov edx, dword ptr [rax+0x8]
mov r8d, dword ptr [rax+0x4]
lea esi, ptr [rdx-0x1]
test esi, edx
jnz 0x7fab2cda69bf
mov dword ptr [rdi+0x2f0], esi
lea rsi, ptr [rax+0x10]
mov eax, dword ptr [rax+0xc]
add edx, edx
mov qword ptr [rdi+0x2f8], rsi
mov dword ptr [rdi+0x2f4], eax
lea rax, ptr [rsi+rdx*4]
mov edx, r8d
shl rdx, 0x2
mov qword ptr [rdi+0x300], rax
lea rax, ptr [rax+rcx*4]
sub rax, rdx
mov qword ptr [rdi+0x308], rax
ret 
test byte ptr [rbp+0x10], 0x8
jnz 0x7fab2cda1f47
cmp qword ptr [r12+0xc0], 0x0
jnz 0x7fab2cda275a
test byte ptr [r12+0x3d4], 0x20
jz 0x7fab2cda1f59
mov qword ptr [rip+0x21ca67], r12
mov rax, qword ptr [rbp-0xc0]
cmp qword ptr [rip+0x21bde0], 0x0
mov qword ptr [r12+0x398], rax
mov rax, qword ptr [rbp-0xb8]
mov qword ptr [r12+0x3a0], rax
jnz 0x7fab2cda272d
mov rsi, qword ptr [rbp+0x20]
mov rdi, r12
call 0x7fab2cda69e0
push rbp
mov rbp, rdi
lea rdi, ptr [rip+0x217fa5]
push rbx
mov rbx, rsi
sub rsp, 0x8
call qword ptr [rip+0x21856f]
add dword ptr [rdi+0x4], 0x1
ret 
lea rax, ptr [rbx+rbx*8]
lea rcx, ptr [rip+0x21765c]
shl rax, 0x4
add rax, rcx
mov rdx, qword ptr [rax]
test rdx, rdx
jnz 0x7fab2cda6a1b
jmp 0x7fab2cda6a68
mov rax, qword ptr [rdx+0x18]
test rax, rax
jnz 0x7fab2cda6a18
mov qword ptr [rbp+0x20], rdx
mov qword ptr [rdx+0x18], rbp
lea rax, ptr [rbx+rbx*8]
lea rdi, ptr [rip+0x217f59]
shl rax, 0x4
add dword ptr [rcx+rax*1+0x8], 0x1
mov rax, qword ptr [rip+0x217f71]
mov qword ptr [rbp+0x468], rax
add rax, 0x1
mov qword ptr [rip+0x217f5f], rax
mov rax, qword ptr [rip+0x218510]
add rsp, 0x8
pop rbx
pop rbp
jmp rax
mov rdx, rax
mov rax, qword ptr [rdx+0x18]
test rax, rax
jnz 0x7fab2cda6a18
mov qword ptr [rbp+0x20], rdx
mov qword ptr [rdx+0x18], rbp
lea rax, ptr [rbx+rbx*8]
lea rdi, ptr [rip+0x217f59]
shl rax, 0x4
add dword ptr [rcx+rax*1+0x8], 0x1
mov rax, qword ptr [rip+0x217f71]
mov qword ptr [rbp+0x468], rax
add rax, 0x1
mov qword ptr [rip+0x217f5f], rax
mov rax, qword ptr [rip+0x218510]
add rsp, 0x8
pop rbx
pop rbp
jmp rax
sub dword ptr [rdi+0x4], 0x1
ret 
mov edx, dword ptr [rip+0x21be51]
test edx, edx
jnz 0x7fab2cda2697
mov rax, r12
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
jmp 0x7fab2cda3cd1
add rsp, 0x3c8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
mov qword ptr [rbx+0x20], rax
pop rbx
ret 
mov rax, qword ptr [rsp+0x8]
mov rcx, qword ptr [rsp+0x10]
mov rsi, qword ptr [rsp+0x20]
mov rdx, qword ptr [rsp+0x28]
mov qword ptr [rax], rcx
mov rax, qword ptr [rsp+0x18]
mov qword ptr [rax], 0x0
mov qword ptr [rsi], 0x0
mov byte ptr [rdx], 0x0
add rsp, 0x130
mov eax, ebx
pop rbx
ret 
mov rcx, qword ptr [rbp-0x68]
test rcx, rcx
jnz 0x7fab2cda94a0
mov rax, qword ptr [rbp-0x38]
test byte ptr [rax+0x314], 0x60
jnz 0x7fab2cda8c60
sub rsp, 0x30
mov rcx, qword ptr [rbp-0xb8]
lea rdx, ptr [rsp+0xf]
and rdx, 0xfffffffffffffff0
mov qword ptr [rdx+0x8], rax
mov dword ptr [rdx], 0x0
mov qword ptr [rdx+0x10], 0x0
mov qword ptr [rcx+0x10], rdx
movzx ecx, byte ptr [rax+0x314]
mov qword ptr [rbp-0xb8], rdx
and ecx, 0xffffff9f
or ecx, 0x20
mov byte ptr [rax+0x314], cl
mov ecx, dword ptr [rbp-0xac]
add ecx, 0x1
mov dword ptr [rbp-0xac], ecx
jmp 0x7fab2cda8c60
test r13, r13
jz 0x7fab2cda8c71
mov edx, r12d
add r12d, 0x1
mov qword ptr [r13+rdx*8], rax
add rbx, 0x10
mov rax, qword ptr [rbx]
test rax, rax
jz 0x7fab2cda8d6a
cmp rax, 0x1
jnz 0x7fab2cda9332
add rbx, 0x10
mov rax, qword ptr [rbx]
test rax, rax
jz 0x7fab2cda8d6a
cmp rax, 0x1
jnz 0x7fab2cda9332
mov r15, qword ptr [rbp-0x78]
add r15, qword ptr [rbx+0x8]
mov esi, 0x24
mov rdi, r15
call 0x7fab2cdb4a00
inc rax
test ecx, 0xff0000
jz 0x7fab2cdb4d35
inc rax
sub rax, rdi
ret 
mov rax, r14
mov r14, qword ptr [rip+0x20d3ae]
mov r12, qword ptr [rip+0x20d3af]
cmp r12, 0xffffffffffffffff
jz 0x7fab2cdb1e30
add rax, r14
lea rdi, ptr [rip+0x5b66]
xor esi, esi
mov qword ptr [rsp], rax
sub qword ptr [rsp], r12
mov rbx, qword ptr [rsp]
call 0x7fab2cdb44f0
inc rax
test ch, ch
jz 0x7fab2cdb4d35
inc rax
test ecx, 0xff0000
jz 0x7fab2cdb4d35
inc rax
test ecx, 0xff000000
jz 0x7fab2cdb4d35
inc rax
shr rcx, 0x20
test cl, cl
jz 0x7fab2cdb4d35
inc rax
test ch, ch
jz 0x7fab2cdb4d35
inc rax
test ecx, 0xff0000
jz 0x7fab2cdb4d35
mov ecx, edx
shr ecx, 0x5
jz 0x7fab2cdb5cd0
dec ecx
mov rax, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov r9, qword ptr [rsi+0x10]
mov r10, qword ptr [rsi+0x18]
mov qword ptr [rdi], rax
mov qword ptr [rdi+0x8], r8
mov qword ptr [rdi+0x10], r9
mov qword ptr [rdi+0x18], r10
lea rsi, ptr [rsi+0x20]
lea rdi, ptr [rdi+0x20]
jz 0x7fab2cdb5cd0
dec ecx
mov rax, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov r9, qword ptr [rsi+0x10]
mov r10, qword ptr [rsi+0x18]
mov qword ptr [rdi], rax
mov qword ptr [rdi+0x8], r8
mov qword ptr [rdi+0x10], r9
mov qword ptr [rdi+0x18], r10
lea rsi, ptr [rsi+0x20]
lea rdi, ptr [rdi+0x20]
jnz 0x7fab2cdb5c70
mov ecx, dword ptr [rsi]
mov dword ptr [rdi], ecx
add rsi, 0x4
add rdi, 0x4
test dl, 0x8
jz 0x7fab2cdb5bf4
mov rcx, qword ptr [rsi]
mov qword ptr [rdi], rcx
add rsi, 0x8
add rdi, 0x8
and edx, 0xf0
jz 0x7fab2cdb5c1b
nop dword ptr [rax], eax
mov rcx, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov qword ptr [rdi], rcx
mov qword ptr [rdi+0x8], r8
sub edx, 0x10
lea rsi, ptr [rsi+0x10]
lea rdi, ptr [rdi+0x10]
jnz 0x7fab2cdb5c00
mov qword ptr [r15+0x8], rax
add rbp, rax
mov rax, qword ptr [rsp+0x8]
mov dword ptr [r15+0x18], 0x1
movzx r15d, byte ptr [rsp+0x24]
cmp byte ptr [rax], 0x0
cmovnz rbp, rax
movzx eax, byte ptr [r14+0x314]
and r15d, 0x3
mov qword ptr [r14+0x8], rbp
and eax, 0xfffffffc
or eax, r15d
test byte ptr [rip+0x217155], 0x1
mov byte ptr [r14+0x314], al
jz 0x7fab2cda6d18
test r13d, r13d
mov qword ptr [r14+0x2d8], rbx
mov qword ptr [r14+0x30], r12
jz 0x7fab2cda6bb0
lea eax, ptr [r13-0x1]
mov rdx, r14
shl rax, 0x4
lea rax, ptr [r14+rax*1+0x10]
nop dword ptr [rax], eax
mov qword ptr [rdx+0x470], r14
add rdx, 0x10
cmp rdx, rax
jnz 0x7fab2cda6ba0
mov rdx, qword ptr [rbx+0x28]
test rdx, rdx
jz 0x7fab2cda1860
mov rcx, qword ptr [rbx+0x30]
mov qword ptr [r12+0x428], rdx
xor edx, edx
test rcx, rcx
mov qword ptr [r12+0x430], rcx
jz 0x7fab2cda19e0
lea rdx, ptr [rcx-0x1]
and rdx, qword ptr [rbx+0x10]
mov qword ptr [r12+0x438], rdx
mov rdx, qword ptr [rbx+0x20]
mov qword ptr [r12+0x420], rdx
mov rdx, qword ptr [rbx+0x10]
mov qword ptr [r12+0x418], rdx
movzx edx, byte ptr [r12+0x314]
and edx, 0x3
cmp dl, 0x1
jnz 0x7fab2cda23f9
call 0x7fab2cdad710
sub rsp, 0x8
cmp byte ptr [rip+0x211869], 0x0
jnz 0x7fab2cdad734
mov rdx, qword ptr [rip+0x211864]
lea rax, ptr [rdx+0x1]
mov qword ptr [rip+0x211859], rax
add rsp, 0x8
ret 
mov qword ptr [r12+0x448], rax
movzx eax, word ptr [r12+0x2b0]
jmp 0x7fab2cda1860
mov edx, dword ptr [r12+0x3d4]
jmp 0x7fab2cda1e6f
mov rax, qword ptr [rbp-0xc0]
cmp qword ptr [rip+0x21bde0], 0x0
mov qword ptr [r12+0x398], rax
mov rax, qword ptr [rbp-0xb8]
mov qword ptr [r12+0x3a0], rax
jnz 0x7fab2cda272d
mov rsi, qword ptr [rbp+0x20]
mov rdi, r12
call 0x7fab2cda69e0
and rax, 0xfffffffffffffffd
cmp rax, 0x7ffffffd
jnz 0x7fab2cda8c71
mov r15, qword ptr [rbp-0x78]
add r15, qword ptr [rbx+0x8]
mov esi, 0x24
mov rdi, r15
call 0x7fab2cdb4a00
test r13, r13
jz 0x7fab2cda8dda
lea r15d, ptr [r12+0x1]
mov eax, r12d
mov qword ptr [r13+rax*8], 0x0
lea edi, ptr [r15+r15*1+0x1]
shl rdi, 0x3
call 0x7fab2cd9ba90
mov rax, qword ptr [rbp-0xc0]
mov edx, dword ptr [rax]
test edx, edx
jnz 0x7fab2cda8e04
mov rax, qword ptr [rbp-0xc0]
jmp 0x7fab2cda91a4
mov rax, qword ptr [rax+0x10]
test rax, rax
jnz 0x7fab2cda8df8
xor r15d, r15d
mov r8d, dword ptr [rip+0x216369]
test r8d, r8d
jnz 0x7fab2cda8e32
mov edi, dword ptr [rbp-0xb0]
test edi, edi
jz 0x7fab2cda8e32
mov r9d, dword ptr [rax]
test r9d, r9d
jz 0x7fab2cda919d
mov rax, qword ptr [rax+0x10]
test rax, rax
jnz 0x7fab2cda8df8
xor r15d, r15d
mov r8d, dword ptr [rip+0x216369]
test r8d, r8d
jnz 0x7fab2cda8e32
mov qword ptr [rbp-0xc0], rax
mov r14, qword ptr [rax+0x8]
jmp 0x7fab2cda8bf1
xor r13d, r13d
cmp qword ptr [r14+0x2b8], 0x0
mov dword ptr [rax], 0x1
jz 0x7fab2cda91ad
cmp qword ptr [r14+0x48], 0x0
jz 0x7fab2cda8d4b
mov rax, qword ptr [r14+0x68]
mov rbx, qword ptr [r14+0x10]
mov qword ptr [rbp-0x58], r14
mov rax, qword ptr [rax+0x8]
mov qword ptr [rbp-0x78], rax
mov qword ptr [rbp-0x48], rax
mov eax, dword ptr [rbp-0xd8]
mov dword ptr [rbp-0x50], eax
mov eax, dword ptr [rbp-0xe0]
mov dword ptr [rbp-0x4c], eax
mov rax, qword ptr [rbx]
test rax, rax
jz 0x7fab2cda8d67
shl rax, 0x3
cmp qword ptr [rbp-0xf0], rax
mov r13, qword ptr [rbp-0xe8]
jnb 0x7fab2cda8c08
add rax, 0xf
and rax, 0xfffffffffffffff0
lea rdx, ptr [rax+0x1e]
and edx, 0x1ffff0
sub rsp, rdx
lea r13, ptr [rsp+0xf]
and r13, 0xfffffffffffffff0
lea rdx, ptr [r13+rax*1]
cmp qword ptr [rbp-0xe8], rdx
jz 0x7fab2cda9a3f
mov qword ptr [rbp-0xf0], rax
mov qword ptr [rbp-0xe8], r13
jmp 0x7fab2cda8c08
test eax, eax
jnz 0x7fab2cdac1c0
mov edx, 0x1
add rsp, 0x8
mov eax, edx
pop rbx
pop rbp
ret 
mov r15, qword ptr [rbp-0x78]
add r15, qword ptr [rbx+0x8]
mov esi, 0x24
mov rdi, r15
call 0x7fab2cdb4a00
movdqu xmm0, xmmword ptr [rdi+0x10]
movdqa xmm4, xmm0
pcmpeqb xmm0, xmm1
pcmpeqb xmm4, xmm3
por xmm0, xmm4
pmovmskb ecx, xmm0
movdqu xmm0, xmmword ptr [rdi+0x20]
movdqa xmm4, xmm0
pcmpeqb xmm0, xmm1
shl rcx, 0x10
pcmpeqb xmm4, xmm3
por xmm0, xmm4
pmovmskb eax, xmm0
movdqu xmm0, xmmword ptr [rdi+0x30]
pcmpeqb xmm3, xmm0
shl rax, 0x20
pcmpeqb xmm0, xmm1
or rax, rcx
por xmm0, xmm3
pmovmskb ecx, xmm0
shl rcx, 0x30
or rax, rcx
test rax, rax
jnz 0x7fab2cdb4b60
nop word ptr [rax+rax*1], ax
pxor xmm6, xmm6
and rdi, 0xffffffffffffffc0
add rdi, 0x40
movdqa xmm5, xmmword ptr [rdi]
movdqa xmm2, xmmword ptr [rdi+0x10]
movdqa xmm3, xmmword ptr [rdi+0x20]
pxor xmm5, xmm1
movdqa xmm4, xmmword ptr [rdi+0x30]
pxor xmm2, xmm1
pxor xmm3, xmm1
pminub xmm5, xmmword ptr [rdi]
pxor xmm4, xmm1
pminub xmm2, xmmword ptr [rdi+0x10]
pminub xmm3, xmmword ptr [rdi+0x20]
pminub xmm5, xmm2
pminub xmm4, xmmword ptr [rdi+0x30]
pminub xmm5, xmm3
pminub xmm5, xmm4
pcmpeqb xmm5, xmm6
pmovmskb eax, xmm5
test eax, eax
jz 0x7fab2cdb4ac8
movdqa xmm5, xmmword ptr [rdi]
movdqa xmm0, xmm5
pcmpeqb xmm5, xmm1
pcmpeqb xmm0, xmm6
por xmm5, xmm0
pcmpeqb xmm2, xmm6
pcmpeqb xmm3, xmm6
pcmpeqb xmm4, xmm6
pmovmskb ecx, xmm5
pmovmskb eax, xmm2
shl rax, 0x10
pmovmskb r8d, xmm3
pmovmskb edx, xmm4
shl r8, 0x20
or rax, r8
or rax, rcx
shl rdx, 0x30
or rax, rdx
bsf rax, rax
mov edx, 0x0
lea rax, ptr [rdi+rax*1]
cmp byte ptr [rax], sil
cmovnz rax, rdx
bsf rax, rax
mov edx, 0x0
lea rax, ptr [rdi+rax*1]
cmp byte ptr [rax], sil
cmovnz rax, rdx
ret 
test rax, rax
mov rbx, rax
jz 0x7fab2cda97b2
mov qword ptr [rax], r14
mov eax, r15d
lea rdi, ptr [rbx+0x8]
lea r15, ptr [rax*8]
mov rsi, r13
mov rdx, r15
call 0x7fab2cdb5ba0
lea eax, ptr [r12+0x2]
mov rdx, r15
mov rsi, rbx
lea rdi, ptr [rbx+rax*8]
call 0x7fab2cdb5ba0
or byte ptr [r14+0x316], 0x1
mov qword ptr [r14+0x3b8], rbx
mov rax, qword ptr [rbp-0xc0]
mov edx, dword ptr [rax]
test edx, edx
jnz 0x7fab2cda8e04
mov rax, qword ptr [rbp-0xc0]
jmp 0x7fab2cda91a4
cmp qword ptr [r14+0x1e0], 0x0
jnz 0x7fab2cda8c13
cmp qword ptr [r14+0x1d0], 0x0
jnz 0x7fab2cda8c13
xor r12d, r12d
test r13, r13
jz 0x7fab2cda8dda
mov eax, dword ptr [rbp-0xb0]
mov dword ptr [rip+0x21634e], eax
mov rax, qword ptr [rbp-0xd0]
mov rcx, qword ptr [rax+0x3b8]
test rcx, rcx
mov qword ptr [rbp-0xb8], rcx
jz 0x7fab2cda8e69
movzx eax, byte ptr [rax+0x314]
and eax, 0x3
cmp al, 0x2
jz 0x7fab2cda972f
mov qword ptr [rbp-0xb8], 0x0
mov eax, dword ptr [rbp-0xac]
lea edi, ptr [rax+rax*1+0x1]
shl rdi, 0x3
call 0x7fab2cd9ba90
mov eax, dword ptr [rbp-0xac]
lea edi, ptr [rax+rax*1+0x1]
shl rdi, 0x3
call 0x7fab2cd9ba90
test rax, rax
mov r12, rax
jz 0x7fab2cda9c8b
mov esi, dword ptr [rbp-0xac]
mov r8, qword ptr [rbp-0xd0]
mov eax, esi
mov rcx, r8
add eax, 0x1
lea rax, ptr [r12+rax*8]
mov qword ptr [r8+0x2b8], rax
mov dword ptr [rcx+0x2c0], esi
mov esi, dword ptr [rbp-0xd8]
test esi, esi
jnz 0x7fab2cda9b27
xor eax, eax
mov rcx, qword ptr [rbp-0xf8]
jmp 0x7fab2cda8ec9
mov rdi, qword ptr [rcx+0x8]
mov rsi, qword ptr [r8+0x2b8]
lea edx, ptr [rax+0x1]
mov qword ptr [rsi+rax*8], rdi
mov rax, qword ptr [rcx+0x8]
mov rcx, qword ptr [rcx+0x10]
and byte ptr [rax+0x314], 0x9f
test rcx, rcx
jnz 0x7fab2cda8ec7
mov dword ptr [rbp-0x78], edx
test byte ptr [rip+0x214dc8], 0x8
jnz 0x7fab2cda9aac
mov rax, qword ptr [rbp-0xd0]
mov rsi, qword ptr [rax+0x2b8]
mov rcx, qword ptr [rsi]
cmp rcx, rax
mov qword ptr [rbp-0x98], rcx
jnz 0x7fab2cda9a8d
mov eax, edx
mov rdi, qword ptr [rcx+0x8]
mov rsi, qword ptr [r8+0x2b8]
lea edx, ptr [rax+0x1]
mov qword ptr [rsi+rax*8], rdi
mov rax, qword ptr [rcx+0x8]
mov rcx, qword ptr [rcx+0x10]
and byte ptr [rax+0x314], 0x9f
test rcx, rcx
jnz 0x7fab2cda8ec7
mov dword ptr [rbp-0x78], edx
test byte ptr [rip+0x214dc8], 0x8
jnz 0x7fab2cda9aac
mov rax, qword ptr [rbp-0xd0]
mov rsi, qword ptr [rax+0x2b8]
mov rcx, qword ptr [rsi]
cmp rcx, rax
mov qword ptr [rbp-0x98], rcx
jnz 0x7fab2cda9a8d
mov rdi, qword ptr [rax+0x3c0]
test rdi, rdi
jz 0x7fab2cda9a52
cmp dword ptr [rbp-0x78], 0x1
jbe 0x7fab2cda8f64
mov eax, dword ptr [rbp-0x78]
lea rdx, ptr [rsi+0x8]
sub eax, 0x2
lea r8, ptr [rsi+rax*8+0x10]
mov rcx, qword ptr [rdx]
add rdx, 0x8
movzx eax, byte ptr [rcx+0x314]
and eax, 0xffffff9f
or eax, 0x20
cmp rdx, r8
mov byte ptr [rcx+0x314], al
jnz 0x7fab2cda8f45
mov r14d, dword ptr [rbp-0x78]
mov rdi, r12
mov ebx, r14d
lea rax, ptr [rbx*8]
mov rdx, rax
mov qword ptr [rbp-0xa0], rax
call 0x7fab2cdb5ba0
cmp rdx, 0x400
jnbe 0x7fab2cdb5ce0
mov ecx, edx
shr ecx, 0x5
jz 0x7fab2cdb5cd0
dec ecx
mov rax, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov r9, qword ptr [rsi+0x10]
mov r10, qword ptr [rsi+0x18]
mov qword ptr [rdi], rax
mov qword ptr [rdi+0x8], r8
mov qword ptr [rdi+0x10], r9
mov qword ptr [rdi+0x18], r10
lea rsi, ptr [rsi+0x20]
lea rdi, ptr [rdi+0x20]
jz 0x7fab2cdb5cd0
cmp r14d, 0x1
mov qword ptr [rbp-0x88], 0x0
jbe 0x7fab2cda92c6
jmp 0x7fab2cda90a8
lea rdx, ptr [rbx+rbx*1]
mov qword ptr [rbp-0xc0], rsp
xor esi, esi
lea rax, ptr [rdx+0x10]
shr rax, 0x4
shl rax, 0x4
sub rsp, rax
mov rdi, rsp
mov qword ptr [rbp-0x80], rsp
call 0x7fab2cdb5960
mov eax, dword ptr [rbp-0x78]
mov r8d, 0x1
mov dword ptr [rbp-0xc8], r15d
mov qword ptr [rbp-0x90], 0x1
mov ecx, 0x2
mov r15d, r8d
sub eax, 0x1
mov dword ptr [rbp-0xac], eax
mov rsi, qword ptr [rbp-0x80]
mov rax, qword ptr [rbp-0x90]
lea r10, ptr [rsi+rax*2]
mov esi, dword ptr [rbp-0xac]
lea rdi, ptr [r12+rax*8]
add word ptr [r10], 0x1
mov rbx, qword ptr [rdi]
cmp r15d, esi
jnb 0x7fab2cda915d
nop word ptr [rax+rax*1], ax
mov r13d, esi
lea r14, ptr [r12+r13*8]
mov rax, qword ptr [r14]
mov rax, qword ptr [rax+0x3b8]
test rax, rax
jnz 0x7fab2cda914d
jmp 0x7fab2cda9155
sub esi, 0x1
cmp r15d, esi
jb 0x7fab2cda9128
cmp dword ptr [rbp-0x78], ecx
mov r15d, ecx
jz 0x7fab2cda92b8
mov edx, dword ptr [rbp-0x78]
mov eax, ecx
mov dword ptr [rbp-0xa8], ecx
xor esi, esi
mov qword ptr [rbp-0x90], rax
sub edx, ecx
mov rcx, qword ptr [rbp-0x80]
add rdx, rdx
lea rdi, ptr [rcx+rax*2]
call 0x7fab2cdb5960
mov r13d, esi
lea r14, ptr [r12+r13*8]
mov rax, qword ptr [r14]
mov rax, qword ptr [rax+0x3b8]
test rax, rax
jnz 0x7fab2cda914d
jmp 0x7fab2cda9155
mov rdx, qword ptr [rax]
test rdx, rdx
jnz 0x7fab2cda9140
sub esi, 0x1
cmp r15d, esi
jb 0x7fab2cda9128
cmp dword ptr [rbp-0x78], ecx
mov r15d, ecx
jz 0x7fab2cda92b8
add rax, 0x8
cmp rbx, rdx
jz 0x7fab2cda9238
mov rdx, qword ptr [rax]
test rdx, rdx
jnz 0x7fab2cda9140
sub esi, 0x1
cmp r15d, esi
jb 0x7fab2cda9128
cmp dword ptr [rbp-0x78], ecx
mov r15d, ecx
jz 0x7fab2cda92b8
mov edx, dword ptr [rbp-0x78]
mov eax, ecx
mov dword ptr [rbp-0xa8], ecx
xor esi, esi
mov qword ptr [rbp-0x90], rax
sub edx, ecx
mov rcx, qword ptr [rbp-0x80]
add rdx, rdx
lea rdi, ptr [rcx+rax*2]
call 0x7fab2cdb5960
mov ecx, dword ptr [rbp-0xa8]
add ecx, 0x1
jmp 0x7fab2cda90fc
mov rsi, qword ptr [rbp-0x80]
mov rax, qword ptr [rbp-0x90]
lea r10, ptr [rsi+rax*2]
mov esi, dword ptr [rbp-0xac]
lea rdi, ptr [r12+rax*8]
add word ptr [r10], 0x1
mov rbx, qword ptr [rdi]
cmp r15d, esi
jnb 0x7fab2cda915d
nop word ptr [rax+rax*1], ax
mov r13d, esi
lea r14, ptr [r12+r13*8]
mov rax, qword ptr [r14]
mov rax, qword ptr [rax+0x3b8]
test rax, rax
jnz 0x7fab2cda914d
jmp 0x7fab2cda9155
mov r15d, dword ptr [rbp-0xc8]
mov rsp, qword ptr [rbp-0xc0]
mov rax, qword ptr [rbp-0xa0]
mov qword ptr [r12+rax*1], 0x0
mov rax, qword ptr [rbp-0x98]
or byte ptr [rax+0x316], 0x1
mov qword ptr [rax+0x3b8], r12
mov rcx, qword ptr [rbp-0x88]
test rcx, rcx
jz 0x7fab2cda9309
mov rdi, qword ptr [rax+0x3c0]
mov qword ptr [rax+0x3c0], rcx
call 0x7fab2cdae600
mov rdi, qword ptr [rbp-0xb8]
test rdi, rdi
jz 0x7fab2cda931a
call 0x7fab2cdae600
test r15d, r15d
jnz 0x7fab2cda997a
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
rdtsc 
mov ecx, dword ptr [r15+0x2c0]
shl rdx, 0x20
mov eax, eax
or rdx, rax
sub rdx, r14
add qword ptr [rip+0x21fb54], rdx
test ecx, ecx
jz 0x7fab2cd9e16d
mov rsi, qword ptr [r15+0x2b8]
mov eax, ecx
sub eax, 0x1
mov edx, eax
mov rdx, qword ptr [rsi+rdx*8]
or byte ptr [rdx+0x314], 0x10
test eax, eax
jnz 0x7fab2cd9e159
mov rax, qword ptr [rip+0x22089c]
mov rdx, qword ptr [rip+0x22089d]
mov qword ptr [rdx+0x18], rax
mov rax, qword ptr [rip+0x22088a]
test rax, rax
jz 0x7fab2cd9e18f
sub eax, 0x1
mov edx, eax
mov rdx, qword ptr [rsi+rdx*8]
or byte ptr [rdx+0x314], 0x10
test eax, eax
jnz 0x7fab2cd9e159
mov rax, qword ptr [rip+0x22089c]
mov rdx, qword ptr [rip+0x22089d]
mov qword ptr [rdx+0x18], rax
mov rax, qword ptr [rip+0x22088a]
test rax, rax
jz 0x7fab2cd9e18f
mov qword ptr [rax+0x20], rdx
cmp ecx, 0x1
jbe 0x7fab2cd9e1d5
mov rsi, qword ptr [r15+0x2b8]
lea rdi, ptr [rip+0x220856]
cmp qword ptr [rsi+0x8], rdi
jz 0x7fab2cd9e5c2
lea rax, ptr [rsi+0x10]
mov edx, 0x1
jmp 0x7fab2cd9e1ce
add edx, 0x1
cmp edx, ecx
jnz 0x7fab2cd9e1c0
mov byte ptr [rbp-0xa0], 0x0
jmp 0x7fab2cd9e652
add rax, 0x8
cmp qword ptr [rax-0x8], rdi
jz 0x7fab2cd9f2d2
add edx, 0x1
cmp edx, ecx
jnz 0x7fab2cd9e1c0
mov byte ptr [rbp-0xa0], 0x0
jmp 0x7fab2cd9e652
lea eax, ptr [rdx-0x1]
shl rax, 0x3
jmp 0x7fab2cd9e5c9
cmp qword ptr [rbp-0xb0], 0x0
mov rax, qword ptr [rsi+rax*1]
mov qword ptr [rip+0x22043c], rax
jnz 0x7fab2cd9f2be
add edx, 0x1
xor edi, edi
cmp ecx, edx
jbe 0x7fab2cd9e5ef
mov rdi, qword ptr [rsi+rdx*8]
mov rsi, qword ptr [rip+0x21f78a]
mov qword ptr [rip+0x220413], rdi
mov rcx, rdi
mov rdx, qword ptr [rax+0x18]
test rsi, rsi
jz 0x7fab2cd9e612
mov rsi, qword ptr [rip+0x21f78a]
mov qword ptr [rip+0x220413], rdi
mov rcx, rdi
mov rdx, qword ptr [rax+0x18]
test rsi, rsi
jz 0x7fab2cd9e612
cmp rsi, rdx
jz 0x7fab2cd9f2a2
cmp rdx, rcx
jnz 0x7fab2cd9f283
lea rcx, ptr [rip+0x2203d6]
mov qword ptr [rax+0x18], rcx
mov rdx, qword ptr [rip+0x2203e3]
test rdx, rdx
jz 0x7fab2cd9ed0c
cmp qword ptr [rdx+0x20], rax
jnz 0x7fab2cd9eced
lea rax, ptr [rip+0x2203b1]
mov byte ptr [rbp-0xa0], 0x1
mov qword ptr [rdx+0x20], rax
mov dword ptr [rbp-0x4c], r13d
lea r13, ptr [rbp-0x50]
xor eax, eax
lea rsi, ptr [rip-0x1d93]
test ebx, ebx
lea rdi, ptr [rip-0x220c]
setz al
mov rdx, r13
mov dword ptr [rbp-0x50], eax
call 0x7fab2cdab010
mov byte ptr [rbp-0xa0], 0x1
jmp 0x7fab2cd9e652
mov dword ptr [rbp-0x4c], r13d
lea r13, ptr [rbp-0x50]
xor eax, eax
lea rsi, ptr [rip-0x1d93]
test ebx, ebx
lea rdi, ptr [rip-0x220c]
setz al
mov rdx, r13
mov dword ptr [rbp-0x50], eax
call 0x7fab2cdab010
push r15
push r14
push r13
mov r13, rdi
push r12
mov r12, rsi
push rbp
mov rbp, rdx
push rbx
sub rsp, 0x8
call qword ptr [rip+0x2139c3]
mov r14, qword ptr [rip+0x214054]
mov r15, qword ptr [rax]
mov rbx, rax
mov qword ptr [rip+0x214047], r13
mov rdi, rbp
mov qword ptr [rax], 0x0
call r12
push rbx
mov rbx, rdi
mov edx, dword ptr [rdi+0x4]
mov rdi, qword ptr [rip+0x221782]
mov esi, 0x1
call 0x7fab2cdaca80
push r13
push r12
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x8
test rdi, rdi
jz 0x7fab2cdacae3
mov r12d, esi
mov r13d, edx
xor ebp, ebp
jmp 0x7fab2cdacaab
xor ecx, ecx
test byte ptr [rbx+0x315], 0x2
jnz 0x7fab2cdacaa0
mov rdi, rbx
mov edx, r13d
mov esi, r12d
call 0x7fab2cdac610
push rbp
mov rbp, rsp
push r15
push r14
push r13
push r12
push rbx
mov rbx, rdi
sub rsp, 0x78
mov rax, qword ptr [rdi+0x68]
mov dword ptr [rbp-0x6c], esi
mov dword ptr [rbp-0x70], edx
test rax, rax
jz 0x7fab2cdac986
mov rax, qword ptr [rax+0x8]
mov rdx, qword ptr [rdi+0x168]
mov qword ptr [rbp-0x68], rax
mov rax, qword ptr [rdi+0x158]
mov qword ptr [rbp-0x88], rdx
test rax, rax
mov qword ptr [rbp-0x90], rax
jz 0x7fab2cdac80f
mov rax, qword ptr [rax+0x8]
mov qword ptr [rbp-0x78], rax
mov rax, qword ptr [rdi]
add qword ptr [rbp-0x78], rax
mov rax, qword ptr [rbp-0x78]
cmp word ptr [rax], 0x1
jnz 0x7fab2cdac9aa
xor r12d, r12d
xor r13d, r13d
nop word ptr [rax+rax*1], ax
mov rax, qword ptr [rbp-0x78]
lea rdx, ptr [rip+0x2119c5]
mov r14d, dword ptr [rax+0x4]
mov rax, qword ptr [rbx+0x30]
add r14, qword ptr [rbp-0x68]
lea rax, ptr [rax+rax*8]
shl rax, 0x4
mov r15, qword ptr [rdx+rax*1]
test r15, r15
jnz 0x7fab2cdac6cd
jmp 0x7fab2cdac788
mov rsi, r15
mov rdi, r14
call 0x7fab2cdac190
test eax, eax
jz 0x7fab2cdac6c0
mov r14, r15
mov eax, dword ptr [rbp-0x70]
test eax, eax
jnz 0x7fab2cdac997
mov rax, qword ptr [rbp-0x78]
mov r15d, dword ptr [rax+0x8]
add r15, rax
mov rax, rbx
mov rbx, r14
mov r14, rax
jmp 0x7fab2cdac703
mov r15, qword ptr [r15+0x18]
test r15, r15
jz 0x7fab2cdac788
mov rsi, r15
mov rdi, r14
call 0x7fab2cdac190
movzx eax, word ptr [r15+0x4]
mov rdi, qword ptr [r14+0x8]
mov ecx, dword ptr [r15+0x8]
mov r8, qword ptr [rbx+0x28]
add rcx, qword ptr [rbp-0x68]
mov edx, dword ptr [r15]
mov rsi, qword ptr [r14+0x30]
and eax, 0x2
cmp byte ptr [rdi], 0x0
movzx eax, ax
jnz 0x7fab2cdac742
mov rdi, qword ptr [rip+0x2116cf]
lea r10, ptr [rip+0xa9dc]
mov rdi, qword ptr [rdi]
test rdi, rdi
cmovz rdi, r10
mov r9d, dword ptr [rbp-0x6c]
mov dword ptr [rsp], eax
call 0x7fab2cdac270
push rbp
mov rbp, rsp
push r15
mov r15, r8
push r14
mov r14d, edx
push r13
push r12
mov r12, rcx
push rbx
sub rsp, 0x58
test byte ptr [rip+0x211a2f], 0x10
mov rax, qword ptr [r8+0x68]
mov qword ptr [rbp-0x80], rdi
mov dword ptr [rbp-0x74], r9d
mov r13, qword ptr [rax+0x8]
jnz 0x7fab2cdac53f
mov rax, qword ptr [r15+0x168]
test rax, rax
jz 0x7fab2cdac4b6
mov rbx, qword ptr [rax+0x8]
test rbx, rbx
jz 0x7fab2cdac497
add rbx, qword ptr [r15]
cmp word ptr [rbx], 0x1
jnz 0x7fab2cdac2eb
cmp dword ptr [rbx+0x8], r14d
jz 0x7fab2cdac390
mov eax, dword ptr [rbx+0x10]
test eax, eax
jz 0x7fab2cdac3c0
add rbx, rax
cmp word ptr [rbx], 0x1
jz 0x7fab2cdac2cd
mov byte ptr [rbp-0x5d], 0x0
movzx ecx, word ptr [rbx]
lea rax, ptr [rip+0xb75b]
lea rdi, ptr [rbp-0x5d]
lea r8, ptr [rip+0xad5c]
mov rsi, 0xcccccccccccccccd
mov qword ptr [rbp-0x58], rax
mov rax, rcx
sub rdi, 0x1
mul rsi
shr rdx, 0x3
lea rax, ptr [rdx+rdx*4]
add rax, rax
sub rcx, rax
test rdx, rdx
movzx eax, byte ptr [r8+rcx*1]
mov rcx, rdx
mov byte ptr [rdi], al
jnz 0x7fab2cdac312
lea rax, ptr [rip+0xb729]
mov qword ptr [rbp-0x50], rdi
lea rbx, ptr [rbp-0x58]
xor r12d, r12d
mov qword ptr [rbp-0x48], rax
call 0x7fab2cdb4c50
cmp dword ptr [rbx+0x8], r14d
jz 0x7fab2cdac390
mov eax, dword ptr [rbx+0x10]
test eax, eax
jz 0x7fab2cdac3c0
add rbx, rax
cmp word ptr [rbx], 0x1
jz 0x7fab2cdac2cd
mov eax, dword ptr [rbx+0xc]
mov rdi, r12
mov esi, dword ptr [rbx+rax*1]
add rsi, r13
call 0x7fab2cdb4c20
test eax, eax
jnz 0x7fab2cdac2d7
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
or r13d, eax
movzx eax, word ptr [r15+0x6]
and eax, 0x7fff
cmp r12d, eax
cmovb r12d, eax
mov eax, dword ptr [r15+0xc]
test eax, eax
jnz 0x7fab2cdac700
mov rbx, r14
mov rax, qword ptr [rbp-0x78]
mov eax, dword ptr [rax+0xc]
test eax, eax
jz 0x7fab2cdac815
add qword ptr [rbp-0x78], rax
jmp 0x7fab2cdac690
mov rax, qword ptr [rbp-0x78]
lea rdx, ptr [rip+0x2119c5]
mov r14d, dword ptr [rax+0x4]
mov rax, qword ptr [rbx+0x30]
add r14, qword ptr [rbp-0x68]
lea rax, ptr [rax+rax*8]
shl rax, 0x4
mov r15, qword ptr [rdx+rax*1]
test r15, r15
jnz 0x7fab2cdac6cd
jmp 0x7fab2cdac788
add r15, rax
movzx eax, word ptr [r15+0x4]
mov rdi, qword ptr [r14+0x8]
mov ecx, dword ptr [r15+0x8]
mov r8, qword ptr [rbx+0x28]
add rcx, qword ptr [rbp-0x68]
mov edx, dword ptr [r15]
mov rsi, qword ptr [r14+0x30]
and eax, 0x2
cmp byte ptr [rdi], 0x0
movzx eax, ax
jnz 0x7fab2cdac742
mov rdi, qword ptr [rip+0x2116cf]
lea r10, ptr [rip+0xa9dc]
mov rdi, qword ptr [rdi]
test rdi, rdi
cmovz rdi, r10
mov r9d, dword ptr [rbp-0x6c]
mov dword ptr [rsp], eax
call 0x7fab2cdac270
mov rax, qword ptr [rbp-0x88]
test rax, rax
jz 0x7fab2cdac84b
mov rax, qword ptr [rax+0x8]
add rax, qword ptr [rbx]
jmp 0x7fab2cdac833
test r12d, r12d
mov eax, r13d
jnz 0x7fab2cdac862
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
add r12d, 0x1
mov esi, 0x18
mov edi, r12d
call 0x7fab2cd9bab0
test rax, rax
mov qword ptr [rbx+0x2e0], rax
jz 0x7fab2cdaca48
mov rdx, qword ptr [rbx+0x1c8]
mov dword ptr [rbx+0x2e8], r12d
mov rdx, qword ptr [rdx+0x8]
mov qword ptr [rbx+0x330], rdx
mov rdx, qword ptr [rbp-0x90]
test rdx, rdx
jz 0x7fab2cdac91a
mov rdi, qword ptr [rdx+0x8]
add rdi, qword ptr [rbx]
mov r8, qword ptr [rbp-0x68]
nop dword ptr [rax+rax*1], eax
mov edx, dword ptr [rdi+0x8]
add rdx, rdi
jmp 0x7fab2cdac8c3
movzx esi, word ptr [rdx+0x6]
mov ecx, esi
and cx, 0x7fff
movzx r9d, cx
cmp r12d, r9d
jbe 0x7fab2cdac907
movzx ecx, cx
and si, 0x8000
mov r9d, dword ptr [rdx]
lea rcx, ptr [rcx+rcx*2]
movzx esi, si
lea rcx, ptr [rax+rcx*8]
mov dword ptr [rcx+0xc], esi
mov esi, dword ptr [rdx+0x8]
mov dword ptr [rcx+0x8], r9d
add rsi, r8
mov qword ptr [rcx], rsi
mov esi, dword ptr [rdi+0x4]
add rsi, r8
mov qword ptr [rcx+0x10], rsi
mov ecx, dword ptr [rdx+0xc]
test ecx, ecx
jnz 0x7fab2cdac8c0
mov edx, dword ptr [rdi+0xc]
test edx, edx
jz 0x7fab2cdac91a
add rdi, rdx
jmp 0x7fab2cdac8b8
mov edx, dword ptr [rdi+0x8]
add rdx, rdi
jmp 0x7fab2cdac8c3
add rdx, rcx
movzx esi, word ptr [rdx+0x6]
mov ecx, esi
and cx, 0x7fff
movzx r9d, cx
cmp r12d, r9d
jbe 0x7fab2cdac907
movzx ecx, cx
and si, 0x8000
mov r9d, dword ptr [rdx]
lea rcx, ptr [rcx+rcx*2]
movzx esi, si
lea rcx, ptr [rax+rcx*8]
mov dword ptr [rcx+0xc], esi
mov esi, dword ptr [rdx+0x8]
mov dword ptr [rcx+0x8], r9d
add rsi, r8
mov qword ptr [rcx], rsi
mov esi, dword ptr [rdi+0x4]
add rsi, r8
mov qword ptr [rcx+0x10], rsi
mov ecx, dword ptr [rdx+0xc]
test ecx, ecx
jnz 0x7fab2cdac8c0
mov edx, dword ptr [rdi+0xc]
test edx, edx
jz 0x7fab2cdac91a
mov rdx, qword ptr [rbp-0x88]
test rdx, rdx
jz 0x7fab2cdac974
mov rdx, qword ptr [rdx+0x8]
mov r8, qword ptr [rbp-0x68]
add rdx, qword ptr [rbx]
jmp 0x7fab2cdac93b
lea rsp, ptr [rbp-0x28]
mov eax, r13d
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov rbx, qword ptr [rbx+0x18]
xor ecx, ecx
test eax, eax
setnz cl
or ebp, ecx
test rbx, rbx
jnz 0x7fab2cdacaab
add rsp, 0x8
mov eax, ebp
pop rbx
pop rbp
pop r12
pop r13
ret 
xor r12d, r12d
xor r13d, r13d
mov rax, qword ptr [rbp-0x88]
test rax, rax
jz 0x7fab2cdac84b
mov rax, qword ptr [rax+0x8]
add rax, qword ptr [rbx]
jmp 0x7fab2cdac833
movzx edx, word ptr [rax+0x4]
and edx, 0x7fff
cmp r12d, edx
cmovb r12d, edx
mov edx, dword ptr [rax+0x10]
test edx, edx
jnz 0x7fab2cdac830
test r12d, r12d
mov eax, r13d
jnz 0x7fab2cdac862
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
add rax, rdx
movzx edx, word ptr [rax+0x4]
and edx, 0x7fff
cmp r12d, edx
cmovb r12d, edx
mov edx, dword ptr [rax+0x10]
test edx, edx
jnz 0x7fab2cdac830
test r12d, r12d
mov eax, r13d
jnz 0x7fab2cdac862
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
test byte ptr [rdx+0x2], 0x1
mov esi, dword ptr [rdx+0xc]
jnz 0x7fab2cdac96d
movzx ecx, word ptr [rdx+0x4]
mov esi, dword ptr [rdx+rsi*1]
mov edi, dword ptr [rdx+0x8]
and ecx, 0x7fff
add rsi, r8
lea rcx, ptr [rcx+rcx*2]
lea rcx, ptr [rax+rcx*8]
mov dword ptr [rcx+0x8], edi
mov qword ptr [rcx], rsi
mov qword ptr [rcx+0x10], 0x0
mov ecx, dword ptr [rdx+0x10]
test ecx, ecx
jnz 0x7fab2cdac938
lea rsp, ptr [rbp-0x28]
mov eax, r13d
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov ecx, dword ptr [rdx+0x10]
test ecx, ecx
jnz 0x7fab2cdac938
lea rsp, ptr [rbp-0x28]
mov eax, r13d
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
add rdx, rcx
test byte ptr [rdx+0x2], 0x1
mov esi, dword ptr [rdx+0xc]
jnz 0x7fab2cdac96d
movzx ecx, word ptr [rdx+0x4]
mov esi, dword ptr [rdx+rsi*1]
mov edi, dword ptr [rdx+0x8]
and ecx, 0x7fff
add rsi, r8
lea rcx, ptr [rcx+rcx*2]
lea rcx, ptr [rax+rcx*8]
mov dword ptr [rcx+0x8], edi
mov qword ptr [rcx], rsi
mov qword ptr [rcx+0x10], 0x0
mov ecx, dword ptr [rdx+0x10]
test ecx, ecx
jnz 0x7fab2cdac938
lea rsp, ptr [rbp-0x28]
mov eax, r13d
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov r9d, dword ptr [rbp-0x6c]
mov dword ptr [rsp], eax
call 0x7fab2cdac270
mov rdx, qword ptr [rip+0x20b1e8]
lea rsi, ptr [rdx+rbx*1-0x1]
mov rax, rdx
neg rax
and rsi, rax
mov rbp, rsi
jz 0x7fab2cdb2b95
xor r9d, r9d
xor edi, edi
mov r8d, 0xffffffff
mov ecx, 0x22
mov edx, 0x3
mov rsi, rbp
call 0x7fab2cdb4610
cmp rax, 0xffffffffffffffff
jz 0x7fab2cdb2ba8
cmp rax, qword ptr [rip+0x20c5e7]
mov rdx, rax
cmovz rdx, qword ptr [rip+0x20c5e4]
add rax, rbp
mov qword ptr [rip+0x20c5d2], rax
add rbx, rdx
mov qword ptr [rip+0x20c5c0], rdx
mov qword ptr [rip+0x20c5c9], rbx
add rsp, 0x8
mov rax, rdx
pop rbx
pop rbp
ret 
test rax, rax
mov qword ptr [rbx+0x2e0], rax
jz 0x7fab2cdaca48
mov rdx, qword ptr [rbx+0x1c8]
mov dword ptr [rbx+0x2e8], r12d
mov rdx, qword ptr [rdx+0x8]
mov qword ptr [rbx+0x330], rdx
mov rdx, qword ptr [rbp-0x90]
test rdx, rdx
jz 0x7fab2cdac91a
mov rdi, qword ptr [rdx+0x8]
add rdi, qword ptr [rbx]
mov r8, qword ptr [rbp-0x68]
nop dword ptr [rax+rax*1], eax
mov edx, dword ptr [rdi+0x8]
add rdx, rdi
jmp 0x7fab2cdac8c3
test eax, eax
jz 0x7fab2cd9c8f2
mov eax, dword ptr [rbx]
test eax, eax
jnz 0x7fab2cd9c8f8
pop rbx
ret 
pop rbx
ret 
mov qword ptr [rbx], r15
mov qword ptr [rip+0x214030], r14
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
movzx eax, byte ptr [rip+0x2209a7]
cmp qword ptr [rbp-0x98], 0x0
mov byte ptr [rbp-0xa8], al
jnz 0x7fab2cd9e69d
call 0x7fab2cd9bec8
xor eax, eax
cmp qword ptr [rip+0x2230e6], 0x0
push rbx
mov rbx, qword ptr [rip+0x2230ae]
mov qword ptr [rip+0x2230b7], rbx
jnz 0x7fab2cd9c012
lea rdi, ptr [rbx+0x40]
mov esi, 0x1
shl rdi, 0x4
call 0x7fab2cd9bab0
cmp qword ptr [rip+0x2221ef], 0x0
lea rdx, ptr [rbx+0x3f]
mov qword ptr [rip+0x223084], rax
lea rsi, ptr [rax+0x10]
mov qword ptr [rax+0x8], 0x0
mov qword ptr [rax], rdx
jz 0x7fab2cd9bf3c
lea rcx, ptr [rip+0x1b59d]
lea rsi, ptr [rip+0x1b1d5]
lea rdi, ptr [rip+0x1c346]
mov edx, 0x2e7
call 0x7fab2cdb2d20
mov rax, qword ptr [rip+0x22211d]
xor ecx, ecx
test rax, rax
jz 0x7fab2cd9bf68
cmp qword ptr [rax+0x428], 0x0
jz 0x7fab2cd9bf62
movsxd rdx, ecx
inc ecx
shl rdx, 0x4
mov qword ptr [rsi+rdx*1+0x8], rax
mov rax, qword ptr [rax+0x18]
jmp 0x7fab2cd9bf45
mov rax, qword ptr [rax+0x18]
jmp 0x7fab2cd9bf45
test rax, rax
jz 0x7fab2cd9bf68
cmp qword ptr [rax+0x428], 0x0
jz 0x7fab2cd9bf62
movsxd rdx, ecx
inc ecx
shl rdx, 0x4
mov qword ptr [rsi+rdx*1+0x8], rax
mov rax, qword ptr [rax+0x18]
jmp 0x7fab2cd9bf45
movsxd rcx, ecx
cmp rbx, rcx
jz 0x7fab2cd9bf8f
lea rcx, ptr [rip+0x1b54a]
lea rsi, ptr [rip+0x1b182]
lea rdi, ptr [rip+0x1c32b]
mov edx, 0x2f3
call 0x7fab2cdb2d20
call 0x7fab2cdad7f0
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x8
mov rax, qword ptr [rip+0x21178b]
test rax, rax
jz 0x7fab2cdad991
cmp qword ptr [rax+0x8], 0x0
jnz 0x7fab2cdad972
mov rsi, qword ptr [rax+0x18]
lea r13, ptr [rax+0x10]
test rsi, rsi
jz 0x7fab2cdad93b
mov r14, qword ptr [rax]
test r14, r14
jz 0x7fab2cdad953
xor r9d, r9d
xor ebx, ebx
xor r12d, r12d
xor ebp, ebp
mov r11d, 0x40
jmp 0x7fab2cdad88e
mov rcx, qword ptr [rsi+0x430]
mov rax, qword ptr [rsi+0x438]
mov r15, r12
mov r10, qword ptr [rsi+0x428]
lea rdi, ptr [rcx-0x1]
neg rax
lea r8, ptr [rcx+r10*1-0x1]
and rdi, rax
cmp r11, rcx
cmovb r11, rcx
sub r15, rbp
sub r8, rdi
cmp r15, r10
jnb 0x7fab2cdad850
lea rax, ptr [r8+rbx*1]
xor edx, edx
div rcx
imul rax, rcx
add rdi, rax
lea rax, ptr [rbx+r10*1]
add r15, rax
cmp rdi, r15
jbe 0x7fab2cdad8ec
mov r12, rdi
mov rbp, rbx
sub r12, r10
mov qword ptr [rsi+0x440], rdi
mov rbx, rdi
jmp 0x7fab2cdad870
mov qword ptr [rsi+0x440], rdi
mov rbx, rdi
jmp 0x7fab2cdad870
add r9, 0x1
mov rax, r9
shl rax, 0x4
mov rsi, qword ptr [r13+rax*1+0x8]
test rsi, rsi
jz 0x7fab2cdad900
cmp r9, r14
jz 0x7fab2cdad953
mov rcx, qword ptr [rsi+0x430]
mov rax, qword ptr [rsi+0x438]
mov r15, r12
mov r10, qword ptr [rsi+0x428]
lea rdi, ptr [rcx-0x1]
neg rax
lea r8, ptr [rcx+r10*1-0x1]
and rdi, rax
cmp r11, rcx
cmovb r11, rcx
sub r15, rbp
sub r8, rdi
cmp r15, r10
jnb 0x7fab2cdad850
lea rax, ptr [rbx+r11*1+0x67f]
xor edx, edx
mov qword ptr [rip+0x211697], rbx
div r11
imul rax, r11
add rax, 0x900
mov qword ptr [rip+0x21167b], rax
mov qword ptr [rip+0x211684], r11
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
call 0x7fab2cdada80
push r12
mov rdi, qword ptr [rip+0x211527]
push rbp
push rbx
mov rbx, qword ptr [rip+0x21150e]
mov rsi, rbx
call 0x7fab2cd9ba80
test rax, rax
mov rbp, rax
jz 0x7fab2cdadbaa
lea rbx, ptr [rax+rbx*1-0x900]
mov edx, 0x900
test bl, 0x1
mov rdi, rbx
jnz 0x7fab2cdadb78
test dil, 0x2
jnz 0x7fab2cdadb90
test dil, 0x4
jnz 0x7fab2cdadb60
mov ecx, edx
xor eax, eax
shr ecx, 0x3
test dl, 0x4
rep stosq qword ptr [rdi]
rep stosq qword ptr [rdi]
jnz 0x7fab2cdadb48
test dl, 0x2
jnz 0x7fab2cdadb30
and edx, 0x1
jnz 0x7fab2cdadb28
mov rdi, qword ptr [rip+0x211495]
mov esi, 0x10
lea r12, ptr [rdi+0xe]
add rdi, 0x10
call 0x7fab2cd9bab0
test rax, rax
jz 0x7fab2cdadba2
lea rdx, ptr [rax+0x10]
mov qword ptr [rax], r12
mov qword ptr [rbx+0x8], rdx
mov rax, rbx
pop rbx
pop rbp
pop r12
ret 
test rax, rax
mov rsi, rax
jnz 0x7fab2cd9bfc0
lea rsi, ptr [rip+0x1c330]
mov edi, 0x2
xor eax, eax
call 0x7fab2cdac140
mov rax, qword ptr [rax+0x8]
mov edi, 0x1002
mov qword ptr [rip+0x222fe8], rax
mov qword ptr [rsi], rsi
mov eax, 0x9e
mov qword ptr [rsi+0x10], rsi
syscall 
test eax, eax
jz 0x7fab2cd9c008
lea rdx, ptr [rip+0x1c327]
lea rsi, ptr [rip+0x1c358]
mov edi, 0x2
xor eax, eax
call 0x7fab2cdac140
mov byte ptr [rip+0x223019], 0x1
mov rax, rsi
pop rbx
ret 
mov qword ptr [rbp-0x98], rax
cmp qword ptr [rip+0x2209d3], 0x0
jnz 0x7fab2cd9e6ac
call 0x7fab2cd9c014
push rbx
sub rsp, 0x10
mov rax, qword ptr [rip+0x221e38]
test rax, rax
jnz 0x7fab2cd9c072
lea rdi, ptr [rip+0x1b0db]
xor esi, esi
mov qword ptr [rsp+0x8], 0x0
call 0x7fab2cdb4490
mov rax, qword ptr [rax]
mov qword ptr [rsp+0x8], rax
and qword ptr [rsp+0x8], 0xffffffffffffff00
mov rcx, qword ptr [rsp+0x8]
mov qword ptr fs:[0x28], rcx
mov rax, qword ptr [rip+0x221dc0]
test rax, rax
jnz 0x7fab2cd9c0ad
rdtsc 
shl rdx, 0x20
mov eax, eax
or rdx, rax
xor rdx, rcx
jmp 0x7fab2cd9c0b1
mov rdx, qword ptr [rax+0x8]
mov qword ptr fs:[0x30], rdx
mov qword ptr [rip+0x221d93], 0x0
mov qword ptr [rip+0x221d24], rdx
add rsp, 0x10
pop rbx
ret 
cmp qword ptr [rbp-0xb0], 0x0
jnz 0x7fab2cd9ebf4
mov rdx, qword ptr [r15+0x278]
test rdx, rdx
jz 0x7fab2cd9ebe7
cmp qword ptr [rip+0x21f676], 0x0
jnz 0x7fab2cd9ebe7
mov ecx, dword ptr [rip+0x21f0d3]
xor ebx, ebx
jmp 0x7fab2cd9e7b9
lea rax, ptr [r15+0x2b8]
mov rdx, qword ptr [r15+0x2c0]
and ch, 0x2
mov qword ptr [rip+0x21f89f], rax
mov rax, qword ptr [r15+0x2b8]
mov qword ptr [rip+0x21f511], rdx
mov qword ptr [rip+0x21f502], rax
mov rax, qword ptr [rip+0x2201fb]
mov qword ptr [rip+0x21f574], rax
jnz 0x7fab2cd9eb22
test bl, bl
jz 0x7fab2cd9ea35
mov rcx, qword ptr [r15+0x280]
test rcx, rcx
jz 0x7fab2cd9e854
xor r14d, r14d
cmp qword ptr [rip+0x21f308], 0x0
setnz r14b
or dword ptr [rip+0x21f2b9], r14d
rdtsc 
mov r13, rdx
mov eax, eax
mov byte ptr [rbp-0xb0], bl
shl r13, 0x20
or r13, rax
mov eax, dword ptr [r15+0x2c0]
lea r12d, ptr [rax-0x1]
mov eax, r12d
mov r12, r15
mov r15d, eax
jmp 0x7fab2cd9eae5
cmp r15d, 0xffffffff
jnz 0x7fab2cd9ea78
movzx ebx, byte ptr [rbp-0xb0]
mov r15, r12
rdtsc 
shl rdx, 0x20
mov eax, eax
or rdx, rax
sub rdx, r13
cmp qword ptr [rip+0x21fec5], 0x0
mov qword ptr [rip+0x22051e], rdx
jz 0x7fab2cd9e8ac
call 0x7fab2cdacaf0
mov rax, qword ptr [r12+0x3b8]
mov edx, r15d
mov rbx, qword ptr [rax+rdx*8]
mov rax, qword ptr [rbx+0x38]
mov rax, qword ptr [rax+0x8]
test rax, rax
jnz 0x7fab2cd9eb4c
lea rax, ptr [rip+0x21ff59]
and byte ptr [rbx+0x316], 0xfe
cmp rbx, rax
jz 0x7fab2cd9eaca
mov eax, dword ptr [rip+0x21f253]
xor edx, edx
mov ecx, r14d
mov rsi, qword ptr [rbx+0x380]
mov rdi, rbx
test eax, eax
setnz dl
call 0x7fab2cda70a0
mov dword ptr [rax+0x10], 0x1
mov rax, qword ptr [rax+0x8]
test rax, rax
jz 0x7fab2cd9ea98
jmp 0x7fab2cd9eb4c
lea rax, ptr [rip+0x21ff59]
and byte ptr [rbx+0x316], 0xfe
cmp rbx, rax
jz 0x7fab2cd9eaca
mov eax, dword ptr [rip+0x21f253]
xor edx, edx
mov ecx, r14d
mov rsi, qword ptr [rbx+0x380]
mov rdi, rbx
test eax, eax
setnz dl
call 0x7fab2cda70a0
cmp qword ptr [rbx+0x428], 0x0
jz 0x7fab2cd9eae1
cmp byte ptr [rip+0x22054d], 0x0
jnz 0x7fab2cd9eb62
sub r15d, 0x1
cmp r15d, 0xffffffff
jnz 0x7fab2cd9ea78
sub r15d, 0x1
cmp r15d, 0xffffffff
jnz 0x7fab2cd9ea78
movzx ebx, byte ptr [rbp-0xb0]
mov r15, r12
rdtsc 
shl rdx, 0x20
mov eax, eax
or rdx, rax
sub rdx, r13
cmp qword ptr [rip+0x21fec5], 0x0
mov qword ptr [rip+0x22051e], rdx
jz 0x7fab2cd9e8ac
call 0x7fab2cdacaf0
push rbp
mov rbp, rsp
push r15
mov r15, rdi
push r14
push r13
push r12
push rbx
mov ebx, edx
sub rsp, 0x108
test edx, 0x8000000
mov qword ptr [rbp-0xb8], rsi
mov dword ptr [rbp-0xac], ecx
jnz 0x7fab2cda70e1
xor eax, eax
cmp qword ptr [rip+0x216d08], 0x0
setnz al
or dword ptr [rbp-0xac], eax
test byte ptr [r15+0x314], 0x4
jnz 0x7fab2cda7378
mov r14d, dword ptr [rbp-0xac]
test r14d, r14d
jz 0x7fab2cda75f0
cmp qword ptr [r15+0x100], 0x0
jz 0x7fab2cda70ff
xor r12d, r12d
test byte ptr [rip+0x2166b8], 0x20
jz 0x7fab2cda7113
lea rdx, ptr [rip+0xfd64]
jmp 0x7fab2cda82f6
mov r12d, ebx
and r12d, 0x1
test byte ptr [rip+0x216bb3], 0x20
jnz 0x7fab2cda82dd
cmp qword ptr [r15+0xf0], 0x0
jnz 0x7fab2cda8187
mov qword ptr [rbp-0xf8], 0x0
mov rax, qword ptr [r15+0x68]
cmp qword ptr [r15+0xf8], 0x0
mov rax, qword ptr [rax+0x8]
mov qword ptr [rbp-0xd0], rax
jz 0x7fab2cda7390
test r12d, r12d
jnz 0x7fab2cda7638
lea rsi, ptr [rbp-0x70]
xor eax, eax
mov ecx, 0x8
mov rdi, rsi
rep stosq qword ptr [rdi]
mov rax, qword ptr [r15+0x58]
mov rax, qword ptr [rax+0x8]
mov rdx, qword ptr [rax+0x8]
test rdx, rdx
jnz 0x7fab2cda7a70
mov r13d, dword ptr [rbp-0xac]
mov qword ptr [rax+0x8], r15
test r13d, r13d
jnz 0x7fab2cda832a
lea rdi, ptr [rip+0x9e38]
mov qword ptr [rax+0x10], rdi
mov rax, qword ptr [r15+0x288]
test rax, rax
jnz 0x7fab2cda73a9
jmp 0x7fab2cda7152
lea rsi, ptr [rbp-0x70]
xor eax, eax
mov ecx, 0x8
mov rdi, rsi
rep stosq qword ptr [rdi]
rep stosq qword ptr [rdi]
mov rax, qword ptr [r15+0x78]
test rax, rax
jz 0x7fab2cda7ac8
mov rdi, qword ptr [rax+0x8]
mov rax, qword ptr [r15+0x80]
mov r8, qword ptr [r15+0x180]
mov rcx, qword ptr [rax+0x8]
mov qword ptr [rbp-0x70], rdi
test r8, r8
mov qword ptr [rbp-0x68], rcx
jz 0x7fab2cda71b6
mov rax, rcx
mov rdx, 0xaaaaaaaaaaaaaaab
mul rdx
mov rax, qword ptr [r8+0x8]
shr rdx, 0x4
cmp rdx, rax
cmovbe rax, rdx
mov qword ptr [rbp-0x60], rax
add rdi, rcx
cmp qword ptr [r15+0xe0], 0x0
jz 0x7fab2cda71f8
mov rax, qword ptr [r15+0xf8]
mov rdx, qword ptr [rax+0x8]
mov rax, qword ptr [r15+0x50]
mov rax, qword ptr [rax+0x8]
lea r8, ptr [rax+rdx*1]
cmp r8, rdi
jz 0x7fab2cda7a00
test r12d, r12d
jz 0x7fab2cda7620
mov qword ptr [rbp-0x50], rdx
mov qword ptr [rbp-0x48], rax
mov dword ptr [rbp-0x38], r12d
lea rax, ptr [rsi+0x18]
and ebx, 0x2000000
mov dword ptr [rbp-0xb0], ebx
mov qword ptr [rbp-0xc0], rax
lea rax, ptr [rbp-0x18]
mov qword ptr [rbp-0xf0], rax
lea rax, ptr [rbp-0x80]
mov qword ptr [rbp-0xd8], rax
lea rax, ptr [rbp-0x78]
mov qword ptr [rbp-0x100], rax
lea rax, ptr [rbp-0x88]
mov qword ptr [rbp-0x108], rax
lea rax, ptr [rbp-0x90]
mov qword ptr [rbp-0x110], rax
mov rdi, qword ptr [rbp-0xc0]
mov rbx, qword ptr [r15]
mov rax, qword ptr [rdi-0x18]
mov r12d, dword ptr [rdi]
mov rdx, qword ptr [rdi-0x8]
mov r11, rax
add r11, qword ptr [rdi-0x10]
test r12d, r12d
jz 0x7fab2cda73c0
mov rcx, qword ptr [r15+0x70]
lea rdx, ptr [rdx+rdx*2]
lea r12, ptr [rax+rdx*8]
lea rdx, ptr [rip+0x217625]
mov rdi, qword ptr [rcx+0x8]
cmp r15, rdx
mov qword ptr [rbp-0x98], rdi
jz 0x7fab2cda7424
test rbx, rbx
jz 0x7fab2cda79e8
cmp rax, r12
jnb 0x7fab2cda7424
nop dword ptr [rax], eax
mov edx, dword ptr [rax+0x8]
mov rcx, rbx
add rcx, qword ptr [rax]
cmp rdx, 0x26
jz 0x7fab2cda7411
cmp rdx, 0x8
jnz 0x7fab2cda7ffa
mov rdx, rbx
add rdx, qword ptr [rax+0x10]
add rax, 0x18
cmp r12, rax
mov qword ptr [rcx], rdx
jnbe 0x7fab2cda73f8
mov edx, dword ptr [rax+0x8]
mov rcx, rbx
add rcx, qword ptr [rax]
cmp rdx, 0x26
jz 0x7fab2cda7411
cmp rdx, 0x8
jnz 0x7fab2cda7ffa
mov rdx, rbx
add rdx, qword ptr [rax+0x10]
add rax, 0x18
cmp r12, rax
mov qword ptr [rcx], rdx
jnbe 0x7fab2cda73f8
mov rax, qword ptr [r15+0x1c8]
test rax, rax
jz 0x7fab2cda7ad1
mov rax, qword ptr [rax+0x8]
cmp r11, r12
mov qword ptr [rbp-0xa8], rax
jbe 0x7fab2cda7328
mov rax, r15
xor r10d, r10d
mov r15, rbx
mov qword ptr [rbp-0xe8], 0x0
mov qword ptr [rbp-0xa0], r11
mov rbx, rax
mov qword ptr [rbp-0xe0], r10
nop dword ptr [rax], eax
mov rax, qword ptr [r12+0x8]
mov r13d, eax
cmp r13, 0x25
jz 0x7fab2cda7830
mov rdi, qword ptr [rbp-0xa8]
shr rax, 0x20
mov r11, r15
add r11, qword ptr [r12]
cmp r13, 0x8
mov rdx, qword ptr [rbx+0x2e0]
movzx ecx, word ptr [rdi+rax*2]
mov rdi, qword ptr [rbp-0x98]
lea rax, ptr [rax+rax*2]
lea r14, ptr [rdi+rax*8]
mov qword ptr [rbp-0x80], r14
jz 0x7fab2cda7fea
cmp r13, 0x26
jz 0x7fab2cda7fea
test r13, r13
jz 0x7fab2cda76a0
movzx eax, byte ptr [r14+0x4]
shr al, 0x4
test al, al
jz 0x7fab2cda7820
cmp r14, qword ptr [rbx+0x3f8]
lea rax, ptr [r13-0x10]
jz 0x7fab2cda8058
cmp rax, 0x2
setbe al
cmp r13, 0x7
setz sil
or eax, esi
test al, al
mov esi, 0x1
jnz 0x7fab2cda7514
xor esi, esi
cmp r13, 0x24
setz sil
xor r9d, r9d
cmp r13, 0x5
mov qword ptr [rbx+0x3f8], r14
setz r9b
and ecx, 0x7fff
lea rax, ptr [rcx+rcx*2]
add r9d, r9d
or r9d, esi
lea r8, ptr [rdx+rax*8]
mov dword ptr [rbx+0x400], r9d
test r8, r8
jz 0x7fab2cda7556
mov r10d, dword ptr [r8+0x8]
mov eax, 0x0
test r10d, r10d
cmovz r8, rax
mov edi, dword ptr [r14]
mov rcx, qword ptr [rbp-0xb8]
mov rsi, rbx
add rdi, qword ptr [rbp-0xd0]
mov rdx, qword ptr [rbp-0xd8]
mov qword ptr [rsp+0x8], 0x0
mov dword ptr [rsp], 0x1
mov qword ptr [rbp-0xc8], r11
call 0x7fab2cda5830
push rbp
mov rbp, rsp
push r15
mov r15, rsi
push r14
push r13
mov r13d, r9d
push r12
mov r12, r8
push rbx
mov rbx, rdx
sub rsp, 0xf8
movzx eax, byte ptr [rdi]
mov qword ptr [rbp-0xa8], rdi
mov qword ptr [rbp-0xc8], rcx
test al, al
jz 0x7fab2cda5a02
mov rdx, rdi
mov r14d, 0x1505
nop word ptr [rax+rax*1], ax
mov rcx, r14
add rdx, 0x1
shl rcx, 0x5
add r14, rcx
add r14, rax
movzx eax, byte ptr [rdx]
test al, al
jnz 0x7fab2cda5878
mov eax, r14d
mov qword ptr [rbp-0xb0], rax
mov eax, 0xffffffff
add qword ptr [rip+0x219131], 0x1
test r12, r12
mov qword ptr [rbp-0xa0], rax
mov qword ptr [rbp-0x90], 0x0
mov qword ptr [rbp-0x88], 0x0
jz 0x7fab2cda58d6
mov rcx, r14
add rdx, 0x1
shl rcx, 0x5
add r14, rcx
add r14, rax
movzx eax, byte ptr [rdx]
test al, al
jnz 0x7fab2cda5878
mov eax, r14d
mov qword ptr [rbp-0xb0], rax
mov eax, 0xffffffff
add qword ptr [rip+0x219131], 0x1
test r12, r12
mov qword ptr [rbp-0xa0], rax
mov qword ptr [rbp-0x90], 0x0
mov qword ptr [rbp-0x88], 0x0
jz 0x7fab2cda58d6
test dword ptr [rbp+0x10], 0xfffffffa
jnz 0x7fab2cda610a
cmp qword ptr [rbp+0x18], 0x0
mov rax, qword ptr [rbp-0xc8]
mov r9, qword ptr [rax]
jnz 0x7fab2cda5af0
test r9, r9
jz 0x7fab2cda6129
mov r10, rax
lea rax, ptr [rbp-0x90]
mov r14, r10
mov qword ptr [rbp-0xc0], rax
lea rax, ptr [rbp-0xa0]
mov qword ptr [rbp-0xb8], rax
mov eax, dword ptr [rbp+0x10]
mov r8, qword ptr [rbp-0xc0]
mov rcx, qword ptr [rbx]
mov rdx, qword ptr [rbp-0xb8]
mov rsi, qword ptr [rbp-0xb0]
mov rdi, qword ptr [rbp-0xa8]
mov qword ptr [rsp+0x28], r15
mov dword ptr [rsp+0x20], r13d
mov qword ptr [rsp+0x18], 0x0
mov dword ptr [rsp+0x10], eax
mov qword ptr [rsp+0x8], r12
mov qword ptr [rsp], 0x0
call 0x7fab2cda4ec0
push r15
mov r11, rdx
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rsi
sub rsp, 0x88
mov r12d, dword ptr [r9+0x8]
mov rax, qword ptr [rsp+0xc8]
mov qword ptr [rsp+0x18], r8
mov rbp, qword ptr [rsp+0xc0]
mov r14, qword ptr [rsp+0xd8]
mov qword ptr [rsp+0x58], rdi
mov qword ptr [rsp+0x68], rcx
mov qword ptr [rsp+0x48], rax
mov eax, dword ptr [rsp+0xd0]
mov dword ptr [rsp+0x74], eax
mov eax, dword ptr [rsp+0xe0]
mov dword ptr [rsp+0x7c], eax
mov r13, qword ptr [r9]
mov r8, rsi
mov r15d, esi
lea r9, ptr [rsp+0x40]
shr r8, 0x6
and r15d, 0x3f
nop dword ptr [rax+rax*1], eax
mov rax, qword ptr [r13+rbp*8]
mov dword ptr [rsp+0x70], 0x0
mov qword ptr [rsp+0x40], 0x0
mov rdi, qword ptr [rax+0x28]
cmp rdi, r14
mov qword ptr [rsp+0x50], rdi
jz 0x7fab2cda5050
test byte ptr [rsp+0x7c], 0x2
jz 0x7fab2cda4f74
test byte ptr [rdi+0x314], 0x3
jz 0x7fab2cda5050
test byte ptr [rdi+0x315], 0x20
jnz 0x7fab2cda5050
test byte ptr [rip+0x218d38], 0x8
jnz 0x7fab2cda5508
mov edx, dword ptr [rdi+0x2ec]
test edx, edx
jz 0x7fab2cda5050
mov rax, qword ptr [rdi+0x70]
mov rsi, qword ptr [rax+0x8]
mov rax, qword ptr [rdi+0x68]
mov rax, qword ptr [rax+0x8]
mov qword ptr [rsp+0x60], rax
mov rax, qword ptr [rdi+0x2f8]
test rax, rax
jz 0x7fab2cda55c4
mov ecx, r8d
and ecx, dword ptr [rdi+0x2f0]
mov r10, qword ptr [rax+rcx*8]
mov ecx, dword ptr [rdi+0x2f4]
mov rax, rbx
shr rax, cl
mov rcx, rax
mov rax, r10
shr rax, cl
mov ecx, r15d
shr r10, cl
and rax, r10
test al, 0x1
jnz 0x7fab2cda575a
mov dword ptr [rsp+0x78], 0x0
cmp dword ptr [rsp+0x70], 0x1
jz 0x7fab2cda5068
mov rax, qword ptr [rsp+0x48]
test rax, rax
jz 0x7fab2cda5050
mov rdi, qword ptr [rax+0x10]
test rdi, rdi
jz 0x7fab2cda5050
mov rsi, qword ptr [rsp+0x50]
mov qword ptr [rsp+0x20], r9
mov qword ptr [rsp+0x10], r11
mov qword ptr [rsp+0x8], r8
call 0x7fab2cdac190
add rbp, 0x1
cmp r12, rbp
jnbe 0x7fab2cda4f38
xor eax, eax
jmp 0x7fab2cda50d4
mov rax, qword ptr [r13+rbp*8]
mov dword ptr [rsp+0x70], 0x0
mov qword ptr [rsp+0x40], 0x0
mov rdi, qword ptr [rax+0x28]
cmp rdi, r14
mov qword ptr [rsp+0x50], rdi
jz 0x7fab2cda5050
test byte ptr [rsp+0x7c], 0x2
jz 0x7fab2cda4f74
test byte ptr [rdi+0x314], 0x3
jz 0x7fab2cda5050
mov ecx, edx
mov rax, rbx
xor edx, edx
div rcx
mov rax, qword ptr [rdi+0x300]
mov eax, dword ptr [rax+rdx*4]
test eax, eax
jz 0x7fab2cda4ff4
mov rdx, qword ptr [rdi+0x308]
lea rdx, ptr [rdx+rax*4]
jmp 0x7fab2cda5795
mov dword ptr [rsp+0x78], 0x0
cmp dword ptr [rsp+0x70], 0x1
jz 0x7fab2cda5068
mov rax, qword ptr [rsp+0x48]
test rax, rax
jz 0x7fab2cda5050
mov rdi, qword ptr [rax+0x10]
test rdi, rdi
jz 0x7fab2cda5050
mov ecx, dword ptr [rdx]
mov eax, ecx
xor rax, rbx
shr rax, 0x1
jnz 0x7fab2cda5788
mov rax, qword ptr [rsp+0x50]
mov rdi, rdx
mov r10, r9
mov qword ptr [rsp+0x30], r11
mov qword ptr [rsp+0x28], r8
mov qword ptr [rsp+0x8], r9
mov qword ptr [rsp+0x20], rdx
sub rdi, qword ptr [rax+0x308]
mov qword ptr [rsp+0x10], rsi
mov rax, rdi
sar rax, 0x2
mov dword ptr [rsp+0x78], eax
mov eax, eax
lea rax, ptr [rax+rax*2]
lea rdi, ptr [rsi+rax*8]
call 0x7fab2cda4d40
add rdx, 0x4
and ecx, 0x1
jnz 0x7fab2cda4ff4
mov ecx, dword ptr [rdx]
mov eax, ecx
xor rax, rbx
shr rax, 0x1
jnz 0x7fab2cda5788
mov rax, qword ptr [rsp+0x50]
mov rdi, rdx
mov r10, r9
mov qword ptr [rsp+0x30], r11
mov qword ptr [rsp+0x28], r8
mov qword ptr [rsp+0x8], r9
mov qword ptr [rsp+0x20], rdx
sub rdi, qword ptr [rax+0x308]
mov qword ptr [rsp+0x10], rsi
mov rax, rdi
sar rax, 0x2
mov dword ptr [rsp+0x78], eax
mov eax, eax
lea rax, ptr [rax+rax*2]
lea rdi, ptr [rsi+rax*8]
call 0x7fab2cda4d40
push r13
push r12
push rbp
mov rbp, rdi
push rbx
mov rbx, r10
sub rsp, 0x8
movzx eax, byte ptr [rdi+0x4]
and eax, 0xf
cmp qword ptr [rdi+0x8], 0x0
jz 0x7fab2cda4e75
xor edx, edx
cmp word ptr [rbp+0x6], 0x0
setz dl
test dword ptr [rbx+0x3c], edx
jnz 0x7fab2cda4e50
mov edx, 0x467
bt edx, eax
jnb 0x7fab2cda4e50
cmp rbp, qword ptr [rbx+0x28]
jz 0x7fab2cda4da1
mov edi, dword ptr [rbp]
mov rsi, qword ptr [rbx+0x18]
add rdi, qword ptr [rbx+0x20]
call 0x7fab2cdb4c20
mov r12, qword ptr [rbx+0x8]
mov rsi, qword ptr [rbx+0x10]
test r12, r12
mov rax, qword ptr [rsi+0x330]
jz 0x7fab2cda4e10
test rax, rax
jz 0x7fab2cda4e82
mov edx, dword ptr [rbx+0x38]
movzx r13d, word ptr [rax+rdx*2]
mov rax, r13
and eax, 0x7fff
lea rdx, ptr [rax+rax*2]
mov rax, qword ptr [rsi+0x2e0]
lea rax, ptr [rax+rdx*8]
mov ebx, dword ptr [rax+0x8]
cmp ebx, dword ptr [r12+0x8]
jz 0x7fab2cda4e60
mov rsi, qword ptr [r12]
mov rdi, qword ptr [rax]
call 0x7fab2cdb4c20
test eax, eax
jz 0x7fab2cda4dfa
jmp 0x7fab2cda4de7
add rsp, 0x8
mov rax, rbp
pop rbx
pop rbp
pop r12
pop r13
ret 
test rax, rax
mov r9, qword ptr [rsp+0x8]
mov r8, qword ptr [rsp+0x28]
mov r11, qword ptr [rsp+0x30]
jnz 0x7fab2cda5072
mov rdx, qword ptr [rsp+0x20]
mov rsi, qword ptr [rsp+0x10]
mov ecx, dword ptr [rdx]
jmp 0x7fab2cda5788
movzx edx, byte ptr [rax+0x4]
shr dl, 0x4
cmp dl, 0x2
jz 0x7fab2cda50a8
cmp dl, 0xa
jz 0x7fab2cda50f0
cmp dl, 0x1
jz 0x7fab2cda50b6
mov qword ptr [rsp+0x20], rax
mov rsi, rax
mov rbx, qword ptr [rsp+0x18]
mov rax, qword ptr [rsp+0x50]
mov qword ptr [rbx], rsi
mov qword ptr [rbx+0x8], rax
mov eax, 0x1
add rsp, 0x88
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
cmp eax, 0x0
jnle 0x7fab2cda5978
jnz 0x7fab2cda5f6a
add r14, 0x8
mov r9, qword ptr [r14]
test r9, r9
jnz 0x7fab2cda5916
mov qword ptr [rbp-0xd0], 0x0
nop dword ptr [rax+rax*1], eax
cmp qword ptr [rbp-0x90], 0x0
jz 0x7fab2cda6129
mov rcx, qword ptr [rbx]
test rcx, rcx
jz 0x7fab2cda59a9
movzx eax, byte ptr [rcx+0x5]
and eax, 0x3
cmp al, 0x3
jz 0x7fab2cda5a18
mov r9, qword ptr [rbp-0x88]
xor r14d, r14d
movzx eax, byte ptr [r9+0x314]
and eax, 0x3
cmp al, 0x2
mov rax, r9
jz 0x7fab2cda623d
mov edx, dword ptr [rax+0x3cc]
test edx, edx
jz 0x7fab2cda5f5b
mov edx, dword ptr [rip+0x2182e3]
test edx, 0x804
jnz 0x7fab2cda5ba2
mov rdx, qword ptr [rbp-0x90]
mov qword ptr [rbx], rdx
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov rcx, qword ptr [rbp-0x80]
mov r11, qword ptr [rbp-0xc8]
mov r8, rax
mov qword ptr [rbx+0x408], rax
mov qword ptr [rbx+0x410], rcx
xor esi, esi
test rcx, rcx
jz 0x7fab2cda75c7
movzx edx, byte ptr [rcx+0x4]
mov rsi, qword ptr [rcx+0x8]
add rsi, qword ptr [r8]
and edx, 0xf
cmp dl, 0xa
jz 0x7fab2cda8019
cmp r13, 0x25
jnbe 0x7fab2cda7a90
lea rax, ptr [rip+0xf448]
lea rdi, ptr [rip+0xf441]
movsxd rax, dword ptr [rax+r13*4]
add rax, rdi
jmp rax
add rsi, qword ptr [r12+0x10]
mov qword ptr [r11], rsi
nop dword ptr [rax+rax*1], eax
add r12, 0x18
cmp qword ptr [rbp-0xa0], r12
jnbe 0x7fab2cda7470
mov r10, qword ptr [rbp-0xe0]
mov rax, rbx
mov rbx, r15
mov r15, rax
test r10, r10
jz 0x7fab2cda7328
mov r12, qword ptr [rbp-0xe8]
cmp r12, r10
jb 0x7fab2cda7328
mov rax, qword ptr [r12+0x8]
mov r13d, eax
cmp r13, 0x25
jz 0x7fab2cda7830
mov rdi, qword ptr [rbp-0xa8]
shr rax, 0x20
mov r11, r15
add r11, qword ptr [r12]
cmp r13, 0x8
mov rdx, qword ptr [rbx+0x2e0]
movzx ecx, word ptr [rdi+rax*2]
mov rdi, qword ptr [rbp-0x98]
lea rax, ptr [rax+rax*2]
lea r14, ptr [rdi+rax*8]
mov qword ptr [rbp-0x80], r14
jz 0x7fab2cda7fea
cmp r13, 0x26
jz 0x7fab2cda7fea
test r13, r13
jz 0x7fab2cda76a0
movzx eax, byte ptr [r14+0x4]
shr al, 0x4
test al, al
jz 0x7fab2cda7820
cmp r14, qword ptr [rbx+0x3f8]
lea rax, ptr [r13-0x10]
jz 0x7fab2cda8058
mov rcx, r14
mov r8, rbx
jmp 0x7fab2cda75b0
movzx edx, byte ptr [rcx+0x4]
mov rsi, qword ptr [rcx+0x8]
add rsi, qword ptr [r8]
and edx, 0xf
cmp dl, 0xa
jz 0x7fab2cda8019
cmp r13, 0x25
jnbe 0x7fab2cda7a90
lea rax, ptr [rip+0xf448]
lea rdi, ptr [rip+0xf441]
movsxd rax, dword ptr [rax+r13*4]
add rax, rdi
jmp rax
mov rax, qword ptr [rbp-0x80]
test rax, rax
jz 0x7fab2cda76a0
mov rdx, qword ptr [r8+0x440]
lea rcx, ptr [rdx+0x1]
cmp rcx, 0x1
jbe 0x7fab2cda8391
mov rcx, rax
mov rax, qword ptr [r12+0x10]
add rax, qword ptr [rcx+0x8]
sub rax, rdx
mov qword ptr [r11], rax
jmp 0x7fab2cda76a0
add r12, 0x18
cmp qword ptr [rbp-0xa0], r12
jnbe 0x7fab2cda7470
mov r10, qword ptr [rbp-0xe0]
mov rax, rbx
mov rbx, r15
mov r15, rax
test r10, r10
jz 0x7fab2cda7328
mov r12, qword ptr [rbp-0xe8]
cmp r12, r10
jb 0x7fab2cda7328
test r8, r8
jz 0x7fab2cda76a0
mov rax, qword ptr [r8+0x448]
mov qword ptr [r11], rax
jmp 0x7fab2cda76a0
cmp rax, 0x2
setbe al
cmp r13, 0x7
setz sil
or eax, esi
test al, al
mov esi, 0x1
jnz 0x7fab2cda7514
xor esi, esi
cmp r13, 0x24
setz sil
xor r9d, r9d
cmp r13, 0x5
mov qword ptr [rbx+0x3f8], r14
setz r9b
and ecx, 0x7fff
lea rax, ptr [rcx+rcx*2]
add r9d, r9d
or r9d, esi
lea r8, ptr [rdx+rax*8]
mov dword ptr [rbx+0x400], r9d
test r8, r8
jz 0x7fab2cda7556
mov r10d, dword ptr [r8+0x8]
mov eax, 0x0
test r10d, r10d
cmovz r8, rax
mov edi, dword ptr [r14]
mov rcx, qword ptr [rbp-0xb8]
mov rsi, rbx
add rdi, qword ptr [rbp-0xd0]
mov rdx, qword ptr [rbp-0xd8]
mov qword ptr [rsp+0x8], 0x0
mov dword ptr [rsp], 0x1
mov qword ptr [rbp-0xc8], r11
call 0x7fab2cda5830
mov edx, dword ptr [rip+0x218c5e]
test edx, edx
jnz 0x7fab2cda5661
mov qword ptr [rsp+0x20], rax
mov rsi, rax
mov rbx, qword ptr [rsp+0x18]
mov rax, qword ptr [rsp+0x50]
mov qword ptr [rbx], rsi
mov qword ptr [rbx+0x8], rax
mov eax, 0x1
add rsp, 0x88
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
test eax, eax
mov r8, qword ptr [rsp+0x8]
mov r11, qword ptr [rsp+0x10]
mov r9, qword ptr [rsp+0x20]
jnz 0x7fab2cda5750
nop word ptr [rax+rax*1], ax
add rbp, 0x1
cmp r12, rbp
jnbe 0x7fab2cda4f38
xor eax, eax
jmp 0x7fab2cda50d4
mov rsi, qword ptr [rsp+0x50]
mov qword ptr [rsp+0x20], r9
mov qword ptr [rsp+0x10], r11
mov qword ptr [rsp+0x8], r8
call 0x7fab2cdac190
test eax, eax
jnz 0x7fab2cda4e50
mov r12, qword ptr [rbx+0x8]
mov rsi, qword ptr [rbx+0x10]
test r12, r12
mov rax, qword ptr [rsi+0x330]
jz 0x7fab2cda4e10
test rax, rax
jz 0x7fab2cda4e82
mov edx, dword ptr [rbx+0x38]
movzx r13d, word ptr [rax+rdx*2]
mov rax, r13
and eax, 0x7fff
lea rdx, ptr [rax+rax*2]
mov rax, qword ptr [rsi+0x2e0]
lea rax, ptr [rax+rdx*8]
mov ebx, dword ptr [rax+0x8]
cmp ebx, dword ptr [r12+0x8]
jz 0x7fab2cda4e60
mov eax, dword ptr [r12+0xc]
test eax, eax
jnz 0x7fab2cda4e50
test ebx, ebx
jnz 0x7fab2cda4e50
mov dword ptr [rax+0x3cc], 0x1
jmp 0x7fab2cda59d7
mov edx, dword ptr [rip+0x2182e3]
test edx, 0x804
jnz 0x7fab2cda5ba2
mov rdx, qword ptr [rbp-0x90]
mov qword ptr [rbx], rdx
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
add rsp, 0x88
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
mov rax, qword ptr [rbx]
test rax, rax
jz 0x7fab2cda613c
movzx eax, byte ptr [rax+0x4]
shr al, 0x4
cmp al, 0x2
jz 0x7fab2cda6143
cmp qword ptr [rbp+0x18], 0x0
jz 0x7fab2cda6151
mov qword ptr [rbx], 0x0
xor eax, eax
jmp 0x7fab2cda59f3
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
cmp r13, 0x25
jnbe 0x7fab2cda7a90
lea rax, ptr [rip+0xf448]
lea rdi, ptr [rip+0xf441]
movsxd rax, dword ptr [rax+r13*4]
add rax, rdi
jmp rax
cmp rax, 0x2
mov edi, 0x1
setbe sil
cmp r13, 0x7
setz al
or al, sil
jnz 0x7fab2cda807b
xor edi, edi
cmp r13, 0x24
setz dil
xor esi, esi
cmp r13, 0x5
setz sil
add esi, esi
or esi, edi
cmp esi, dword ptr [rbx+0x400]
jnz 0x7fab2cda7501
mov rcx, qword ptr [rbx+0x410]
add qword ptr [rip+0x21693c], 0x1
mov r8, qword ptr [rbx+0x408]
mov qword ptr [rbp-0x80], rcx
jmp 0x7fab2cda75a9
xor esi, esi
test rcx, rcx
jz 0x7fab2cda75c7
movzx edx, byte ptr [rcx+0x4]
mov rsi, qword ptr [rcx+0x8]
add rsi, qword ptr [r8]
and edx, 0xf
cmp dl, 0xa
jz 0x7fab2cda8019
cmp r13, 0x25
jnbe 0x7fab2cda7a90
add qword ptr [rbp-0xc0], 0x20
mov rax, qword ptr [rbp-0xf0]
cmp qword ptr [rbp-0xc0], rax
jnz 0x7fab2cda724c
mov eax, dword ptr [rbp-0xac]
test eax, eax
jnz 0x7fab2cda80f3
or byte ptr [r15+0x314], 0x4
cmp qword ptr [rbp-0xf8], 0x0
jnz 0x7fab2cda815a
mov rdi, qword ptr [rbp-0xc0]
mov rbx, qword ptr [r15]
mov rax, qword ptr [rdi-0x18]
mov r12d, dword ptr [rdi]
mov rdx, qword ptr [rdi-0x8]
mov r11, rax
add r11, qword ptr [rdi-0x10]
test r12d, r12d
jz 0x7fab2cda73c0
xor r13d, r13d
xor r12d, r12d
cmp rax, r11
jb 0x7fab2cda72b4
jmp 0x7fab2cda7328
mov esi, dword ptr [rax+0x8]
cmp rsi, 0x25
jnz 0x7fab2cda7288
test r12, r12
mov r13, rax
jnz 0x7fab2cda72ab
mov r13, rax
mov r12, rax
add rax, 0x18
cmp r11, rax
jnbe 0x7fab2cda72b4
mov rdx, rbx
add rdx, qword ptr [rax]
cmp rsi, 0x7
jnz 0x7fab2cda7fb0
mov rcx, qword ptr [r15+0x3e0]
test rcx, rcx
jnz 0x7fab2cda7fd4
add qword ptr [rdx], rbx
add rax, 0x18
cmp r11, rax
jbe 0x7fab2cda72d8
add rax, 0x18
cmp r11, rax
jbe 0x7fab2cda72d8
mov esi, dword ptr [rax+0x8]
cmp rsi, 0x25
jnz 0x7fab2cda7288
test r12, r12
mov r13, rax
jnz 0x7fab2cda72ab
test r12, r12
jz 0x7fab2cda7328
cmp r13, r12
jb 0x7fab2cda7328
mov r11d, dword ptr [rbp-0xb0]
test r11d, r11d
jz 0x7fab2cda7301
cmp dword ptr [r12+0x8], 0x25
jnz 0x7fab2cda72f8
mov r14, qword ptr [r12]
mov rax, qword ptr [r12+0x10]
add r12, 0x18
add rax, qword ptr [r15]
call rax
cmp dword ptr [rip+0x336fa9], 0x0
jnz 0x7fab193b7c5e
call 0x7fab1934d180
xor eax, eax
push rbx
cpuid 
cmp ebx, 0x756e6547
mov dword ptr [rip+0x3a1a73], eax
jnz 0x7fab1934d1a7
cmp ecx, 0x6c65746e
jnz 0x7fab1934d1a7
cmp edx, 0x49656e69
jz 0x7fab1934d350
mov eax, 0x1
cpuid 
mov esi, eax
mov dword ptr [rip+0x3a18b5], edx
mov edi, eax
shr esi, 0x8
mov edx, eax
shr edi, 0x4
shr edx, 0xc
and esi, 0xf
mov r10d, eax
and edi, 0xf
and r10d, 0xf
and edx, 0xf0
cmp esi, 0xf
mov r9d, ecx
mov dword ptr [rip+0x3a187d], eax
mov dword ptr [rip+0x3a187b], ebx
mov dword ptr [rip+0x3a1879], ecx
jz 0x7fab1934d3f0
cmp esi, 0x6
mov r8d, 0x1
jnz 0x7fab1934d1c0
add edi, edx
lea ecx, ptr [rdi-0x1a]
cmp ecx, 0x1d
jnbe 0x7fab1934d420
and r9d, 0x10000000
mov r8d, 0x1
jz 0x7fab1934d1c0
or dword ptr [rip+0x3a1806], 0x33
mov r8d, 0x1
jmp 0x7fab1934d1c0
cmp dword ptr [rip+0x3a1a3d], 0x6
jle 0x7fab1934d1ea
mov eax, 0x7
xor ecx, ecx
cpuid 
mov dword ptr [rip+0x3a1a40], eax
mov dword ptr [rip+0x3a1a3e], ebx
mov dword ptr [rip+0x3a1a3c], ecx
mov dword ptr [rip+0x3a1a3a], edx
mov r9d, dword ptr [rip+0x3a1a1f]
test r9d, 0x8000000
jz 0x7fab1934d20b
xor ecx, ecx
xgetbv 
and eax, 0x6
cmp eax, 0x6
jz 0x7fab1934d308
cmp r8d, 0x1
jz 0x7fab1934d2c0
test r9d, 0x10000000
jz 0x7fab1934d318
or dword ptr [rip+0x3a1928], 0x40
and r9d, 0x1000
jz 0x7fab1934d32b
or dword ptr [rip+0x3a1915], 0x80
test byte ptr [rip+0x3a1900], 0x1
jz 0x7fab1934d20b
test byte ptr [rip+0x3a1900], 0x1
jz 0x7fab1934d20b
or dword ptr [rip+0x3a18fe], 0x100
jmp 0x7fab1934d20b
cmp r8d, 0x1
jz 0x7fab1934d2c0
mov dword ptr [rip+0x3a1a1d], esi
mov dword ptr [rip+0x3a1a1b], edi
mov dword ptr [rip+0x3a19d8], r8d
pop rbx
ret 
cmp esi, 0x6
jnz 0x7fab1934d215
cmp edi, 0x3f
jz 0x7fab1934d3e0
cmp edi, 0x3c
jz 0x7fab1934d410
cmp edi, 0x45
data16 nop 
jz 0x7fab1934d2eb
cmp edi, 0x46
jnz 0x7fab1934d215
cmp r10d, 0x1
jnbe 0x7fab1934d215
mov dword ptr [rip+0x3a1a1d], esi
mov dword ptr [rip+0x3a1a1b], edi
mov dword ptr [rip+0x3a19d8], r8d
pop rbx
ret 
lea rax, ptr [rip+0xb017b]
test dword ptr [rip+0x336fd1], 0x40
jnz 0x7fab193b7caa
test dword ptr [rip+0x336f8d], 0x200
jnz 0x7fab193b7c90
lea rax, ptr [rip+0xac25c]
test dword ptr [rip+0x336f82], 0x100000
jnz 0x7fab193b7caa
ret 
cmp r12, r13
mov qword ptr [r14+rbx*1], rax
jbe 0x7fab2cda7301
nop dword ptr [rax], eax
add qword ptr [rbp-0xc0], 0x20
mov rax, qword ptr [rbp-0xf0]
cmp qword ptr [rbp-0xc0], rax
jnz 0x7fab2cda724c
mov eax, dword ptr [rbp-0xac]
test eax, eax
jnz 0x7fab2cda80f3
lea rax, ptr [rip+0xcae71]
sub rsp, 0x28
lea rdx, ptr [rip+0xcae6b]
mov dword ptr [rsp+0xc], 0x1
mov dword ptr [rsp+0x8], 0x3ae75f6
mov ecx, 0x5f
mov qword ptr [rsp], rax
mov eax, 0x50e3a8
shl rax, 0x4
add rdx, 0x1
add rcx, rax
mov rax, rcx
and eax, 0xf0000000
shr rax, 0x18
xor rax, rcx
movzx ecx, byte ptr [rdx]
test cl, cl
jnz 0x7fab193dc2e0
and eax, 0xfffffff
cmp eax, 0x3ae75f6
jnz 0x7fab193dc33b
lea rdi, ptr [rip+0xcca6c]
mov rsi, rsp
mov qword ptr [rsp+0x10], 0x0
call 0x7fab19461520
shl rax, 0x4
add rdx, 0x1
add rcx, rax
mov rax, rcx
and eax, 0xf0000000
shr rax, 0x18
xor rax, rcx
movzx ecx, byte ptr [rdx]
test cl, cl
jnz 0x7fab193dc2e0
and eax, 0xfffffff
cmp eax, 0x3ae75f6
jnz 0x7fab193dc33b
lea rdi, ptr [rip+0xcca6c]
mov rsi, rsp
mov qword ptr [rsp+0x10], 0x0
call 0x7fab19461520
mov rax, qword ptr [rip+0x287939]
mov r8, rsi
mov rsi, qword ptr [rax+0xc0]
test rsi, rsi
jz 0x7fab194615c8
sub rsp, 0x48
xor r9d, r9d
lea rcx, ptr [rsi+0x388]
lea rdx, ptr [rsp+0x20]
mov qword ptr [rsp+0x20], 0x0
mov qword ptr [rsp+0x28], 0x0
mov qword ptr [rsp+0x30], 0x0
mov byte ptr [rsp+0x24], 0x20
mov qword ptr [rsp+0x18], rdx
mov qword ptr [rsp+0x8], 0x0
lea rdx, ptr [rsp+0x18]
mov dword ptr [rsp], 0x0
call qword ptr [rax+0xf0]
push rbp
mov rbp, rsp
push r15
mov r15, rsi
push r14
push r13
mov r13d, r9d
push r12
mov r12, r8
push rbx
mov rbx, rdx
sub rsp, 0xf8
movzx eax, byte ptr [rdi]
mov qword ptr [rbp-0xa8], rdi
mov qword ptr [rbp-0xc8], rcx
test al, al
jz 0x7fab2cda5a02
mov rdx, rdi
mov r14d, 0x1505
nop word ptr [rax+rax*1], ax
mov rcx, r14
add rdx, 0x1
shl rcx, 0x5
add r14, rcx
add r14, rax
movzx eax, byte ptr [rdx]
test al, al
jnz 0x7fab2cda5878
mov eax, r14d
mov qword ptr [rbp-0xb0], rax
mov eax, 0xffffffff
add qword ptr [rip+0x219131], 0x1
test r12, r12
mov qword ptr [rbp-0xa0], rax
mov qword ptr [rbp-0x90], 0x0
mov qword ptr [rbp-0x88], 0x0
jz 0x7fab2cda58d6
mov rax, qword ptr [r11]
mov ecx, 0xffffffff
cmp rax, rcx
jz 0x7fab2cda5681
mov ecx, edx
xor edx, edx
div rcx
lea rax, ptr [rdx*4]
mov rdx, qword ptr [rdi+0x308]
mov eax, dword ptr [rdx+rax*1]
test eax, eax
mov dword ptr [rsp+0x78], eax
jnz 0x7fab2cda5624
jmp 0x7fab2cda4ffc
mov r10, qword ptr [rsp+0x58]
xor eax, eax
movzx ecx, byte ptr [r10]
test rcx, rcx
jz 0x7fab2cda5720
movzx eax, byte ptr [r10+0x1]
test al, al
jz 0x7fab2cda570d
shl rcx, 0x4
add rcx, rax
movzx eax, byte ptr [r10+0x2]
test al, al
jz 0x7fab2cda570d
shl rcx, 0x4
add rcx, rax
movzx eax, byte ptr [r10+0x3]
test al, al
jz 0x7fab2cda570d
shl rcx, 0x4
add rcx, rax
movzx eax, byte ptr [r10+0x4]
test al, al
jz 0x7fab2cda570d
shl rcx, 0x4
add rcx, rax
lea rax, ptr [r10+0x5]
movzx r10d, byte ptr [r10+0x5]
test r10b, r10b
jz 0x7fab2cda5707
shl rcx, 0x4
add rax, 0x1
add r10, rcx
mov rcx, r10
and ecx, 0xf0000000
shr rcx, 0x18
xor rcx, r10
movzx r10d, byte ptr [rax]
test r10b, r10b
jnz 0x7fab2cda56e3
and ecx, 0xfffffff
mov r10d, edx
mov rax, rcx
xor edx, edx
div r10
lea rax, ptr [rdx*4]
mov qword ptr [r11], rcx
jmp 0x7fab2cda55e4
mov rdx, qword ptr [rdi+0x308]
mov eax, dword ptr [rdx+rax*1]
test eax, eax
mov dword ptr [rsp+0x78], eax
jnz 0x7fab2cda5624
jmp 0x7fab2cda4ffc
lea rax, ptr [rax+rax*2]
mov r10, r9
mov qword ptr [rsp+0x28], r11
mov qword ptr [rsp+0x20], r8
mov qword ptr [rsp+0x8], r9
lea rdi, ptr [rsi+rax*8]
mov qword ptr [rsp+0x10], rsi
call 0x7fab2cda4d40
test rax, rax
mov r9, qword ptr [rsp+0x8]
mov r8, qword ptr [rsp+0x20]
mov r11, qword ptr [rsp+0x28]
jz 0x7fab2cda5600
jmp 0x7fab2cda5072
mov rdx, qword ptr [rsp+0x18]
test rdx, rdx
jz 0x7fab194615b0
test rax, rax
jz 0x7fab194615c0
mov rax, qword ptr [rax]
add rax, qword ptr [rdx+0x8]
add rsp, 0x48
ret 
mov rdx, 0xffffffffff600400
test rax, rax
cmovnz rdx, rax
add rsp, 0x28
mov rax, rdx
ret 
cmp dword ptr [rip+0x334cb9], 0x0
jnz 0x7fab193b9f4e
call 0x7fab1934d180
lea rax, ptr [rip+0xaf4fb]
test dword ptr [rip+0x334ce1], 0x40
jnz 0x7fab193b9f9a
test dword ptr [rip+0x334c9d], 0x200
jnz 0x7fab193b9f80
lea rax, ptr [rip+0xabb1c]
test dword ptr [rip+0x334c92], 0x100000
jnz 0x7fab193b9f9a
ret 
lea rax, ptr [rip+0xcadc1]
sub rsp, 0x28
lea rdx, ptr [rip+0xcadbb]
mov dword ptr [rsp+0xc], 0x1
mov dword ptr [rsp+0x8], 0x3ae75f6
mov ecx, 0x5f
mov qword ptr [rsp], rax
mov eax, 0x50e3a8
shl rax, 0x4
add rdx, 0x1
add rcx, rax
mov rax, rcx
and eax, 0xf0000000
shr rax, 0x18
xor rax, rcx
movzx ecx, byte ptr [rdx]
test cl, cl
jnz 0x7fab193dc390
and eax, 0xfffffff
cmp eax, 0x3ae75f6
jnz 0x7fab193dc3eb
lea rdi, ptr [rip+0xcc9d3]
mov rsi, rsp
mov qword ptr [rsp+0x10], 0x0
call 0x7fab19461520
shl rax, 0x4
add rdx, 0x1
add rcx, rax
mov rax, rcx
and eax, 0xf0000000
shr rax, 0x18
xor rax, rcx
movzx ecx, byte ptr [rdx]
test cl, cl
jnz 0x7fab193dc390
and eax, 0xfffffff
cmp eax, 0x3ae75f6
jnz 0x7fab193dc3eb
lea rdi, ptr [rip+0xcc9d3]
mov rsi, rsp
mov qword ptr [rsp+0x10], 0x0
call 0x7fab19461520
xor eax, eax
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
ret 
test rax, rax
mov r9, qword ptr [rsp+0x8]
mov r8, qword ptr [rsp+0x20]
mov r11, qword ptr [rsp+0x28]
jz 0x7fab2cda5600
jmp 0x7fab2cda5072
mov rax, qword ptr [rsp+0x50]
mov edx, dword ptr [rsp+0x78]
mov rsi, qword ptr [rsp+0x10]
mov rax, qword ptr [rax+0x300]
mov eax, dword ptr [rax+rdx*4]
test eax, eax
mov dword ptr [rsp+0x78], eax
jz 0x7fab2cda4ffc
lea rax, ptr [rax+rax*2]
mov r10, r9
mov qword ptr [rsp+0x28], r11
mov qword ptr [rsp+0x20], r8
mov qword ptr [rsp+0x8], r9
lea rdi, ptr [rsi+rax*8]
mov qword ptr [rsp+0x10], rsi
call 0x7fab2cda4d40
mov rdx, 0xffffffffff600000
test rax, rax
cmovnz rdx, rax
add rsp, 0x28
mov rax, rdx
ret 
sub rsp, 0x8
mov eax, dword ptr [rip+0x3377d6]
test eax, eax
jz 0x7fab193b7460
test byte ptr [rip+0x3377dc], 0x2
lea rax, ptr [rip-0x1ac]
jz 0x7fab193b7457
test byte ptr [rip+0x3377fb], 0x2
lea rax, ptr [rip+0xc3844]
lea rdx, ptr [rip+0xbb71d]
cmovz rax, rdx
add rsp, 0x8
ret 
or byte ptr [r15+0x314], 0x4
cmp qword ptr [rbp-0xf8], 0x0
jnz 0x7fab2cda815a
mov rax, qword ptr [r15+0x460]
test rax, rax
jnz 0x7fab2cda7a18
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov rcx, qword ptr [r15+0x458]
add rcx, qword ptr [r15]
mov rdx, qword ptr [rip+0x2162af]
lea rsi, ptr [rcx+rax*1]
neg rdx
mov rdi, rdx
and rdi, rcx
and rsi, rdx
cmp rdi, rsi
jz 0x7fab2cda7378
sub rsi, rdi
mov edx, 0x1
call 0x7fab2cdb4660
test eax, eax
jns 0x7fab2cda7378
mov rsi, qword ptr [r15+0x8]
mov edi, dword ptr [rip+0x21771f]
lea rcx, ptr [rip+0x12cd8]
xor edx, edx
call 0x7fab2cdaad20
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
cmp qword ptr [rbx+0x428], 0x0
jz 0x7fab2cd9eae1
cmp byte ptr [rip+0x22054d], 0x0
jnz 0x7fab2cd9eb62
sub r15d, 0x1
cmp r15d, 0xffffffff
jnz 0x7fab2cd9ea78
mov rdi, rbx
call 0x7fab2cdae3b0
push r12
mov r12, rdi
push rbp
mov rbp, qword ptr [rip+0x210bd3]
push rbx
mov rbx, qword ptr [rdi+0x448]
jmp 0x7fab2cdae3df
mov rax, qword ptr [rbp]
cmp rbx, rax
jnb 0x7fab2cdae3d0
shl rbx, 0x4
add rbp, rbx
mov qword ptr [rbp+0x18], r12
mov rax, qword ptr [rip+0x210bc6]
add rax, 0x1
mov qword ptr [rbp+0x10], rax
pop rbx
pop rbp
pop r12
ret 
jmp 0x7fab2cd9eae1
xor r9d, r9d
cmp r13, 0x5
mov qword ptr [rbx+0x3f8], r14
setz r9b
and ecx, 0x7fff
lea rax, ptr [rcx+rcx*2]
add r9d, r9d
or r9d, esi
lea r8, ptr [rdx+rax*8]
mov dword ptr [rbx+0x400], r9d
test r8, r8
jz 0x7fab2cda7556
mov r10d, dword ptr [r8+0x8]
mov eax, 0x0
test r10d, r10d
cmovz r8, rax
mov edi, dword ptr [r14]
mov rcx, qword ptr [rbp-0xb8]
mov rsi, rbx
add rdi, qword ptr [rbp-0xd0]
mov rdx, qword ptr [rbp-0xd8]
mov qword ptr [rsp+0x8], 0x0
mov dword ptr [rsp], 0x1
mov qword ptr [rbp-0xc8], r11
call 0x7fab2cda5830
mov rax, qword ptr [rbp-0x80]
test rax, rax
jz 0x7fab2cda76a0
mov rdx, qword ptr [r8+0x440]
lea rcx, ptr [rdx+0x1]
cmp rcx, 0x1
jbe 0x7fab2cda8391
mov rcx, rax
mov rax, qword ptr [r12+0x10]
add rax, qword ptr [rcx+0x8]
sub rax, rdx
mov qword ptr [r11], rax
jmp 0x7fab2cda76a0
xor esi, esi
cmp r13, 0x5
setz sil
add esi, esi
or esi, edi
cmp esi, dword ptr [rbx+0x400]
jnz 0x7fab2cda7501
mov rcx, qword ptr [rbx+0x410]
add qword ptr [rip+0x21693c], 0x1
mov r8, qword ptr [rbx+0x408]
mov qword ptr [rbp-0x80], rcx
jmp 0x7fab2cda75a9
mov rdx, qword ptr [rbp-0x80]
test rdx, rdx
jz 0x7fab2cda76a0
mov rax, qword ptr [r12+0x10]
add rax, qword ptr [rdx+0x8]
mov qword ptr [r11], rax
jmp 0x7fab2cda76a0
mov rax, qword ptr [r15+0x460]
test rax, rax
jnz 0x7fab2cda7a18
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
add rdi, rcx
cmp qword ptr [r15+0xe0], 0x0
jz 0x7fab2cda71f8
mov rax, qword ptr [r15+0xf8]
mov rdx, qword ptr [rax+0x8]
mov rax, qword ptr [r15+0x50]
mov rax, qword ptr [rax+0x8]
lea r8, ptr [rax+rdx*1]
cmp r8, rdi
jz 0x7fab2cda7a00
test r12d, r12d
jz 0x7fab2cda7620
mov qword ptr [rbp-0x50], rdx
mov qword ptr [rbp-0x48], rax
mov dword ptr [rbp-0x38], r12d
lea rax, ptr [rsi+0x18]
and ebx, 0x2000000
mov dword ptr [rbp-0xb0], ebx
mov qword ptr [rbp-0xc0], rax
lea rax, ptr [rbp-0x18]
mov qword ptr [rbp-0xf0], rax
lea rax, ptr [rbp-0x80]
mov qword ptr [rbp-0xd8], rax
lea rax, ptr [rbp-0x78]
mov qword ptr [rbp-0x100], rax
lea rax, ptr [rbp-0x88]
mov qword ptr [rbp-0x108], rax
lea rax, ptr [rbp-0x90]
mov qword ptr [rbp-0x110], rax
mov rdi, qword ptr [rbp-0xc0]
mov rbx, qword ptr [r15]
mov rax, qword ptr [rdi-0x18]
mov r12d, dword ptr [rdi]
mov rdx, qword ptr [rdi-0x8]
mov r11, rax
add r11, qword ptr [rdi-0x10]
test r12d, r12d
jz 0x7fab2cda73c0
xor r13d, r13d
xor r12d, r12d
cmp rax, r11
jb 0x7fab2cda72b4
jmp 0x7fab2cda7328
cmp qword ptr [r15+0x238], 0x0
jnz 0x7fab2cda7424
jmp 0x7fab2cda73ec
cmp rax, r12
jnb 0x7fab2cda7424
nop dword ptr [rax], eax
mov edx, dword ptr [rax+0x8]
mov rcx, rbx
add rcx, qword ptr [rax]
cmp rdx, 0x26
jz 0x7fab2cda7411
cmp rdx, 0x8
jnz 0x7fab2cda7ffa
cmp byte ptr [rbp-0xa8], 0x0
jnz 0x7fab2cd9e8c7
cmp qword ptr [rip+0x2206cb], 0x0
jz 0x7fab2cd9e8c7
add qword ptr [rip+0x2206f9], 0x1
mov rdi, qword ptr [rbp-0x98]
call 0x7fab2cdadbc0
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x28
test rdi, rdi
mov qword ptr [rsp+0x18], rdi
jz 0x7fab2cdadde9
mov rax, qword ptr [rdi+0x8]
mov rdx, qword ptr [rip+0x2113a1]
xor r13d, r13d
xor ebp, ebp
mov qword ptr [rsp+0x10], rax
mov rax, qword ptr [rip+0x211398]
mov qword ptr [rsp+0x8], rax
nop dword ptr [rax], eax
mov rsi, qword ptr [rsp+0x8]
xor ebx, ebx
test rbp, rbp
setz bl
mov rcx, qword ptr [rsi]
cmp rbx, rcx
jnb 0x7fab2cdadd2b
lea rax, ptr [rbx+rbp*1]
cmp rax, rdx
jnbe 0x7fab2cdadd70
lea rax, ptr [rbx+0x1]
shl rax, 0x4
lea r15, ptr [rsi+rax*1+0x8]
jmp 0x7fab2cdadcd0
mov rax, qword ptr [r15]
test rax, rax
jz 0x7fab2cdadcb6
mov rdx, qword ptr [r15-0x8]
mov rcx, qword ptr [rax+0x440]
cmp r13, rdx
cmovb r13, rdx
lea rdx, ptr [rcx+0x1]
cmp rdx, 0x1
jnbe 0x7fab2cdadc40
mov rax, qword ptr [rax+0x448]
add rbx, 0x1
shl rax, 0x4
add rax, qword ptr [rsp+0x10]
mov qword ptr [rax], 0xffffffffffffffff
mov byte ptr [rax+0x8], 0x0
mov rax, qword ptr [rsp+0x8]
mov rdx, qword ptr [rip+0x211265]
mov rcx, qword ptr [rax]
cmp rbx, rcx
jb 0x7fab2cdadcbf
cmp qword ptr [rax+0x448], rbx
jnz 0x7fab2cdadd8c
mov r12, qword ptr [rax+0x428]
mov r14, qword ptr [rax+0x420]
cmp r12, r14
jb 0x7fab2cdaddab
cmp rcx, r12
jb 0x7fab2cdaddca
mov rdx, rbx
mov rdi, qword ptr [rsp+0x18]
shl rdx, 0x4
add rdx, qword ptr [rsp+0x10]
sub rdi, rcx
mov qword ptr [rdx], rdi
mov byte ptr [rdx+0x8], 0x1
mov rdx, r14
mov rsi, qword ptr [rax+0x418]
call 0x7fab2cdb5970
test dl, 0x4
jz 0x7fab2cdb59aa
mov ecx, dword ptr [rsi]
mov dword ptr [rdi], ecx
add rsi, 0x4
add rdi, 0x4
test dl, 0x8
jz 0x7fab2cdb59c0
mov rcx, qword ptr [rsi]
mov qword ptr [rdi], rcx
add rsi, 0x8
add rdi, 0x8
nop dword ptr [rax], eax
and edx, 0xf0
jz 0x7fab2cdb59eb
test dl, 0x8
jz 0x7fab2cdb59c0
mov rcx, qword ptr [rsi]
mov qword ptr [rdi], rcx
add rsi, 0x8
add rdi, 0x8
nop dword ptr [rax], eax
and edx, 0xf0
jz 0x7fab2cdb59eb
nop dword ptr [rax+rax*1], eax
mov rcx, qword ptr [rsi]
mov r8, qword ptr [rsi+0x8]
mov qword ptr [rdi], rcx
mov qword ptr [rdi+0x8], r8
sub edx, 0x10
lea rsi, ptr [rsi+0x10]
lea rdi, ptr [rdi+0x10]
jnz 0x7fab2cdb59d0
mov rdx, r12
xor esi, esi
mov rdi, rax
sub rdx, r14
call 0x7fab2cdb5960
mov rax, qword ptr [rsp+0x8]
mov rdx, qword ptr [rip+0x2112d5]
mov rcx, qword ptr [rax]
add rbx, 0x1
cmp rbx, rcx
jnb 0x7fab2cdadd2b
lea rax, ptr [rbx+rbp*1]
add r15, 0x10
cmp rax, rdx
jnbe 0x7fab2cdadd70
mov rax, qword ptr [r15]
test rax, rax
jz 0x7fab2cdadcb6
mov rax, qword ptr [rsp+0x10]
mov qword ptr [rax], r13
mov rax, qword ptr [rsp+0x18]
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
cmp byte ptr [rip+0x22074e], 0x0
jnz 0x7fab2cd9e8fa
mov rsi, qword ptr [rbp-0x98]
mov edi, 0x1002
mov eax, 0x9e
mov qword ptr [rsi], rsi
mov qword ptr [rsi+0x10], rsi
syscall 
mov rax, qword ptr [rip+0x2200e7]
cmp qword ptr [rip+0x21f460], rax
jnz 0x7fab2cd9ea16
test bl, bl
jz 0x7fab2cd9e9c3
call 0x7fab2cdb2640
cmp byte ptr [rbp-0xa0], 0x0
jz 0x7fab2cd9e916
rdtsc 
mov rsi, qword ptr [r15+0x380]
mov rbx, rdx
lea rdi, ptr [rip+0x220015]
mov eax, eax
shl rbx, 0x20
xor ecx, ecx
xor edx, edx
or rbx, rax
and byte ptr [rip+0x220315], 0xfb
call 0x7fab2cda70a0
test rcx, rcx
jz 0x7fab2cda71ec
add rax, rcx
mov qword ptr [rbp-0x68], rax
jmp 0x7fab2cda71f8
lea rax, ptr [rsi+0x18]
and ebx, 0x2000000
mov dword ptr [rbp-0xb0], ebx
mov qword ptr [rbp-0xc0], rax
lea rax, ptr [rbp-0x18]
mov qword ptr [rbp-0xf0], rax
lea rax, ptr [rbp-0x80]
mov qword ptr [rbp-0xd8], rax
lea rax, ptr [rbp-0x78]
mov qword ptr [rbp-0x100], rax
lea rax, ptr [rbp-0x88]
mov qword ptr [rbp-0x108], rax
lea rax, ptr [rbp-0x90]
mov qword ptr [rbp-0x110], rax
mov rdi, qword ptr [rbp-0xc0]
mov rbx, qword ptr [r15]
mov rax, qword ptr [rdi-0x18]
mov r12d, dword ptr [rdi]
mov rdx, qword ptr [rdi-0x8]
mov r11, rax
add r11, qword ptr [rdi-0x10]
test r12d, r12d
jz 0x7fab2cda73c0
xor r13d, r13d
xor r12d, r12d
cmp rax, r11
jb 0x7fab2cda72b4
jmp 0x7fab2cda7328
rdtsc 
shl rdx, 0x20
mov eax, eax
or rdx, rax
sub rdx, rbx
add qword ptr [rip+0x22061f], rdx
jmp 0x7fab2cd9e916
call 0x7fab2cdb2640
ret 
mov eax, dword ptr [rip+0x21f4c7]
test eax, eax
jnz 0x7fab2cd9e976
xor esi, esi
xor edi, edi
call 0x7fab2cdab950
mov dword ptr [rax+0x18], 0x0
call 0x7fab2cdab940
ret 
call 0x7fab2cdb2340
mov rdi, qword ptr [rip+0x20cdb9]
lea rax, ptr [rdi-0x1]
cmp rax, 0xfffffffffffffffd
jbe 0x7fab2cdb2358
ret 
sub rsp, 0x8
mov rsi, qword ptr [rip+0x20cd8d]
call 0x7fab2cdb4640
mov eax, 0xb
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab2cdb4650
ret 
mov qword ptr [rip+0x20cd8d], 0x0
add rsp, 0x8
ret 
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov rax, qword ptr [rsp+0x18]
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
mov rbx, rax
rdtsc 
shl rdx, 0x20
mov eax, eax
or rdx, rax
sub rdx, qword ptr [rip+0x21dfbb]
test byte ptr [rip+0x21dfdc], 0x80
mov qword ptr [rbp-0x38], rdx
jnz 0x7fab2cda006a
add rsp, 0x68
mov rax, rbx
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov r12, rax
mov eax, dword ptr [rip+0x221b17]
pop rdx
lea rsp, ptr [rsp+rax*8]
sub edx, eax
push rdx
mov rsi, rdx
mov r13, rsp
and rsp, 0xfffffffffffffff0
mov rdi, qword ptr [rip+0x221d66]
lea rcx, ptr [r13+rdx*8+0x10]
lea rdx, ptr [r13+0x8]
xor ebp, ebp
call 0x7fab2cdab180
push r15
push r14
mov r14, rdi
push r13
mov r13, rcx
push r12
mov r12, rdx
push rbp
mov ebp, esi
push rbx
sub rsp, 0x8
mov rbx, qword ptr [rdi+0x140]
mov r15, qword ptr [rdi+0x148]
mov rdi, qword ptr [rip+0x213812]
test rdi, rdi
jnz 0x7fab2cdab207
test rbx, rbx
jnz 0x7fab2cdab222
mov eax, dword ptr [r14+0x2c0]
lea ebx, ptr [rax-0x1]
jmp 0x7fab2cdab1cb
test byte ptr [rdi+0x314], 0x8
jnz 0x7fab2cdab215
call 0x7fab2cdab070
push r14
push r13
mov r13, rcx
push r12
mov r12, rdx
push rbp
mov ebp, esi
push rbx
movzx eax, byte ptr [rdi+0x314]
mov rbx, rdi
mov rcx, qword ptr [rdi+0x8]
or eax, 0x8
mov byte ptr [rdi+0x314], al
movzx edx, byte ptr [rcx]
test dl, dl
jz 0x7fab2cdab16c
mov rax, qword ptr [rbx+0xa0]
test rax, rax
jz 0x7fab2cdab120
test byte ptr [rip+0x212c0b], 0x2
jnz 0x7fab2cdab133
test rax, rax
jz 0x7fab2cdab0cd
mov rax, qword ptr [rax+0x8]
add rax, qword ptr [rbx]
mov rdx, r13
mov rsi, r12
mov edi, ebp
call rax
sub rsp, 0x8
call 0x7fab19720b30
push r12
mov eax, 0xda
mov r9, qword ptr fs:[0x10]
push rbp
lea rdi, ptr [r9+0x2d0]
push rbx
sub rsp, 0xc0
syscall 
mov dword ptr [r9+0x2d0], eax
mov dword ptr [r9+0x2d4], eax
lea rax, ptr [r9+0x310]
mov qword ptr fs:[0x510], rax
mov byte ptr fs:[0x612], 0x1
mov rbp, qword ptr [rip+0x212458]
mov rax, qword ptr [rbp+0x968]
mov qword ptr fs:[0x620], rax
lea rdi, ptr [r9+0x2e0]
mov qword ptr [r9+0x2e8], 0xffffffffffffffe0
mov esi, 0x18
mov eax, 0x111
mov qword ptr [r9+0x2d8], rdi
mov qword ptr [r9+0x2e0], rdi
syscall 
xor r8d, r8d
mov dword ptr [rsp+0x20], 0x0
xor r10d, r10d
mov edx, 0x1
mov si, 0x189
lea rdi, ptr [rsp+0x20]
mov eax, 0xca
syscall 
cmp eax, 0xfffff000
mov dword ptr [rsp+0x20], eax
jbe 0x7fab19720ec8
cmp eax, 0xffffffda
jz 0x7fab19720c00
lea rax, ptr [rip+0x216826]
mov dword ptr [rax], 0x1
mov rax, qword ptr [rip+0x2123a1]
mov rax, qword ptr [rax]
mov qword ptr fs:[0x698], rax
lea rax, ptr [rip+0x216716]
lea rdx, ptr [rip+0x21670f]
mov qword ptr [rip+0x216708], rax
lea rax, ptr [r9+0x2c0]
mov qword ptr [r9+0x2c0], rdx
mov qword ptr [r9+0x2c8], rdx
mov qword ptr [rip+0x2166f4], rax
mov qword ptr [rip+0x2166e5], rax
movzx eax, byte ptr [rip+0x2126af]
mov byte ptr fs:[0x611], al
lea rax, ptr [rip-0x271]
lea rbx, ptr [rsp+0x28]
mov ecx, 0x10
mov dword ptr [rsp+0xa8], 0x4
lea r12, ptr [rsp+0x20]
xor edx, edx
mov qword ptr [rsp+0x20], rax
mov rdi, rbx
xor eax, eax
rep stosq qword ptr [rdi]
rep stosq qword ptr [rdi]
mov rsi, r12
mov edi, 0x20
call 0x7fab1972a340
sub rsp, 0xd0
test rsi, rsi
mov r8, rdx
jz 0x7fab1972a40b
mov rdx, qword ptr [rsi+0x8]
mov rax, qword ptr [rsi]
mov qword ptr [rsp-0x60], rdx
mov rdx, qword ptr [rsi+0x10]
mov qword ptr [rsp-0x78], rax
mov qword ptr [rsp-0x58], rdx
mov rdx, qword ptr [rsi+0x18]
mov qword ptr [rsp-0x50], rdx
mov rdx, qword ptr [rsi+0x20]
mov qword ptr [rsp-0x48], rdx
mov rdx, qword ptr [rsi+0x28]
mov qword ptr [rsp-0x40], rdx
mov rdx, qword ptr [rsi+0x30]
mov qword ptr [rsp-0x38], rdx
mov rdx, qword ptr [rsi+0x38]
mov qword ptr [rsp-0x30], rdx
mov rdx, qword ptr [rsi+0x40]
mov qword ptr [rsp-0x28], rdx
mov rdx, qword ptr [rsi+0x48]
mov qword ptr [rsp-0x20], rdx
mov rdx, qword ptr [rsi+0x50]
mov qword ptr [rsp-0x18], rdx
mov rdx, qword ptr [rsi+0x58]
mov qword ptr [rsp-0x10], rdx
mov rdx, qword ptr [rsi+0x60]
mov qword ptr [rsp-0x8], rdx
mov rdx, qword ptr [rsi+0x68]
mov qword ptr [rsp], rdx
mov rdx, qword ptr [rsi+0x70]
mov qword ptr [rsp+0x8], rdx
mov rdx, qword ptr [rsi+0x78]
mov qword ptr [rsp+0x10], rdx
mov rdx, qword ptr [rsi+0x80]
mov qword ptr [rsp+0x18], rdx
mov eax, dword ptr [rsi+0x88]
or eax, 0x4000000
cdqe 
mov qword ptr [rsp-0x70], rax
lea rax, ptr [rip-0xd6]
mov qword ptr [rsp-0x68], rax
xor eax, eax
lea r9, ptr [rsp+0x28]
test r8, r8
lea rcx, ptr [rsp-0x78]
mov rdx, rax
mov r10d, 0x8
cmovnz rdx, r9
test rsi, rsi
movsxd rdi, edi
cmovnz rax, rcx
mov ecx, 0xd
mov rsi, rax
mov eax, ecx
syscall 
cmp rax, 0xfffffffffffff000
mov rdx, rax
jnbe 0x7fab1972a51a
test edx, edx
jns 0x7fab1972a460
add rsp, 0xd0
ret 
test r8, r8
jz 0x7fab1972a450
mov rdx, qword ptr [rsp+0x28]
mov qword ptr [r8], rdx
mov rdx, qword ptr [rsp+0x40]
mov qword ptr [r8+0x8], rdx
mov rdx, qword ptr [r9+0x20]
mov qword ptr [r8+0x10], rdx
mov rdx, qword ptr [r9+0x28]
mov qword ptr [r8+0x18], rdx
mov rdx, qword ptr [r9+0x30]
mov qword ptr [r8+0x20], rdx
mov rdx, qword ptr [r9+0x38]
mov qword ptr [r8+0x28], rdx
mov rdx, qword ptr [r9+0x40]
mov qword ptr [r8+0x30], rdx
mov rdx, qword ptr [r9+0x48]
mov qword ptr [r8+0x38], rdx
mov rdx, qword ptr [r9+0x50]
mov qword ptr [r8+0x40], rdx
mov rdx, qword ptr [r9+0x58]
mov qword ptr [r8+0x48], rdx
mov rdx, qword ptr [r9+0x60]
mov qword ptr [r8+0x50], rdx
mov rdx, qword ptr [r9+0x68]
mov qword ptr [r8+0x58], rdx
mov rdx, qword ptr [r9+0x70]
mov qword ptr [r8+0x60], rdx
mov rdx, qword ptr [r9+0x78]
mov qword ptr [r8+0x68], rdx
mov rdx, qword ptr [r9+0x80]
mov qword ptr [r8+0x70], rdx
mov rdx, qword ptr [r9+0x88]
mov qword ptr [r8+0x78], rdx
mov rdx, qword ptr [r9+0x90]
mov qword ptr [r8+0x80], rdx
mov rdx, qword ptr [rsp+0x30]
mov dword ptr [r8+0x88], edx
mov rdx, qword ptr [rsp+0x38]
mov qword ptr [r8+0x90], rdx
add rsp, 0xd0
ret 
add rsp, 0xd0
ret 
lea rax, ptr [rip-0x21e]
xor edx, edx
mov rsi, r12
mov edi, 0x21
mov dword ptr [rsp+0xa8], 0x10000004
mov qword ptr [rsp+0x20], rax
call 0x7fab1972a340
sub rsp, 0xd0
test rsi, rsi
mov r8, rdx
jz 0x7fab1972a40b
mov rdx, qword ptr [rsi+0x8]
mov rax, qword ptr [rsi]
mov qword ptr [rsp-0x60], rdx
mov rdx, qword ptr [rsi+0x10]
mov qword ptr [rsp-0x78], rax
mov qword ptr [rsp-0x58], rdx
mov rdx, qword ptr [rsi+0x18]
mov qword ptr [rsp-0x50], rdx
mov rdx, qword ptr [rsi+0x20]
mov qword ptr [rsp-0x48], rdx
mov rdx, qword ptr [rsi+0x28]
mov qword ptr [rsp-0x40], rdx
mov rdx, qword ptr [rsi+0x30]
mov qword ptr [rsp-0x38], rdx
mov rdx, qword ptr [rsi+0x38]
mov qword ptr [rsp-0x30], rdx
mov rdx, qword ptr [rsi+0x40]
mov qword ptr [rsp-0x28], rdx
mov rdx, qword ptr [rsi+0x48]
mov qword ptr [rsp-0x20], rdx
mov rdx, qword ptr [rsi+0x50]
mov qword ptr [rsp-0x18], rdx
mov rdx, qword ptr [rsi+0x58]
mov qword ptr [rsp-0x10], rdx
mov rdx, qword ptr [rsi+0x60]
mov qword ptr [rsp-0x8], rdx
mov rdx, qword ptr [rsi+0x68]
mov qword ptr [rsp], rdx
mov rdx, qword ptr [rsi+0x70]
mov qword ptr [rsp+0x8], rdx
mov rdx, qword ptr [rsi+0x78]
mov qword ptr [rsp+0x10], rdx
mov rdx, qword ptr [rsi+0x80]
mov qword ptr [rsp+0x18], rdx
mov eax, dword ptr [rsi+0x88]
or eax, 0x4000000
cdqe 
mov qword ptr [rsp-0x70], rax
lea rax, ptr [rip-0xd6]
mov qword ptr [rsp-0x68], rax
xor eax, eax
lea r9, ptr [rsp+0x28]
test r8, r8
lea rcx, ptr [rsp-0x78]
mov rdx, rax
mov r10d, 0x8
cmovnz rdx, r9
test rsi, rsi
movsxd rdi, edi
cmovnz rax, rcx
mov ecx, 0xd
mov rsi, rax
mov eax, ecx
syscall 
mov rax, 0x180000000
mov r10d, 0x8
or qword ptr [rsp+0x28], rax
xor edx, edx
mov rsi, rbx
mov edi, 0x1
mov eax, 0xe
syscall 
lea rdi, ptr [rip+0x21672e]
mov rsi, rsp
call 0x7fab1971f930
jmp qword ptr [rip+0x2138d2]
push 0x3e
jmp 0x7fab1971f540
push qword ptr [rip+0x213ac2]
jmp qword ptr [rip+0x213ac4]
sub rsp, 0x38
mov qword ptr [rsp], rax
mov qword ptr [rsp+0x8], rcx
mov qword ptr [rsp+0x10], rdx
mov qword ptr [rsp+0x18], rsi
mov qword ptr [rsp+0x20], rdi
mov qword ptr [rsp+0x28], r8
mov qword ptr [rsp+0x30], r9
mov rsi, qword ptr [rsp+0x40]
mov rdi, qword ptr [rsp+0x38]
call 0x7fab2cdaa430
push r12
mov rax, rdi
mov esi, esi
lea rcx, ptr [rsi+rsi*2]
push rbp
push rbx
sub rsp, 0x20
mov rdx, qword ptr [rdi+0x68]
mov rsi, qword ptr [rax+0x70]
mov rdi, qword ptr [rdx+0x8]
mov rdx, qword ptr [rax+0xf8]
mov rsi, qword ptr [rsi+0x8]
mov rdx, qword ptr [rdx+0x8]
lea r8, ptr [rdx+rcx*8]
mov rcx, qword ptr [r8+0x8]
mov rdx, rcx
shr rdx, 0x20
lea r9, ptr [rdx+rdx*2]
lea rsi, ptr [rsi+r9*8]
mov r9, qword ptr [rax]
mov qword ptr [rsp+0x18], rsi
mov rbx, r9
add rbx, qword ptr [r8]
cmp ecx, 0x7
jnz 0x7fab2cdaa5bc
test byte ptr [rsi+0x5], 0x3
jnz 0x7fab2cdaa5db
mov rcx, qword ptr [rax+0x1c8]
test rcx, rcx
jz 0x7fab2cdaa5a0
mov rcx, qword ptr [rcx+0x8]
movzx edx, word ptr [rcx+rdx*2]
and edx, 0x7fff
lea rcx, ptr [rdx+rdx*2]
mov rdx, qword ptr [rax+0x2e0]
lea r8, ptr [rdx+rcx*8]
mov edx, 0x0
mov ecx, dword ptr [r8+0x8]
test ecx, ecx
cmovz r8, rdx
mov edx, dword ptr fs:[0x18]
test edx, edx
jnz 0x7fab2cdaa613
mov r9d, 0x1
mov r12d, dword ptr fs:[0x4c]
mov dword ptr fs:[0x4c], 0x1
mov esi, dword ptr [rsi]
mov rcx, qword ptr [rax+0x380]
lea rdx, ptr [rsp+0x18]
mov dword ptr [rsp], r9d
mov qword ptr [rsp+0x8], 0x0
mov r9d, 0x1
add rdi, rsi
mov rsi, rax
call 0x7fab2cda5830
push rbp
mov rbp, rsp
push r15
mov r15, rsi
push r14
push r13
mov r13d, r9d
push r12
mov r12, r8
push rbx
mov rbx, rdx
sub rsp, 0xf8
movzx eax, byte ptr [rdi]
mov qword ptr [rbp-0xa8], rdi
mov qword ptr [rbp-0xc8], rcx
test al, al
jz 0x7fab2cda5a02
mov rdx, rdi
mov r14d, 0x1505
nop word ptr [rax+rax*1], ax
mov rcx, r14
add rdx, 0x1
shl rcx, 0x5
add r14, rcx
add r14, rax
movzx eax, byte ptr [rdx]
test al, al
jnz 0x7fab2cda5878
mov eax, r14d
mov qword ptr [rbp-0xb0], rax
mov eax, 0xffffffff
add qword ptr [rip+0x219131], 0x1
test r12, r12
mov qword ptr [rbp-0xa0], rax
mov qword ptr [rbp-0x90], 0x0
mov qword ptr [rbp-0x88], 0x0
jz 0x7fab2cda58d6
mov rcx, r14
add rdx, 0x1
shl rcx, 0x5
add r14, rcx
add r14, rax
movzx eax, byte ptr [rdx]
test al, al
jnz 0x7fab2cda5878
mov eax, r14d
mov qword ptr [rbp-0xb0], rax
mov eax, 0xffffffff
add qword ptr [rip+0x219131], 0x1
test r12, r12
mov qword ptr [rbp-0xa0], rax
mov qword ptr [rbp-0x90], 0x0
mov qword ptr [rbp-0x88], 0x0
jz 0x7fab2cda58d6
test dword ptr [rbp+0x10], 0xfffffffa
jnz 0x7fab2cda610a
cmp qword ptr [rbp+0x18], 0x0
mov rax, qword ptr [rbp-0xc8]
mov r9, qword ptr [rax]
jnz 0x7fab2cda5af0
test r9, r9
jz 0x7fab2cda6129
mov r10, rax
lea rax, ptr [rbp-0x90]
mov r14, r10
mov qword ptr [rbp-0xc0], rax
lea rax, ptr [rbp-0xa0]
mov qword ptr [rbp-0xb8], rax
mov eax, dword ptr [rbp+0x10]
mov r8, qword ptr [rbp-0xc0]
mov rcx, qword ptr [rbx]
mov rdx, qword ptr [rbp-0xb8]
mov rsi, qword ptr [rbp-0xb0]
mov rdi, qword ptr [rbp-0xa8]
mov qword ptr [rsp+0x28], r15
mov dword ptr [rsp+0x20], r13d
mov qword ptr [rsp+0x18], 0x0
mov dword ptr [rsp+0x10], eax
mov qword ptr [rsp+0x8], r12
mov qword ptr [rsp], 0x0
call 0x7fab2cda4ec0
push r15
mov r11, rdx
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rsi
sub rsp, 0x88
mov r12d, dword ptr [r9+0x8]
mov rax, qword ptr [rsp+0xc8]
mov qword ptr [rsp+0x18], r8
mov rbp, qword ptr [rsp+0xc0]
mov r14, qword ptr [rsp+0xd8]
mov qword ptr [rsp+0x58], rdi
mov qword ptr [rsp+0x68], rcx
mov qword ptr [rsp+0x48], rax
mov eax, dword ptr [rsp+0xd0]
mov dword ptr [rsp+0x74], eax
mov eax, dword ptr [rsp+0xe0]
mov dword ptr [rsp+0x7c], eax
mov r13, qword ptr [r9]
mov r8, rsi
mov r15d, esi
lea r9, ptr [rsp+0x40]
shr r8, 0x6
and r15d, 0x3f
nop dword ptr [rax+rax*1], eax
mov rax, qword ptr [r13+rbp*8]
mov dword ptr [rsp+0x70], 0x0
mov qword ptr [rsp+0x40], 0x0
mov rdi, qword ptr [rax+0x28]
cmp rdi, r14
mov qword ptr [rsp+0x50], rdi
jz 0x7fab2cda5050
test byte ptr [rsp+0x7c], 0x2
jz 0x7fab2cda4f74
test byte ptr [rdi+0x314], 0x3
jz 0x7fab2cda5050
test byte ptr [rdi+0x315], 0x20
jnz 0x7fab2cda5050
test byte ptr [rip+0x218d38], 0x8
jnz 0x7fab2cda5508
mov edx, dword ptr [rdi+0x2ec]
test edx, edx
jz 0x7fab2cda5050
mov rax, qword ptr [rdi+0x70]
mov rsi, qword ptr [rax+0x8]
mov rax, qword ptr [rdi+0x68]
mov rax, qword ptr [rax+0x8]
mov qword ptr [rsp+0x60], rax
mov rax, qword ptr [rdi+0x2f8]
test rax, rax
jz 0x7fab2cda55c4
mov ecx, r8d
and ecx, dword ptr [rdi+0x2f0]
mov r10, qword ptr [rax+rcx*8]
mov ecx, dword ptr [rdi+0x2f4]
mov rax, rbx
shr rax, cl
mov rcx, rax
mov rax, r10
shr rax, cl
mov ecx, r15d
shr r10, cl
and rax, r10
test al, 0x1
jnz 0x7fab2cda575a
mov dword ptr [rsp+0x78], 0x0
cmp dword ptr [rsp+0x70], 0x1
jz 0x7fab2cda5068
mov rax, qword ptr [rsp+0x48]
test rax, rax
jz 0x7fab2cda5050
mov rdi, qword ptr [rax+0x10]
test rdi, rdi
jz 0x7fab2cda5050
mov rsi, qword ptr [rsp+0x50]
mov qword ptr [rsp+0x20], r9
mov qword ptr [rsp+0x10], r11
mov qword ptr [rsp+0x8], r8
call 0x7fab2cdac190
push rbp
mov rbp, rdi
push rbx
mov rbx, rsi
sub rsp, 0x8
mov rsi, qword ptr [rsi+0x8]
call 0x7fab2cdb4c20
mov al, byte ptr [rdi]
cmp al, byte ptr [rsi]
jnz 0x7fab2cdb4c33
inc rdi
inc rsi
test al, al
jnz 0x7fab2cdb4c20
xor eax, eax
ret 
mov eax, 0x1
mov ecx, 0xffffffff
cmovb eax, ecx
ret 
test eax, eax
mov edx, 0x1
jz 0x7fab2cdac1dd
mov rbx, qword ptr [rbx+0x38]
test rbx, rbx
jnz 0x7fab2cdac1c9
jmp 0x7fab2cdac1f0
mov rsi, qword ptr [rbx]
mov rdi, rbp
call 0x7fab2cdb4c20
test eax, eax
jnz 0x7fab2cdac1c0
mov edx, 0x1
add rsp, 0x8
mov eax, edx
pop rbx
pop rbp
ret 
mov rbx, qword ptr [rbx+0x8]
test rbx, rbx
jz 0x7fab2cdac1f0
mov rsi, qword ptr [rbx]
mov rdi, rbp
call 0x7fab2cdb4c20
add rsp, 0x8
xor edx, edx
pop rbx
mov eax, edx
pop rbp
ret 
test eax, eax
mov r8, qword ptr [rsp+0x8]
mov r11, qword ptr [rsp+0x10]
mov r9, qword ptr [rsp+0x20]
jnz 0x7fab2cda5750
nop word ptr [rax+rax*1], ax
add rbp, 0x1
cmp r12, rbp
jnbe 0x7fab2cda4f38
xor eax, eax
jmp 0x7fab2cda50d4
mov rax, qword ptr [r13+rbp*8]
mov dword ptr [rsp+0x70], 0x0
mov qword ptr [rsp+0x40], 0x0
mov rdi, qword ptr [rax+0x28]
cmp rdi, r14
mov qword ptr [rsp+0x50], rdi
jz 0x7fab2cda5050
test byte ptr [rsp+0x7c], 0x2
jz 0x7fab2cda4f74
test byte ptr [rdi+0x314], 0x3
jz 0x7fab2cda5050
mov ecx, edx
mov rax, rbx
xor edx, edx
div rcx
mov rax, qword ptr [rdi+0x300]
mov eax, dword ptr [rax+rdx*4]
test eax, eax
jz 0x7fab2cda4ff4
mov rdx, qword ptr [rdi+0x308]
lea rdx, ptr [rdx+rax*4]
jmp 0x7fab2cda5795
mov ecx, dword ptr [rdx]
mov eax, ecx
xor rax, rbx
shr rax, 0x1
jnz 0x7fab2cda5788
mov rax, qword ptr [rsp+0x50]
mov rdi, rdx
mov r10, r9
mov qword ptr [rsp+0x30], r11
mov qword ptr [rsp+0x28], r8
mov qword ptr [rsp+0x8], r9
mov qword ptr [rsp+0x20], rdx
sub rdi, qword ptr [rax+0x308]
mov qword ptr [rsp+0x10], rsi
mov rax, rdi
sar rax, 0x2
mov dword ptr [rsp+0x78], eax
mov eax, eax
lea rax, ptr [rax+rax*2]
lea rdi, ptr [rsi+rax*8]
call 0x7fab2cda4d40
push r13
push r12
push rbp
mov rbp, rdi
push rbx
mov rbx, r10
sub rsp, 0x8
movzx eax, byte ptr [rdi+0x4]
and eax, 0xf
cmp qword ptr [rdi+0x8], 0x0
jz 0x7fab2cda4e75
xor edx, edx
cmp word ptr [rbp+0x6], 0x0
setz dl
test dword ptr [rbx+0x3c], edx
jnz 0x7fab2cda4e50
mov edx, 0x467
bt edx, eax
jnb 0x7fab2cda4e50
cmp rbp, qword ptr [rbx+0x28]
jz 0x7fab2cda4da1
mov edi, dword ptr [rbp]
mov rsi, qword ptr [rbx+0x18]
add rdi, qword ptr [rbx+0x20]
call 0x7fab2cdb4c20
test eax, eax
jnz 0x7fab2cda4e50
mov r12, qword ptr [rbx+0x8]
mov rsi, qword ptr [rbx+0x10]
test r12, r12
mov rax, qword ptr [rsi+0x330]
jz 0x7fab2cda4e10
test rax, rax
jz 0x7fab2cda4e82
mov edx, dword ptr [rbx+0x38]
movzx r13d, word ptr [rax+rdx*2]
mov rax, r13
and eax, 0x7fff
lea rdx, ptr [rax+rax*2]
mov rax, qword ptr [rsi+0x2e0]
lea rax, ptr [rax+rdx*8]
mov ebx, dword ptr [rax+0x8]
cmp ebx, dword ptr [r12+0x8]
jz 0x7fab2cda4e60
mov eax, dword ptr [r12+0xc]
test eax, eax
jnz 0x7fab2cda4e50
test ebx, ebx
jnz 0x7fab2cda4e50
mov rsi, qword ptr [r12]
mov rdi, qword ptr [rax]
call 0x7fab2cdb4c20
test eax, eax
jz 0x7fab2cda4dfa
jmp 0x7fab2cda4de7
add rsp, 0x8
mov rax, rbp
pop rbx
pop rbp
pop r12
pop r13
ret 
test rax, rax
mov r9, qword ptr [rsp+0x8]
mov r8, qword ptr [rsp+0x28]
mov r11, qword ptr [rsp+0x30]
jnz 0x7fab2cda5072
mov rdx, qword ptr [rsp+0x20]
mov rsi, qword ptr [rsp+0x10]
mov ecx, dword ptr [rdx]
jmp 0x7fab2cda5788
movzx edx, byte ptr [rax+0x4]
shr dl, 0x4
cmp dl, 0x2
jz 0x7fab2cda50a8
cmp dl, 0xa
jz 0x7fab2cda50f0
cmp dl, 0x1
jz 0x7fab2cda50b6
mov qword ptr [rsp+0x20], rax
mov rsi, rax
mov rbx, qword ptr [rsp+0x18]
mov rax, qword ptr [rsp+0x50]
mov qword ptr [rbx], rsi
mov qword ptr [rbx+0x8], rax
mov eax, 0x1
add rsp, 0x88
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
cmp eax, 0x0
jnle 0x7fab2cda5978
jnz 0x7fab2cda5f6a
add r14, 0x8
mov r9, qword ptr [r14]
test r9, r9
jnz 0x7fab2cda5916
mov qword ptr [rbp-0xd0], 0x0
nop dword ptr [rax+rax*1], eax
cmp qword ptr [rbp-0x90], 0x0
jz 0x7fab2cda6129
mov rcx, qword ptr [rbx]
test rcx, rcx
jz 0x7fab2cda59a9
movzx eax, byte ptr [rcx+0x5]
and eax, 0x3
cmp al, 0x3
jz 0x7fab2cda5a18
mov r9, qword ptr [rbp-0x88]
xor r14d, r14d
movzx eax, byte ptr [r9+0x314]
and eax, 0x3
cmp al, 0x2
mov rax, r9
jz 0x7fab2cda623d
mov edx, dword ptr [rax+0x3cc]
test edx, edx
jz 0x7fab2cda5f5b
mov edx, dword ptr [rip+0x2182e3]
test edx, 0x804
jnz 0x7fab2cda5ba2
mov rdx, qword ptr [rbp-0x90]
mov qword ptr [rbx], rdx
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov rbp, rax
mov eax, dword ptr fs:[0x18]
test eax, eax
jnz 0x7fab2cdaa5e0
mov eax, dword ptr fs:[0x4c]
test eax, eax
jz 0x7fab2cdaa590
mov dword ptr fs:[0x4c], r12d
mov rsi, qword ptr [rsp+0x18]
test rsi, rsi
jz 0x7fab2cdaa5b0
test rbp, rbp
jz 0x7fab2cdaa5b8
mov rax, qword ptr [rbp]
movzx edx, byte ptr [rsi+0x4]
add rax, qword ptr [rsi+0x8]
and edx, 0xf
cmp dl, 0xa
jz 0x7fab2cdaa62a
mov edx, dword ptr [rip+0x21378c]
test edx, edx
jnz 0x7fab2cdaa583
mov qword ptr [rbx], rax
add rsp, 0x20
pop rbx
pop rbp
pop r12
ret 
mov r11, rax
mov r9, qword ptr [rsp+0x30]
mov r8, qword ptr [rsp+0x28]
mov rdi, qword ptr [rsp+0x20]
mov rsi, qword ptr [rsp+0x18]
mov rdx, qword ptr [rsp+0x10]
mov rcx, qword ptr [rsp+0x8]
mov rax, qword ptr [rsp]
add rsp, 0x48
jmp r11
mov rax, qword ptr [rip+0x211539]
mov qword ptr [rdi], rax
mov rax, qword ptr [rip+0x21153f]
mov qword ptr [rsi], rax
ret 
mov rcx, qword ptr [rsp]
cmp rcx, 0xf
jnbe 0x7fab19720eb8
mov qword ptr [rsp], 0x10
mov qword ptr [rip+0x2166fd], 0xf
mov ecx, 0x10
mov rax, qword ptr [rip+0x2166f9]
xor edx, edx
lea rsi, ptr [rsp+0x10]
mov edi, 0x3
lea rax, ptr [rcx+rax*1-0x1]
div rcx
imul rax, rcx
mov qword ptr [rip+0x2166da], rax
call 0x7fab1971f980
lea rax, ptr [rcx-0x1]
mov qword ptr [rip+0x21654d], rax
jmp 0x7fab19720d18
mov rax, qword ptr [rip+0x2166f9]
xor edx, edx
lea rsi, ptr [rsp+0x10]
mov edi, 0x3
lea rax, ptr [rcx+rax*1-0x1]
div rcx
imul rax, rcx
mov qword ptr [rip+0x2166da], rax
call 0x7fab1971f980
jmp qword ptr [rip+0x2138aa]
push 0x43
jmp 0x7fab1971f540
mov edx, dword ptr [rip+0x218c5e]
test edx, edx
jnz 0x7fab2cda5661
mov qword ptr [rsp+0x20], rax
mov rsi, rax
mov rbx, qword ptr [rsp+0x18]
mov rax, qword ptr [rsp+0x50]
mov qword ptr [rbx], rsi
mov qword ptr [rbx+0x8], rax
mov eax, 0x1
add rsp, 0x88
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
mov eax, 0x61
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab1941bc10
ret 
test eax, eax
jz 0x7fab19720e90
mov eax, 0x200000
mov rdx, qword ptr [rip+0x212259]
mov esi, 0x1
mov rdx, qword ptr [rdx+0x18]
mov rcx, rdx
add rcx, qword ptr [rip+0x2166ae]
add rcx, 0x800
cmp rcx, rax
cmovnb rax, rcx
mov rcx, rdx
lea rax, ptr [rdx+rax*1-0x1]
neg rcx
and rax, rcx
mov qword ptr [rsp+0x10], rax
xor eax, eax
lock cmpxchg dword ptr [rip+0x21658b], esi
jnz 0x7fab19720f0f
mov rax, qword ptr [rsp+0x10]
mov qword ptr [rip+0x2166c9], rdx
mov qword ptr [rip+0x2166d2], rax
lock dec dword ptr [rip+0x21656b]
jnz 0x7fab19720f2e
mov rax, qword ptr [rsp+0x10]
cmp rax, 0xffffffffffffffff
jz 0x7fab19720d4b
cmp rax, 0x3fff
mov edx, 0x4000
cmovbe rax, rdx
jmp 0x7fab19720d50
mov rdx, qword ptr [rip+0x212259]
mov esi, 0x1
mov rdx, qword ptr [rdx+0x18]
mov rcx, rdx
add rcx, qword ptr [rip+0x2166ae]
add rcx, 0x800
cmp rcx, rax
cmovnb rax, rcx
mov rcx, rdx
lea rax, ptr [rdx+rax*1-0x1]
neg rcx
and rax, rcx
mov qword ptr [rsp+0x10], rax
xor eax, eax
lock cmpxchg dword ptr [rip+0x21658b], esi
jnz 0x7fab19720f0f
mov rax, qword ptr [rsp+0x10]
mov qword ptr [rip+0x2166c9], rdx
mov qword ptr [rip+0x2166d2], rax
lock dec dword ptr [rip+0x21656b]
jnz 0x7fab19720f2e
call 0x7fab1971f8c0
jmp qword ptr [rip+0x21390a]
push 0x37
jmp 0x7fab1971f540
add rdx, 0x4
and ecx, 0x1
jnz 0x7fab2cda4ff4
mov ecx, dword ptr [rdx]
mov eax, ecx
xor rax, rbx
shr rax, 0x1
jnz 0x7fab2cda5788
mov rax, qword ptr [rsp+0x50]
mov rdi, rdx
mov r10, r9
mov qword ptr [rsp+0x30], r11
mov qword ptr [rsp+0x28], r8
mov qword ptr [rsp+0x8], r9
mov qword ptr [rsp+0x20], rdx
sub rdi, qword ptr [rax+0x308]
mov qword ptr [rsp+0x10], rsi
mov rax, rdi
sar rax, 0x2
mov dword ptr [rsp+0x78], eax
mov eax, eax
lea rax, ptr [rax+rax*2]
lea rdi, ptr [rsi+rax*8]
call 0x7fab2cda4d40
mov rax, qword ptr [rip+0x287881]
add rax, qword ptr fs:[0x0]
ret 
mov rbx, rax
lea r12, ptr [rbp+0x908]
call qword ptr [rbp+0x990]
lea rax, ptr [rip+0x222cd9]
ret 
mov rax, qword ptr [rax]
mov qword ptr [rbx], rax
mov rax, qword ptr [rip+0x2121e3]
mov ebx, dword ptr [rbp+0x90c]
mov dword ptr [rbp+0x90c], 0x0
mov qword ptr [rbp+0x990], rax
lea rax, ptr [rip+0x3605]
test ebx, ebx
mov qword ptr [rbp+0xf08], rax
lea rax, ptr [rip+0x49a5]
mov qword ptr [rbp+0xf10], rax
jz 0x7fab19720e25
nop dword ptr [rax], eax
mov rdi, r12
call 0x7fab19724400
lea rax, ptr [rip+0x484]
lea rdx, ptr [rip+0x211d6d]
lea rsi, ptr [rip+0x566]
lea rdi, ptr [rip+0x216677]
mov qword ptr [rbp+0xf18], rax
lea rax, ptr [rip+0xdb1]
mov qword ptr [rbp+0xf68], rax
lea rax, ptr [rip+0xec3]
mov qword ptr [rbp+0xf70], rax
call 0x7fab1971f810
jmp qword ptr [rip+0x213962]
push 0x2c
jmp 0x7fab1971f540
push rbx
mov qword ptr [rip+0x2bb948], rdi
mov rbx, rdx
xor ecx, ecx
mov rdx, rsi
xor edi, edi
xor esi, esi
call 0x7fab19433180
push r12
xor eax, eax
mov r12, rcx
push rbp
mov rbp, rdi
push rbx
mov rbx, rsi
mov esi, 0x1
sub rsp, 0x10
cmp dword ptr [rip+0x2bbed5], 0x0
jz 0x7fab194331b1
lock cmpxchg dword ptr [rip+0x2b9cb7], esi
jnz 0x7fab194332f8
jmp 0x7fab194331be
cmpxchg dword ptr [rip+0x2b9ca8], esi
jnz 0x7fab194332f8
lea rax, ptr [rip+0x2b9cbb]
lea r9, ptr [rax+0x30]
xor r8d, r8d
jmp 0x7fab194331e2
mov ecx, dword ptr [r9]
test ecx, ecx
jnz 0x7fab194331d0
lea rcx, ptr [r8+r8*2]
shl rcx, 0x4
lea r8, ptr [rax+rcx*1+0x8]
mov dword ptr [r8+0x28], 0x1
mov dword ptr [r8+0x2c], 0x0
mov qword ptr [r8+0x8], rbp
mov qword ptr [r8+0x10], rbx
mov qword ptr [r8+0x18], rdx
mov qword ptr [r8+0x20], r12
nop word ptr [rax+rax*1], ax
mov rdx, qword ptr [rip+0x2bbc11]
mov qword ptr [r8], rdx
mov rax, rdx
cmp dword ptr fs:[0x18], 0x0
jz 0x7fab19433239
lock cmpxchg qword ptr [rip+0x2bbbf7], r8
cmp rdx, rax
jnz 0x7fab19433220
cmpxchg qword ptr [rip+0x2bbbf7], r8
cmp rdx, rax
jnz 0x7fab19433220
cmp dword ptr [rip+0x2bbe27], 0x0
jz 0x7fab1943325e
lock dec dword ptr [rip+0x2b9c0a]
jnz 0x7fab19433317
dec dword ptr [rip+0x2b9bfc]
jnz 0x7fab19433317
cmp r8, 0x1
sbb eax, eax
add rsp, 0x10
pop rbx
pop rbp
and eax, 0xc
pop r12
ret 
lea rdx, ptr [rip+0x2bb9c0]
xor eax, eax
nop word ptr [rax+rax*1], ax
mov rcx, qword ptr [rbx+rax*8]
xor rcx, qword ptr fs:[0x30]
rol rcx, 0x11
mov qword ptr [rdx+rax*8], rcx
add rax, 0x1
cmp rax, 0x36
jnz 0x7fab19433508
lea rax, ptr [rip+0x2bbb46]
mov dword ptr [rip+0x2bbb38], 0x1
pop rbx
ret 
mov rcx, qword ptr [rbx+rax*8]
xor rcx, qword ptr fs:[0x30]
rol rcx, 0x11
mov qword ptr [rdx+rax*8], rcx
add rax, 0x1
cmp rax, 0x36
jnz 0x7fab19433508
lea rax, ptr [rip+0x2bbb46]
mov dword ptr [rip+0x2bbb38], 0x1
pop rbx
ret 
mov dword ptr [rip+0x2165d1], 0x1
mov qword ptr [rip+0x216626], rax
add rsp, 0xc0
pop rbx
pop rbp
pop r12
ret 
add rsp, 0x8
ret 
mov rdx, qword ptr [rbx+0x108]
test rdx, rdx
jz 0x7fab2cdab113
mov rax, qword ptr [rbx+0x118]
mov rbx, qword ptr [rbx]
add rbx, qword ptr [rdx+0x8]
mov rax, qword ptr [rax+0x8]
shr rax, 0x3
test eax, eax
jz 0x7fab2cdab113
sub eax, 0x1
lea r14, ptr [rbx+rax*8+0x8]
nop dword ptr [rax+rax*1], eax
mov rdx, r13
mov rsi, r12
mov edi, ebp
call qword ptr [rbx]
cmp qword ptr [rip+0x212200], 0x0
jz 0x7fab197209c0
mov rax, qword ptr [rip+0x212627]
test rax, rax
jz 0x7fab197209c0
push rbp
lea rdi, ptr [rip+0x2121ea]
mov rbp, rsp
call rax
jmp 0x7fab19720910
lea rax, ptr [rip+0x2129d9]
lea rdi, ptr [rip+0x2129d2]
push rbp
sub rax, rdi
mov rbp, rsp
sar rax, 0x3
mov rdx, rax
shr rdx, 0x3f
add rax, rdx
sar rax, 0x1
jnz 0x7fab1972093a
pop rbp
ret 
add rbx, 0x8
cmp rbx, r14
jnz 0x7fab2cdab100
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret 
mov rdx, r13
mov rsi, r12
mov edi, ebp
call qword ptr [rbx]
sub rsp, 0x8
call 0x7fab1972bbd0
mov eax, dword ptr [rip+0x20b90a]
test eax, eax
jz 0x7fab1972bbe8
lea rax, ptr [rip+0x20b8ff]
ret 
xor eax, eax
push rbx
cpuid 
cmp ebx, 0x756e6547
mov dword ptr [rip+0x20b8eb], eax
jnz 0x7fab1972bcc0
cmp ecx, 0x6c65746e
jnz 0x7fab1972bcc0
cmp edx, 0x49656e69
jnz 0x7fab1972bcc0
mov eax, 0x1
cpuid 
mov esi, eax
mov dword ptr [rip+0x20b8ce], edx
mov r8d, eax
shr esi, 0x8
mov edx, eax
shr r8d, 0x4
shr edx, 0xc
and esi, 0xf
mov r10d, eax
and r8d, 0xf
and r10d, 0xf
and edx, 0xf0
cmp esi, 0xf
mov r9d, ecx
mov dword ptr [rip+0x20b893], eax
mov dword ptr [rip+0x20b891], ebx
mov dword ptr [rip+0x20b88f], ecx
jz 0x7fab1972be70
cmp esi, 0x6
mov edi, 0x1
jnz 0x7fab1972bcd9
add r8d, edx
lea ecx, ptr [r8-0x1a]
cmp ecx, 0x1d
jnbe 0x7fab1972be9b
and r9d, 0x10000000
mov edi, 0x1
jz 0x7fab1972bcd9
or dword ptr [rip+0x20b66c], 0x33
mov edi, 0x1
jmp 0x7fab1972bcd9
cmp dword ptr [rip+0x20b804], 0x6
jle 0x7fab1972bd03
mov eax, 0x7
xor ecx, ecx
cpuid 
mov dword ptr [rip+0x20b807], eax
mov dword ptr [rip+0x20b805], ebx
mov dword ptr [rip+0x20b803], ecx
mov dword ptr [rip+0x20b801], edx
mov r9d, dword ptr [rip+0x20b7e6]
test r9d, 0x8000000
jz 0x7fab1972bd50
xor ecx, ecx
xgetbv 
and eax, 0x6
cmp eax, 0x6
jnz 0x7fab1972bd50
test r9d, 0x10000000
jz 0x7fab1972bd30
or dword ptr [rip+0x20b7f0], 0x40
and r9d, 0x1000
jz 0x7fab1972bd43
or dword ptr [rip+0x20b7dd], 0x80
test byte ptr [rip+0x20b7c8], 0x1
jnz 0x7fab1972be50
cmp edi, 0x1
jz 0x7fab1972be08
test byte ptr [rip+0x20b7c8], 0x1
jnz 0x7fab1972be50
cmp edi, 0x1
jz 0x7fab1972be08
mov dword ptr [rip+0x20b7b9], esi
mov dword ptr [rip+0x20b7b6], r8d
lea rax, ptr [rip+0x20b773]
mov dword ptr [rip+0x20b76d], edi
pop rbx
ret 
cmp esi, 0x6
jnz 0x7fab1972bd59
cmp r8d, 0x3f
jz 0x7fab1972be60
cmp r8d, 0x3c
jz 0x7fab1972be90
cmp r8d, 0x45
jz 0x7fab1972be2d
cmp r8d, 0x46
jnz 0x7fab1972bd59
cmp r10d, 0x1
jnbe 0x7fab1972bd59
mov dword ptr [rip+0x20b7b9], esi
mov dword ptr [rip+0x20b7b6], r8d
lea rax, ptr [rip+0x20b773]
mov dword ptr [rip+0x20b76d], edi
pop rbx
ret 
mov eax, dword ptr [rax+0x1c]
shr eax, 0xb
and eax, 0x1
mov dword ptr [rip+0x20b640], eax
add rsp, 0x8
ret 
mov qword ptr [rip+0x2137a0], 0x0
jmp 0x7fab2cdab1b3
test rbx, rbx
jnz 0x7fab2cdab222
mov eax, dword ptr [r14+0x2c0]
lea ebx, ptr [rax-0x1]
jmp 0x7fab2cdab1cb
cmp ebx, 0xffffffff
jz 0x7fab2cdab1f8
mov rax, qword ptr [r14+0x3b8]
mov edx, ebx
mov rdi, qword ptr [rax+rdx*8]
test byte ptr [rdi+0x314], 0x8
jnz 0x7fab2cdab1c8
mov rcx, r13
mov rdx, r12
mov esi, ebp
call 0x7fab2cdab070
push r14
push r13
mov r13, rcx
push r12
mov r12, rdx
push rbp
mov ebp, esi
push rbx
movzx eax, byte ptr [rdi+0x314]
mov rbx, rdi
mov rcx, qword ptr [rdi+0x8]
or eax, 0x8
mov byte ptr [rdi+0x314], al
movzx edx, byte ptr [rcx]
test dl, dl
jz 0x7fab2cdab16c
mov rax, qword ptr [rbx+0xa0]
test rax, rax
jz 0x7fab2cdab120
test byte ptr [rip+0x212c0b], 0x2
jnz 0x7fab2cdab133
cmp qword ptr [rbx+0x108], 0x0
jnz 0x7fab2cdab0ae
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret 
jmp 0x7fab2cdab1c8
sub ebx, 0x1
cmp ebx, 0xffffffff
jz 0x7fab2cdab1f8
mov rax, qword ptr [r14+0x3b8]
mov edx, ebx
mov rdi, qword ptr [rax+rdx*8]
test byte ptr [rdi+0x314], 0x8
jnz 0x7fab2cdab1c8
mov rcx, r13
mov rdx, r12
mov esi, ebp
call 0x7fab2cdab070
test rax, rax
jz 0x7fab2cdab0cd
mov rax, qword ptr [rax+0x8]
add rax, qword ptr [rbx]
mov rdx, r13
mov rsi, r12
mov edi, ebp
call rax
push r13
push r12
mov r12d, edi
push rbp
mov rbp, rsi
push rbx
mov rbx, rdx
sub rsp, 0x28
mov rax, qword ptr [rip+0x39c27e]
test rax, rax
jz 0x7fab1934cdd8
mov eax, dword ptr [rax]
test eax, eax
jnz 0x7fab1934cdd8
mov dword ptr [rip+0x39c3a9], 0x1
mov rax, qword ptr [rip+0x39c1ca]
lea rdx, ptr [rip+0x15a448]
mov dword ptr [rip+0x3a1efc], r12d
mov qword ptr [rip+0x3a1eed], rbp
mov dword ptr [rsp+0xc], 0x1
mov ecx, 0x5f
mov dword ptr [rsp+0x8], 0x3ae75f6
mov qword ptr [rax], rbx
lea rax, ptr [rip+0x15a416]
mov qword ptr [rsp], rax
mov eax, 0x50e3a8
shl rax, 0x4
add rdx, 0x1
add rcx, rax
mov rax, rcx
and eax, 0xf0000000
shr rax, 0x18
xor rax, rcx
movzx ecx, byte ptr [rdx]
test cl, cl
jnz 0x7fab1934cd1b
mov rax, qword ptr [rip+0x39c1c9]
mov dword ptr [rip+0x39c297], 0x0
movzx edi, word ptr [rax]
mov rax, qword ptr [rip+0x39c06d]
cmp word ptr [rax+0x50], di
jz 0x7fab1934ccd7
call 0x7fab193619d0
mov rax, qword ptr [rip+0x39c1ca]
lea rdx, ptr [rip+0x15a448]
mov dword ptr [rip+0x3a1efc], r12d
mov qword ptr [rip+0x3a1eed], rbp
mov dword ptr [rsp+0xc], 0x1
mov ecx, 0x5f
mov dword ptr [rsp+0x8], 0x3ae75f6
mov qword ptr [rax], rbx
lea rax, ptr [rip+0x15a416]
mov qword ptr [rsp], rax
mov eax, 0x50e3a8
shl rax, 0x4
add rdx, 0x1
add rcx, rax
mov rax, rcx
and eax, 0xf0000000
shr rax, 0x18
xor rax, rcx
movzx ecx, byte ptr [rdx]
test cl, cl
jnz 0x7fab1934cd1b
and eax, 0xfffffff
cmp eax, 0x3ae75f6
jnz 0x7fab1934ce1c
lea rdi, ptr [rip+0x15a3df]
mov rsi, rsp
mov qword ptr [rsp+0x10], 0x0
mov r13, rsp
call 0x7fab19461520
shl rax, 0x4
add rdx, 0x1
add rcx, rax
mov rax, rcx
and eax, 0xf0000000
shr rax, 0x18
xor rax, rcx
movzx ecx, byte ptr [rdx]
test cl, cl
jnz 0x7fab1934cd1b
and eax, 0xfffffff
cmp eax, 0x3ae75f6
jnz 0x7fab1934ce1c
lea rdi, ptr [rip+0x15a3df]
mov rsi, rsp
mov qword ptr [rsp+0x10], 0x0
mov r13, rsp
call 0x7fab19461520
mov rax, qword ptr [rip+0x287939]
mov r8, rsi
mov rsi, qword ptr [rax+0xc0]
test rsi, rsi
jz 0x7fab194615c8
sub rsp, 0x48
xor r9d, r9d
lea rcx, ptr [rsi+0x388]
lea rdx, ptr [rsp+0x20]
mov qword ptr [rsp+0x20], 0x0
mov qword ptr [rsp+0x28], 0x0
mov qword ptr [rsp+0x30], 0x0
mov byte ptr [rsp+0x24], 0x20
mov qword ptr [rsp+0x18], rdx
mov qword ptr [rsp+0x8], 0x0
lea rdx, ptr [rsp+0x18]
mov dword ptr [rsp], 0x0
call qword ptr [rax+0xf0]
push rbp
mov rbp, rsp
push r15
mov r15, rsi
push r14
push r13
mov r13d, r9d
push r12
mov r12, r8
push rbx
mov rbx, rdx
sub rsp, 0xf8
movzx eax, byte ptr [rdi]
mov qword ptr [rbp-0xa8], rdi
mov qword ptr [rbp-0xc8], rcx
test al, al
jz 0x7fab2cda5a02
mov rdx, rdi
mov r14d, 0x1505
nop word ptr [rax+rax*1], ax
mov rcx, r14
add rdx, 0x1
shl rcx, 0x5
add r14, rcx
add r14, rax
movzx eax, byte ptr [rdx]
test al, al
jnz 0x7fab2cda5878
mov eax, r14d
mov qword ptr [rbp-0xb0], rax
mov eax, 0xffffffff
add qword ptr [rip+0x219131], 0x1
test r12, r12
mov qword ptr [rbp-0xa0], rax
mov qword ptr [rbp-0x90], 0x0
mov qword ptr [rbp-0x88], 0x0
jz 0x7fab2cda58d6
mov rax, qword ptr [r11]
mov ecx, 0xffffffff
cmp rax, rcx
jz 0x7fab2cda5681
mov ecx, edx
xor edx, edx
div rcx
lea rax, ptr [rdx*4]
mov rdx, qword ptr [rdi+0x308]
mov eax, dword ptr [rdx+rax*1]
test eax, eax
mov dword ptr [rsp+0x78], eax
jnz 0x7fab2cda5624
jmp 0x7fab2cda4ffc
mov r10, qword ptr [rsp+0x58]
xor eax, eax
movzx ecx, byte ptr [r10]
test rcx, rcx
jz 0x7fab2cda5720
movzx eax, byte ptr [r10+0x1]
test al, al
jz 0x7fab2cda570d
shl rcx, 0x4
add rcx, rax
movzx eax, byte ptr [r10+0x2]
test al, al
jz 0x7fab2cda570d
shl rcx, 0x4
add rcx, rax
movzx eax, byte ptr [r10+0x3]
test al, al
jz 0x7fab2cda570d
shl rcx, 0x4
add rcx, rax
movzx eax, byte ptr [r10+0x4]
test al, al
jz 0x7fab2cda570d
shl rcx, 0x4
add rcx, rax
lea rax, ptr [r10+0x5]
movzx r10d, byte ptr [r10+0x5]
test r10b, r10b
jz 0x7fab2cda5707
shl rcx, 0x4
add rax, 0x1
add r10, rcx
mov rcx, r10
and ecx, 0xf0000000
shr rcx, 0x18
xor rcx, r10
movzx r10d, byte ptr [rax]
test r10b, r10b
jnz 0x7fab2cda56e3
and ecx, 0xfffffff
mov r10d, edx
mov rax, rcx
xor edx, edx
div r10
lea rax, ptr [rdx*4]
mov qword ptr [r11], rcx
jmp 0x7fab2cda55e4
mov rdx, qword ptr [rdi+0x308]
mov eax, dword ptr [rdx+rax*1]
test eax, eax
mov dword ptr [rsp+0x78], eax
jnz 0x7fab2cda5624
jmp 0x7fab2cda4ffc
lea rax, ptr [rax+rax*2]
mov r10, r9
mov qword ptr [rsp+0x28], r11
mov qword ptr [rsp+0x20], r8
mov qword ptr [rsp+0x8], r9
lea rdi, ptr [rsi+rax*8]
mov qword ptr [rsp+0x10], rsi
call 0x7fab2cda4d40
test rax, rax
mov r9, qword ptr [rsp+0x8]
mov r8, qword ptr [rsp+0x20]
mov r11, qword ptr [rsp+0x28]
jz 0x7fab2cda5600
jmp 0x7fab2cda5072
mov rdx, qword ptr [rsp+0x18]
test rdx, rdx
jz 0x7fab194615b0
test rax, rax
jz 0x7fab194615c0
mov rax, qword ptr [rax]
add rax, qword ptr [rdx+0x8]
add rsp, 0x48
ret 
test rax, rax
jz 0x7fab1934ce10
lea rdi, ptr [rip+0x15a3d0]
mov rsi, r13
xor rax, qword ptr fs:[0x30]
rol rax, 0x11
mov qword ptr [rip+0x39dcb2], rax
call 0x7fab19461520
test eax, eax
jnz 0x7fab2cda4e50
mov r12, qword ptr [rbx+0x8]
mov rsi, qword ptr [rbx+0x10]
test r12, r12
mov rax, qword ptr [rsi+0x330]
jz 0x7fab2cda4e10
test rax, rax
jz 0x7fab2cda4e82
xor eax, eax
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
ret 
test rax, rax
mov r9, qword ptr [rsp+0x8]
mov r8, qword ptr [rsp+0x20]
mov r11, qword ptr [rsp+0x28]
jz 0x7fab2cda5600
jmp 0x7fab2cda5072
mov rax, qword ptr [rsp+0x50]
mov edx, dword ptr [rsp+0x78]
mov rsi, qword ptr [rsp+0x10]
mov rax, qword ptr [rax+0x300]
mov eax, dword ptr [rax+rdx*4]
test eax, eax
mov dword ptr [rsp+0x78], eax
jz 0x7fab2cda4ffc
lea rax, ptr [rax+rax*2]
mov r10, r9
mov qword ptr [rsp+0x28], r11
mov qword ptr [rsp+0x20], r8
mov qword ptr [rsp+0x8], r9
lea rdi, ptr [rsi+rax*8]
mov qword ptr [rsp+0x10], rsi
call 0x7fab2cda4d40
mov rdx, rbx
test rax, rax
mov rsi, rbp
mov edi, r12d
mov rcx, 0xffffffffff600800
cmovnz rcx, rax
xor rcx, qword ptr fs:[0x30]
rol rcx, 0x11
mov qword ptr [rip+0x3a1e1a], rcx
call 0x7fab19425200
push rbp
push rbx
mov rbx, rsi
sub rsp, 0x8
test rsi, rsi
jz 0x7fab19425245
mov rbp, qword ptr [rsi]
test rbp, rbp
jz 0x7fab19425245
mov esi, 0x2f
mov rdi, rbp
call 0x7fab193b56b0
movd xmm1, esi
mov rax, rdi
and eax, 0xfff
punpcklbw xmm1, xmm1
cmp rax, 0xfc0
punpcklwd xmm1, xmm1
pshufd xmm1, xmm1, 0x0
jnbe 0x7fab193b58d0
movdqu xmm0, xmmword ptr [rdi]
pxor xmm2, xmm2
movdqa xmm3, xmm0
pcmpeqb xmm0, xmm1
pcmpeqb xmm3, xmm2
pmovmskb ecx, xmm0
pmovmskb edx, xmm3
test rdx, rdx
jz 0x7fab193b5710
lea rax, ptr [rdx-0x1]
xor rax, rdx
and rax, rcx
jz 0x7fab193b58c0
bsr rax, rax
add rax, rdi
ret 
lea rdx, ptr [rax+0x1]
test rax, rax
mov rax, qword ptr [rip+0x2c3bbf]
cmovz rdx, rbp
mov qword ptr [rax], rdx
mov rax, qword ptr [rip+0x2c3b91]
mov rdx, qword ptr [rbx]
mov qword ptr [rax], rdx
add rsp, 0x8
pop rbx
pop rbp
ret 
call 0x7fab1935b170
mov rax, qword ptr [rip+0x38dc49]
mov rdx, qword ptr [rip+0x38dc82]
mov rax, qword ptr fs:[rax]
mov rax, qword ptr [rax]
mov rsi, qword ptr [rax+0x40]
mov rdi, qword ptr [rax+0x48]
lea rcx, ptr [rsi+0x100]
mov qword ptr fs:[rdx], rcx
mov rdx, qword ptr [rip+0x38dd39]
lea rcx, ptr [rdi+0x200]
mov qword ptr fs:[rdx], rcx
mov rdx, qword ptr [rax+0x58]
mov rax, qword ptr [rip+0x38dd6b]
add rdx, 0x200
mov qword ptr fs:[rax], rdx
ret 
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
ret 
push r12
mov eax, dword ptr [rip+0x3a21f8]
push rbp
test eax, eax
push rbx
jz 0x7fab1934ca21
cmp eax, 0x1
jz 0x7fab1934ca2e
cmp eax, 0x2
jz 0x7fab1934cb31
mov esi, dword ptr [rip+0x3a21d0]
mov edi, 0xbc
call 0x7fab193cc910
cmp esi, 0x1
jbe 0x7fab193cca10
push r15
push r14
mov r14d, 0x1
push r13
push r12
push rbp
mov ebp, edi
push rbx
sub rsp, 0x38
mov byte ptr [rsp+0x10], 0x0
mov byte ptr [rsp+0x20], 0x0
lea r13, ptr [rsp+0x10]
mov dword ptr [rsp+0xc], 0x1
lea r12, ptr [rsp+0x20]
jmp 0x7fab193cc9b5
mov eax, 0x2
cpuid 
cmp r14d, 0x1
mov dword ptr [rsp+0x8], edx
mov r15d, ecx
jnz 0x7fab193cc950
movzx edi, al
xor al, al
mov dword ptr [rsp+0xc], edi
jmp 0x7fab193cc950
mov rcx, r13
mov rdx, r12
mov esi, eax
mov edi, ebp
call 0x7fab193cc5c0
test esi, esi
js 0x7fab193cc74f
lea r8d, ptr [rdi-0xb9]
push r12
mov r12, rdx
mov edx, 0x55555556
mov eax, r8d
push rbp
sar r8d, 0x1f
imul edx
push rbx
sub edx, r8d
test esi, esi
lea ebp, ptr [rdx+rdx*2]
jz 0x7fab193cc6aa
lea r11, ptr [rip+0xd7387]
nop dword ptr [rax], eax
movzx r10d, sil
cmp r10d, 0x40
jz 0x7fab193cc6c8
cmp r10d, 0xff
jz 0x7fab193cc6ef
cmp r10d, 0x49
jnz 0x7fab193cc650
cmp ebp, 0x9
jnz 0x7fab193cc650
xor r8d, r8d
mov ebx, 0x44
nop dword ptr [rax+rax*1], eax
lea rax, ptr [rbx+r8*1]
shr rax, 0x1
lea r9, ptr [r11+rax*8]
cmp r10b, byte ptr [r9]
jz 0x7fab193cc689
jnb 0x7fab193cc6b8
cmp r8, rax
mov rbx, rax
jnb 0x7fab193cc69f
add rax, r8
shr rax, 0x1
lea r9, ptr [r11+rax*8]
cmp r10b, byte ptr [r9]
jnz 0x7fab193cc670
movzx eax, byte ptr [r9+0x3]
movzx r8d, al
cmp r8d, ebp
jz 0x7fab193cc752
cmp al, 0x6
jz 0x7fab193cc6e8
jnb 0x7fab193cc6b8
cmp r8, rax
mov rbx, rax
jnb 0x7fab193cc69f
add rax, r8
shr rax, 0x1
lea r9, ptr [r11+rax*8]
cmp r10b, byte ptr [r9]
jnz 0x7fab193cc670
shr esi, 0x8
test esi, esi
jnz 0x7fab193cc600
xor eax, eax
pop rbx
pop rbp
pop r12
ret 
movzx r10d, sil
cmp r10d, 0x40
jz 0x7fab193cc6c8
cmp r10d, 0xff
jz 0x7fab193cc6ef
cmp r10d, 0x49
jnz 0x7fab193cc650
lea r8, ptr [rax+0x1]
cmp rbx, r8
jnbe 0x7fab193cc660
jmp 0x7fab193cc69f
lea rax, ptr [rbx+r8*1]
shr rax, 0x1
lea r9, ptr [r11+rax*8]
cmp r10b, byte ptr [r9]
jz 0x7fab193cc689
jnb 0x7fab193cc6b8
cmp r8, rax
mov rbx, rax
jnb 0x7fab193cc69f
test rax, rax
jnz 0x7fab193cc9f8
mov rcx, r13
mov rdx, r12
mov esi, ebx
mov edi, ebp
call 0x7fab193cc5c0
mov eax, 0x4
xor ecx, ecx
xchg r9d, ebx
cpuid 
xchg r9d, ebx
mov edx, eax
and edx, 0x1f
jz 0x7fab193cc6aa
xor esi, esi
test ebp, ebp
mov r8d, 0x4
jz 0x7fab193cc84a
cmp ebp, 0x3
jz 0x7fab193cc819
shr eax, 0x5
and eax, 0x7
cmp eax, 0x1
jnz 0x7fab193cc7fe
jmp 0x7fab193cc7f9
cmp edx, 0x1
jz 0x7fab193cc7a4
add esi, 0x1
mov eax, r8d
mov ecx, esi
xchg r9d, ebx
cpuid 
lea eax, ptr [rdi-0xb9]
sub eax, ebp
jz 0x7fab193cc880
cmp eax, 0x1
jz 0x7fab193cc8c0
cmp eax, 0x2
jnz 0x7fab193cc8ed
mov eax, r9d
mov edx, r9d
add ecx, 0x1
shr eax, 0x16
and edx, 0xfff
shr r9d, 0xc
add eax, 0x1
add edx, 0x1
and r9d, 0x3ff
imul eax, edx
add r9d, 0x1
imul eax, ecx
imul eax, r9d
jmp 0x7fab193cc6ac
pop rbx
pop rbp
pop r12
ret 
test rax, rax
jnz 0x7fab193cc9f8
mov rcx, r13
mov rdx, r12
mov esi, r15d
mov edi, ebp
call 0x7fab193cc5c0
add rsp, 0x38
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
mov esi, dword ptr [rip+0x3a21c0]
mov edi, 0xc2
mov r12, rax
call 0x7fab193cc910
cmp ebp, 0x6
jz 0x7fab193cc86f
cmp ebp, 0xc
jz 0x7fab193cc7ec
cmp ebp, 0x9
jz 0x7fab193cc799
shr eax, 0x5
and eax, 0x7
cmp eax, 0x3
jnz 0x7fab193cc781
lea eax, ptr [rdi-0xb9]
sub eax, ebp
jz 0x7fab193cc880
cmp eax, 0x1
jz 0x7fab193cc8c0
add esi, 0x1
mov eax, r8d
mov ecx, esi
xchg r9d, ebx
cpuid 
xchg r9d, ebx
test al, 0x1f
jz 0x7fab193cc6aa
shr eax, 0x5
and eax, 0x7
cmp eax, 0x3
jnz 0x7fab193cc781
lea eax, ptr [rdi-0xb9]
sub eax, ebp
jz 0x7fab193cc880
test rax, rax
mov rbp, rax
mov r8d, 0x3
jle 0x7fab1934cc2c
mov r10d, dword ptr [rip+0x3a219a]
mov r11d, dword ptr [rip+0x3a219b]
cmp r10d, 0x3
jle 0x7fab1934caa7
xor ecx, ecx
mov r9d, 0x4
jmp 0x7fab1934ca9b
lea edi, ptr [rcx+0x1]
mov eax, r9d
cpuid 
test al, 0x1f
jnz 0x7fab1934ca88
shr r11d, 0x10
movzx r11d, r11b
test r11d, r11d
jz 0x7fab1934cab9
test rbp, rbp
jnle 0x7fab1934cb24
mov edx, eax
shr edx, 0x5
and edx, 0x7
cmp edx, r8d
jz 0x7fab1934cbe5
mov ecx, edi
lea edi, ptr [rcx+0x1]
mov eax, r9d
cpuid 
shr eax, 0xe
mov esi, eax
and esi, 0x3ff
jz 0x7fab1934cc23
cmp r10d, 0xa
jle 0x7fab1934cc23
xor ecx, ecx
mov r8d, 0xb
jmp 0x7fab1934cc10
lea edi, ptr [rcx+0x1]
mov eax, r8d
cpuid 
and ecx, 0xff0
movzx ebx, bl
jnz 0x7fab1934cc02
lea r11d, ptr [rsi+0x1]
jmp 0x7fab1934caaf
test ebx, ebx
jz 0x7fab1934cc23
cmp ecx, 0x200
jz 0x7fab1934cc4a
mov ecx, edi
lea edi, ptr [rcx+0x1]
mov eax, r8d
cpuid 
bsr ecx, esi
or esi, 0xffffffff
add ecx, 0x1
sub ebx, 0x1
shl esi, cl
not esi
and esi, ebx
jmp 0x7fab1934cc23
lea r11d, ptr [rsi+0x1]
jmp 0x7fab1934caaf
test r11d, r11d
jz 0x7fab1934cab9
test rbp, rbp
jnle 0x7fab1934cb24
test r12, r12
jle 0x7fab1934caea
mov rax, rbp
cqo 
idiv r11
mov rbp, rax
jmp 0x7fab1934cab9
test r12, r12
jle 0x7fab1934caea
mov rax, r12
mov qword ptr [rip+0x39c778], r12
and r12b, 0x0
sar rax, 0x1
mov qword ptr [rip+0x39c78a], r12
mov qword ptr [rip+0x39c773], rax
mov rax, r12
sar rax, 0x1
mov qword ptr [rip+0x39c786], rax
test rbp, rbp
jle 0x7fab1934ca1c
mov rax, rbp
mov qword ptr [rip+0x39c703], rbp
and bpl, 0x0
sar rax, 0x1
mov qword ptr [rip+0x39c715], rbp
pop rbx
mov qword ptr [rip+0x39c6fd], rax
mov rax, rbp
sar rax, 0x1
pop rbp
mov qword ptr [rip+0x39c70f], rax
pop r12
ret 
mov rcx, qword ptr [rip+0x39c181]
cmp qword ptr [rcx+0x968], 0x0
jnz 0x7fab1934cc83
rdtsc 
shl rdx, 0x20
mov eax, eax
or rdx, rax
mov qword ptr [rcx+0x968], rdx
ret 
ret 
jmp 0x7fab2cdab1c8
test al, 0x3
jnz 0x7fab2cdab0a2
jmp 0x7fab2cdab113
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret 
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
lea rdx, ptr [rip+0xf21f]
mov rsp, r13
jmp r12
xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, 0x400850
mov rcx, 0x4007e0
mov rdi, 0x40076d
call 0x400630
jmp qword ptr [rip+0x2009f2]
push 0x2
jmp 0x400600
push qword ptr [rip+0x200a02]
jmp qword ptr [rip+0x200a04]
push r14
push r13
push r12
push rbp
mov rbp, rcx
push rbx
sub rsp, 0x90
mov rax, qword ptr [rip+0x39c0cf]
mov qword ptr [rsp+0x18], rdi
mov dword ptr [rsp+0x14], esi
mov qword ptr [rsp+0x8], rdx
test rax, rax
jz 0x7fab1934cf4c
mov eax, dword ptr [rax]
xor edx, edx
test eax, eax
setz dl
lea rax, ptr [rip+0x39c1f0]
test r9, r9
mov dword ptr [rax], edx
jz 0x7fab1934cea3
xor edx, edx
xor esi, esi
mov rdi, r9
call 0x7fab19367410
xor edx, edx
jmp 0x7fab1934ce89
lea rax, ptr [rip+0x39c1f0]
test r9, r9
mov dword ptr [rax], edx
jz 0x7fab1934cea3
xor edx, edx
xor esi, esi
mov rdi, r9
call 0x7fab19367410
push r12
mov r12, rsi
push rbp
mov rbp, rdx
push rbx
mov rbx, rdi
lea rdi, ptr [rip+0x3822a4]
call 0x7fab19367250
push rbp
mov esi, 0x1
xor eax, eax
push rbx
mov rbx, rdi
sub rsp, 0x8
cmp dword ptr [rip+0x387e0d], 0x0
jz 0x7fab19367279
lock cmpxchg dword ptr [rip+0x38401f], esi
jnz 0x7fab1936745f
jmp 0x7fab19367286
cmpxchg dword ptr [rip+0x384010], esi
jnz 0x7fab1936745f
mov rbp, qword ptr [rbx]
test rbp, rbp
jz 0x7fab1936738e
mov r8, rbp
xor eax, eax
nop word ptr [rax+rax*1], ax
mov rcx, qword ptr [r8+0x8]
test rcx, rcx
jz 0x7fab193672e7
mov rdx, qword ptr [r8]
mov qword ptr [r8+0x8], 0x0
mov rax, r8
test rdx, rdx
jz 0x7fab19367364
mov r8, rdx
jmp 0x7fab193672a0
lea rsi, ptr [rax+0x10]
mov qword ptr [rax+0x8], 0x1
jmp 0x7fab19367322
mov qword ptr [rsi], 0x1
add qword ptr [rip+0x387a4f], 0x1
cmp dword ptr [rip+0x387d3c], 0x0
jz 0x7fab19367349
lock dec dword ptr [rip+0x383f4f]
jnz 0x7fab1936747e
jmp 0x7fab19367355
dec dword ptr [rip+0x383f41]
jnz 0x7fab1936747e
add rsp, 0x8
mov rax, rsi
pop rbx
pop rbp
ret 
test rax, rax
jz 0x7fab19367458
mov rdi, rbx
mov qword ptr [rax+0x10], r12
mov qword ptr [rax+0x18], rbp
xor rdi, qword ptr fs:[0x30]
rol rdi, 0x11
mov qword ptr [rax+0x8], rdi
mov qword ptr [rax], 0x4
xor eax, eax
pop rbx
pop rbp
pop r12
ret 
mov rdx, qword ptr [rip+0x39bfb6]
mov eax, dword ptr [rdx]
and eax, 0x2
movsxd rbx, eax
test rbx, rbx
jnz 0x7fab1934cff3
test rbp, rbp
jz 0x7fab1934ced5
mov rax, qword ptr [rip+0x39bfe1]
mov rsi, qword ptr [rsp+0x8]
mov edi, dword ptr [rsp+0x14]
mov rdx, qword ptr [rax]
call rbp
push r15
mov r15d, edi
push r14
mov r14, rsi
push r13
mov r13, rdx
push r12
lea r12, ptr [rip+0x200608]
push rbp
lea rbp, ptr [rip+0x200608]
push rbx
sub rbp, r12
xor ebx, ebx
sar rbp, 0x3
sub rsp, 0x8
call 0x4005d8
sub rsp, 0x8
mov rax, qword ptr [rip+0x200a15]
test rax, rax
jz 0x4005ed
call 0x400640
add rsp, 0x8
ret 
test rbp, rbp
jz 0x400836
nop dword ptr [rax+rax*1], eax
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword ptr [r12+rbx*8]
cmp qword ptr [rip+0x2006c8], 0x0
jz 0x400768
mov eax, 0x0
test rax, rax
jz 0x400768
push rbp
mov edi, 0x600e10
mov rbp, rsp
call rax
jmp 0x4006e0
mov eax, 0x601060
push rbp
sub rax, 0x601060
sar rax, 0x3
mov rbp, rsp
mov rdx, rax
shr rdx, 0x3f
add rax, rdx
sar rax, 0x1
jnz 0x400704
pop rbp
ret 
add rbx, 0x1
cmp rbx, rbp
jnz 0x400820
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
mov rax, qword ptr [rip+0x39bf84]
mov ebp, dword ptr [rax+0x128]
test ebp, ebp
jnz 0x7fab1934cfb3
test rbx, rbx
jnz 0x7fab1934cf90
lea rdi, ptr [rsp+0x20]
call 0x7fab19361a90
xor esi, esi
jmp 0x7fab193619f0
mov qword ptr [rdi], rbx
mov rax, rbp
xor rax, qword ptr fs:[0x30]
rol rax, 0x11
mov qword ptr [rdi+0x8], rax
mov qword ptr [rdi+0x10], r12
mov qword ptr [rdi+0x18], r13
mov qword ptr [rdi+0x20], r14
mov qword ptr [rdi+0x28], r15
lea rdx, ptr [rsp+0x8]
xor rdx, qword ptr fs:[0x30]
rol rdx, 0x11
mov qword ptr [rdi+0x30], rdx
mov rax, qword ptr [rsp]
xor rax, qword ptr fs:[0x30]
rol rax, 0x11
mov qword ptr [rdi+0x38], rax
jmp 0x7fab19361a50
xor eax, eax
test esi, esi
push rbx
mov rbx, rdi
jz 0x7fab19361a6f
lea rdx, ptr [rdi+0x48]
xor esi, esi
xor edi, edi
call 0x7fab19361ed0
mov dword ptr [rbx+0x40], eax
xor eax, eax
pop rbx
ret 
test eax, eax
jnz 0x7fab1934cf53
mov rax, qword ptr fs:[0x300]
mov qword ptr [rsp+0x68], rax
mov rax, qword ptr fs:[0x2f8]
mov qword ptr [rsp+0x70], rax
lea rax, ptr [rsp+0x20]
mov qword ptr fs:[0x300], rax
mov rax, qword ptr [rip+0x39bf76]
mov rsi, qword ptr [rsp+0x8]
mov edi, dword ptr [rsp+0x14]
mov rdx, qword ptr [rax]
mov rax, qword ptr [rsp+0x18]
call rax
push rbp
mov rbp, rsp
sub rsp, 0x30
mov rax, qword ptr fs:[0x28]
mov qword ptr [rbp-0x8], rax
xor eax, eax
mov edi, 0x400864
mov eax, 0x0
call 0x400620
jmp qword ptr [rip+0x2009fa]
push 0x1
jmp 0x400600
sub rsp, 0xd8
test al, al
mov qword ptr [rsp+0x28], rsi
mov qword ptr [rsp+0x30], rdx
mov qword ptr [rsp+0x38], rcx
mov qword ptr [rsp+0x40], r8
mov qword ptr [rsp+0x48], r9
jz 0x7fab1937f39b
movaps xmmword ptr [rsp+0x50], xmm0
movaps xmmword ptr [rsp+0x60], xmm1
movaps xmmword ptr [rsp+0x70], xmm2
movaps xmmword ptr [rsp+0x80], xmm3
movaps xmmword ptr [rsp+0x90], xmm4
movaps xmmword ptr [rsp+0xa0], xmm5
movaps xmmword ptr [rsp+0xb0], xmm6
movaps xmmword ptr [rsp+0xc0], xmm7
lea rax, ptr [rsp+0xe0]
mov rsi, rdi
lea rdx, ptr [rsp+0x8]
mov qword ptr [rsp+0x10], rax
lea rax, ptr [rsp+0x20]
mov dword ptr [rsp+0x8], 0x8
mov dword ptr [rsp+0xc], 0x30
mov qword ptr [rsp+0x18], rax
mov rax, qword ptr [rip+0x369b6f]
mov rdi, qword ptr [rax]
call 0x7fab19374c40
lea rax, ptr [rsp+0xe0]
mov rsi, rdi
lea rdx, ptr [rsp+0x8]
mov qword ptr [rsp+0x10], rax
lea rax, ptr [rsp+0x20]
mov dword ptr [rsp+0x8], 0x8
mov dword ptr [rsp+0xc], 0x30
mov qword ptr [rsp+0x18], rax
mov rax, qword ptr [rip+0x369b6f]
mov rdi, qword ptr [rax]
call 0x7fab19374c40
push rbp
mov rbp, rsp
push r15
mov r15, rdx
push r14
mov r14, rsi
push r13
push r12
push rbx
mov rbx, rdi
sub rsp, 0x5b8
mov rax, qword ptr [rip+0x374204]
mov eax, dword ptr fs:[rax]
mov dword ptr [rbp-0x4e0], eax
mov eax, dword ptr [rdi+0xc0]
test eax, eax
jnz 0x7fab19374d60
mov dword ptr [rdi+0xc0], 0xffffffff
mov r12d, dword ptr [rbx]
test r12b, 0x8
jnz 0x7fab19375048
test r14, r14
jz 0x7fab19375067
test r12b, 0x2
jnz 0x7fab19374df0
mov rax, qword ptr [r15]
mov esi, 0x25
mov rdi, r14
mov qword ptr [rbp-0x460], rax
mov rax, qword ptr [r15+0x8]
mov qword ptr [rbp-0x458], rax
mov rax, qword ptr [r15+0x10]
mov qword ptr [rbp-0x450], rax
call 0x7fab193be9b0
movd xmm1, esi
mov eax, edi
and eax, 0xfff
punpcklbw xmm1, xmm1
cmp eax, 0xfc0
punpcklwd xmm1, xmm1
pshufd xmm1, xmm1, 0x0
jnle 0x7fab193beb20
movdqu xmm0, xmmword ptr [rdi]
pxor xmm3, xmm3
movdqa xmm4, xmm0
pcmpeqb xmm0, xmm1
pcmpeqb xmm4, xmm3
por xmm0, xmm4
pmovmskb eax, xmm0
test eax, eax
jz 0x7fab193bea00
bsf eax, eax
lea rax, ptr [rdi+rax*1]
ret 
movdqu xmm0, xmmword ptr [rdi+0x10]
movdqa xmm4, xmm0
pcmpeqb xmm0, xmm1
pcmpeqb xmm4, xmm3
por xmm0, xmm4
pmovmskb ecx, xmm0
movdqu xmm0, xmmword ptr [rdi+0x20]
movdqa xmm4, xmm0
pcmpeqb xmm0, xmm1
shl rcx, 0x10
pcmpeqb xmm4, xmm3
por xmm0, xmm4
pmovmskb eax, xmm0
movdqu xmm0, xmmword ptr [rdi+0x30]
pcmpeqb xmm3, xmm0
shl rax, 0x20
pcmpeqb xmm0, xmm1
or rax, rcx
por xmm0, xmm3
pmovmskb ecx, xmm0
shl rcx, 0x30
or rax, rcx
test rax, rax
jnz 0x7fab193beb10
nop word ptr [rax+rax*1], ax
pxor xmm6, xmm6
and rdi, 0xffffffffffffffc0
add rdi, 0x40
movdqa xmm5, xmmword ptr [rdi]
movdqa xmm2, xmmword ptr [rdi+0x10]
movdqa xmm3, xmmword ptr [rdi+0x20]
pxor xmm5, xmm1
movdqa xmm4, xmmword ptr [rdi+0x30]
pxor xmm2, xmm1
pxor xmm3, xmm1
pminub xmm5, xmmword ptr [rdi]
pxor xmm4, xmm1
pminub xmm2, xmmword ptr [rdi+0x10]
pminub xmm3, xmmword ptr [rdi+0x20]
pminub xmm5, xmm2
pminub xmm4, xmmword ptr [rdi+0x30]
pminub xmm5, xmm3
pminub xmm5, xmm4
pcmpeqb xmm5, xmm6
pmovmskb eax, xmm5
test eax, eax
jz 0x7fab193bea78
movdqa xmm5, xmmword ptr [rdi]
movdqa xmm0, xmm5
pcmpeqb xmm5, xmm1
pcmpeqb xmm0, xmm6
por xmm5, xmm0
pcmpeqb xmm2, xmm6
pcmpeqb xmm3, xmm6
pcmpeqb xmm4, xmm6
pmovmskb ecx, xmm5
pmovmskb eax, xmm2
shl rax, 0x10
pmovmskb r8d, xmm3
pmovmskb edx, xmm4
shl r8, 0x20
or rax, r8
or rax, rcx
shl rdx, 0x30
or rax, rdx
bsf rax, rax
lea rax, ptr [rdi+rax*1]
ret 
bsf rax, rax
lea rax, ptr [rdi+rax*1]
ret 
and r12d, 0x8000
mov qword ptr [rbp-0x4e8], rax
mov qword ptr [rbp-0x4d0], rax
mov dword ptr [rbp-0x4dc], 0x0
jz 0x7fab19374d70
mov r12, qword ptr [rbp-0x4e8]
mov rax, qword ptr [rbx+0xd8]
mov rsi, r14
mov rdi, rbx
sub r12, r14
mov rdx, r12
call qword ptr [rax+0x38]
mov eax, dword ptr [rip+0x37a2fa]
test eax, eax
mov dword ptr [rbp-0x4dc], eax
jnz 0x7fab19374e70
mov rax, qword ptr [rip+0x3741d5]
mov qword ptr [rbp-0x438], rbx
mov qword ptr [rbp-0x440], rax
mov rdx, qword ptr [rbx+0x88]
mov r10, qword ptr fs:[0x10]
cmp r10, qword ptr [rdx+0x8]
jz 0x7fab19374de6
mov esi, 0x1
xor eax, eax
cmp dword ptr [rip+0x37a2b7], 0x0
jz 0x7fab19374dcb
mov rax, qword ptr [rip+0x37a1b9]
lea rdi, ptr [rbp-0x440]
mov rdx, rbx
ror rax, 0x11
xor rax, qword ptr fs:[0x30]
mov rsi, qword ptr [rip+0x3740cb]
call rax
mov qword ptr [rdi], rsi
mov qword ptr [rdi+0x8], rdx
mov rax, qword ptr fs:[0x2f8]
mov qword ptr [rdi+0x18], rax
mov edx, dword ptr fs:[0x308]
mov eax, edx
and eax, 0x2
jnz 0x7fab19728aca
test eax, eax
setnz al
movzx eax, al
mov dword ptr [rdi+0x10], eax
mov qword ptr fs:[0x2f8], rdi
ret 
test dword ptr [rbx], 0x8000
jz 0x7fab19374d99
jmp 0x7fab19374cf3
mov rdx, qword ptr [rbx+0x88]
mov r10, qword ptr fs:[0x10]
cmp r10, qword ptr [rdx+0x8]
jz 0x7fab19374de6
mov esi, 0x1
xor eax, eax
cmp dword ptr [rip+0x37a2b7], 0x0
jz 0x7fab19374dcb
lock cmpxchg dword ptr [rdx], esi
jnz 0x7fab19379fd0
cmpxchg dword ptr [rdx], esi
jnz 0x7fab19379fd0
mov rax, qword ptr [rbx+0x88]
mov rdx, qword ptr [rbx+0x88]
mov qword ptr [rax+0x8], r10
add dword ptr [rdx+0x4], 0x1
jmp 0x7fab19374cf3
mov r12, qword ptr [rbp-0x4e8]
mov rax, qword ptr [rbx+0xd8]
mov rsi, r14
mov rdi, rbx
sub r12, r14
mov rdx, r12
call qword ptr [rax+0x38]
push r15
xor eax, eax
push r14
push r13
push r12
push rbp
push rbx
mov rbx, rdx
sub rsp, 0x8
test rdx, rdx
jz 0x7fab193a456c
mov eax, dword ptr [rdi]
mov rbp, rdi
mov r12, rsi
and eax, 0xa00
cmp eax, 0xa00
jz 0x7fab193a45f0
mov rdx, qword ptr [rdi+0x30]
mov rdi, qword ptr [rdi+0x28]
cmp rdx, rdi
jbe 0x7fab193a4580
xor r14d, r14d
mov r13, rbx
lea rax, ptr [r14+r13*1]
test rax, rax
jz 0x7fab193a4566
mov rax, qword ptr [rbp+0xd8]
mov esi, 0xffffffff
mov rdi, rbp
call qword ptr [rax+0x18]
push r12
push rbp
push rbx
mov rbx, rdi
mov edi, dword ptr [rdi]
test dil, 0x8
jnz 0x7fab193a5830
test edi, 0x800
mov ebp, esi
jz 0x7fab193a5730
mov rsi, qword ptr [rbx+0x20]
test rsi, rsi
jz 0x7fab193a5850
cmp qword ptr [rbx+0x20], 0x0
jz 0x7fab193a5850
mov rsi, qword ptr [rbx+0x8]
test edi, 0x100
jnz 0x7fab193a5886
mov rax, qword ptr [rbx+0x40]
cmp rax, rsi
jz 0x7fab193a5820
mov rdi, rbx
call 0x7fab193a6470
push r12
push rbp
push rbx
cmp qword ptr [rdi+0x38], 0x0
mov rbx, rdi
jz 0x7fab193a6488
pop rbx
pop rbp
pop r12
ret 
mov eax, dword ptr [rdi]
test al, 0x2
jz 0x7fab193a6498
mov edx, dword ptr [rdi+0xc0]
test edx, edx
jle 0x7fab193a64e0
mov rax, qword ptr [rbx+0xd8]
mov rdi, rbx
call qword ptr [rax+0x68]
mov rax, qword ptr [rbx+0xd8]
mov rdi, rbx
call qword ptr [rax+0x68]
push r12
push rbp
push rbx
mov rbx, rdi
sub rsp, 0x90
mov eax, dword ptr [rdi+0x70]
test eax, eax
js 0x7fab19398808
mov rax, qword ptr [rdi+0xd8]
mov rsi, rsp
call qword ptr [rax+0x90]
mov rdx, rsi
mov esi, dword ptr [rdi+0x70]
mov edi, 0x1
jmp 0x7fab19416080
cmp edi, 0x1
mov eax, esi
jnbe 0x7fab194160a0
movsxd rdi, eax
mov rsi, rdx
mov eax, 0x5
syscall 
cmp rax, 0xfffffffffffff000
jnbe 0x7fab194160b4
ret 
test eax, eax
js 0x7fab19398808
mov eax, dword ptr [rsp+0x18]
and eax, 0xf000
cmp eax, 0x2000
jz 0x7fab19398860
mov rbp, qword ptr [rsp+0x38]
test rbp, rbp
jle 0x7fab19398808
mov rdx, qword ptr [rsp+0x28]
mov rax, rdx
shr rdx, 0x8
shr rax, 0x20
and edx, 0xfff
and eax, 0xfffff000
or eax, edx
sub eax, 0x88
cmp eax, 0x7
jnbe 0x7fab193988a0
mov rbp, qword ptr [rsp+0x38]
or dword ptr [rbx], 0x200
test rbp, rbp
jnle 0x7fab193987f3
jmp 0x7fab19398808
lea rsi, ptr [rbp+0xfff]
and rsi, 0xfffffffffffff000
jmp 0x7fab19398812
xor r9d, r9d
xor edi, edi
mov r8d, 0xffffffff
mov ecx, 0x22
mov edx, 0x3
call 0x7fab1941f870
mov r10, rcx
mov eax, 0x9
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab1941f883
ret 
cmp rax, 0xffffffffffffffff
jz 0x7fab1939884b
lea rdx, ptr [rax+rbp*1]
mov rsi, rax
mov ecx, 0x1
mov rdi, rbx
call 0x7fab193a6400
push rbp
mov rbp, rsi
push rbx
mov rbx, rdi
sub rsp, 0x18
mov rdi, qword ptr [rdi+0x38]
mov eax, dword ptr [rbx]
test rdi, rdi
jz 0x7fab193a641b
test al, 0x1
jz 0x7fab193a6440
mov qword ptr [rbx+0x40], rdx
mov edx, eax
or eax, 0x1
and edx, 0xfffffffe
test ecx, ecx
mov qword ptr [rbx+0x38], rbp
cmovz edx, eax
mov dword ptr [rbx], edx
add rsp, 0x18
pop rbx
pop rbp
ret 
mov qword ptr [rbx+0x40], rdx
mov edx, eax
or eax, 0x1
and edx, 0xfffffffe
test ecx, ecx
mov qword ptr [rbx+0x38], rbp
cmovz edx, eax
mov dword ptr [rbx], edx
add rsp, 0x18
pop rbx
pop rbp
ret 
mov eax, 0x1
add rsp, 0x90
pop rbx
pop rbp
pop r12
ret 
cmp eax, 0xffffffff
jnz 0x7fab193a647e
mov rdi, qword ptr [rbx+0x38]
lea r12, ptr [rbx+0x84]
lea rbp, ptr [rbx+0x83]
mov eax, dword ptr [rbx]
test rdi, rdi
jz 0x7fab193a64c7
test al, 0x1
jz 0x7fab193a64f0
pop rbx
pop rbp
pop r12
ret 
mov rsi, qword ptr [rbx+0x38]
mov edi, dword ptr [rbx]
mov qword ptr [rbx+0x18], rsi
mov qword ptr [rbx+0x8], rsi
mov qword ptr [rbx+0x10], rsi
jmp 0x7fab193a573f
test edi, 0x100
jnz 0x7fab193a5886
mov rax, qword ptr [rbx+0x40]
cmp rax, rsi
jz 0x7fab193a5820
mov rdx, qword ptr [rbx+0x10]
mov ecx, dword ptr [rbx+0xc0]
mov qword ptr [rbx+0x30], rax
mov eax, edi
or ah, 0x8
mov qword ptr [rbx+0x8], rdx
mov qword ptr [rbx+0x18], rdx
mov qword ptr [rbx+0x28], rsi
mov qword ptr [rbx+0x20], rsi
mov rdx, rsi
test ecx, ecx
mov dword ptr [rbx], eax
jnle 0x7fab193a56ee
and edi, 0x202
jz 0x7fab193a56ee
mov qword ptr [rbx+0x30], rsi
jmp 0x7fab193a56ee
cmp ebp, 0xffffffff
jz 0x7fab193a5810
cmp qword ptr [rbx+0x40], rdx
jz 0x7fab193a57d0
lea rax, ptr [rdx+0x1]
mov qword ptr [rbx+0x28], rax
mov byte ptr [rdx], bpl
mov eax, dword ptr [rbx]
test al, 0x2
jnz 0x7fab193a57a0
mov rdi, rbx
sub rdx, rsi
pop rbx
pop rbp
pop r12
jmp 0x7fab193a5360
push r13
xor eax, eax
push r12
push rbp
mov rbp, rdx
push rbx
sub rsp, 0x8
test rdx, rdx
jnz 0x7fab193a5380
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
ret 
cmp eax, 0xffffffff
jz 0x7fab193a4640
mov rcx, qword ptr [rbp+0x40]
sub rcx, qword ptr [rbp+0x38]
xor edx, edx
cmp rcx, 0x7f
jbe 0x7fab193a45c2
mov rax, r13
xor edx, edx
div rcx
mov r14, r13
sub r14, rdx
jnz 0x7fab193a4678
test r13, r13
jz 0x7fab193a4566
lea rsi, ptr [r12+r14*1]
mov rdx, r13
mov rdi, rbp
call 0x7fab193a6550
push r14
xor eax, eax
test rdx, rdx
mov r14, rdx
push r13
push r12
push rbp
push rbx
jz 0x7fab193a6656
mov r12, rdi
mov rbp, rsi
mov rbx, rdx
jmp 0x7fab193a6618
mov rdi, qword ptr [r12+0x28]
mov r13, qword ptr [r12+0x30]
cmp rdi, r13
jnb 0x7fab193a65f1
sub r13, rdi
cmp rbx, r13
cmovbe r13, rbx
cmp r13, 0x14
jbe 0x7fab193a6578
mov rsi, rbp
mov rdx, r13
add rbp, r13
call 0x7fab193b7600
test rbx, rbx
jz 0x7fab193a6650
mov rax, qword ptr [r12+0xd8]
movzx esi, byte ptr [rbp]
mov rdi, r12
lea r13, ptr [rbp+0x1]
call qword ptr [rax+0x18]
mov rdx, qword ptr [rbx+0x28]
cmp ebp, 0xffffffff
jz 0x7fab193a5810
cmp qword ptr [rbx+0x40], rdx
jz 0x7fab193a57d0
lea rax, ptr [rdx+0x1]
mov qword ptr [rbx+0x28], rax
mov byte ptr [rdx], bpl
mov eax, dword ptr [rbx]
test al, 0x2
jnz 0x7fab193a57a0
test ah, 0x2
jz 0x7fab193a5724
cmp ebp, 0xa
jz 0x7fab193a57a0
movzx eax, bpl
pop rbx
pop rbp
pop r12
ret 
cmp eax, 0xffffffff
jz 0x7fab193a6650
sub rbx, 0x1
mov rbp, r13
mov rdi, qword ptr [r12+0x28]
mov r13, qword ptr [r12+0x30]
cmp rdi, r13
jnb 0x7fab193a65f1
sub r13, rdi
cmp rbx, r13
cmovbe r13, rbx
cmp r13, 0x14
jbe 0x7fab193a6578
mov rax, r14
sub rax, rbx
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret 
sub r13, rax
jmp 0x7fab193a4566
mov rax, rbx
sub rax, r13
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
cmp r12, rax
mov dword ptr [rbp-0x4d8], 0xffffffff
jz 0x7fab19374eb0
test dword ptr [rbx], 0x8000
jnz 0x7fab19374d3c
mov rdx, qword ptr [rbx+0x88]
sub dword ptr [rdx+0x4], 0x1
jz 0x7fab19374e10
cmp r12, 0x7fffffff
jnle 0x7fab1937507f
mov rax, qword ptr [rbp-0x4d0]
mov dword ptr [rbp-0x4d8], r12d
cmp byte ptr [rax], 0x0
jz 0x7fab19374d23
cmp qword ptr [rip+0x379ed4], 0x0
jnz 0x7fab19376ab3
test dword ptr [rbx], 0x8000
jnz 0x7fab19374d3c
mov rdx, qword ptr [rbx+0x88]
sub dword ptr [rdx+0x4], 0x1
jz 0x7fab19374e10
mov eax, dword ptr [rbp-0x4dc]
test eax, eax
jnz 0x7fab19374e42
mov qword ptr [rdx+0x8], 0x0
cmp dword ptr [rip+0x37a255], 0x0
jz 0x7fab19374e2c
lock dec dword ptr [rdx]
jnz 0x7fab19379feb
jmp 0x7fab19374e34
dec dword ptr [rdx]
jnz 0x7fab19379feb
mov eax, dword ptr [rbp-0x4dc]
test eax, eax
jz 0x7fab19374d4a
mov rax, qword ptr [rip+0x37a1ef]
lea rdi, ptr [rbp-0x440]
xor esi, esi
ror rax, 0x11
xor rax, qword ptr fs:[0x30]
call rax
mov rax, qword ptr [rdi+0x18]
mov qword ptr fs:[0x2f8], rax
mov edx, dword ptr [rdi+0x10]
test edx, edx
jnz 0x7fab19728b1c
test esi, esi
jnz 0x7fab19728b10
ret 
jmp 0x7fab19374d4a
mov eax, dword ptr [rbp-0x4d8]
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
add rsp, 0xd8
ret 
lea rax, ptr [rbp-0x30]
mov esi, 0x0
mov rdi, rax
call 0x400660
jmp qword ptr [rip+0x2009da]
push 0x5
jmp 0x400600
lea rax, ptr [rip+0x874d]
sub rsp, 0x18
test rsi, rsi
cmovz rsi, rax
mov edx, dword ptr [rsi]
mov eax, edx
and eax, 0x30000000
jz 0x7fab197242f0
cmp eax, 0x10000000
jz 0x7fab197242f0
and edx, 0x40000000
mov eax, 0x5f
jz 0x7fab197242f0
mov qword ptr [rdi+0x10], 0x0
mov qword ptr [rdi], 0x0
mov qword ptr [rdi+0x8], 0x0
mov qword ptr [rdi+0x18], 0x0
mov qword ptr [rdi+0x20], 0x0
mov eax, dword ptr [rsi]
and eax, 0xf000fff
mov dword ptr [rdi+0x10], eax
mov edx, dword ptr [rsi]
test edx, 0x40000000
jz 0x7fab19724333
or eax, 0x10
mov dword ptr [rdi+0x10], eax
mov edx, dword ptr [rsi]
mov ecx, edx
and ecx, 0x30000000
cmp ecx, 0x10000000
jz 0x7fab19724398
cmp ecx, 0x20000000
jnz 0x7fab19724378
mov ecx, edx
and ecx, 0x30000000
cmp ecx, 0x10000000
jz 0x7fab19724398
cmp ecx, 0x20000000
jnz 0x7fab19724378
or eax, 0x40
mov dword ptr [rdi+0x10], eax
mov eax, dword ptr [rsi]
and eax, 0xfff000
sar eax, 0xc
test eax, eax
jnz 0x7fab19724371
xor eax, eax
and edx, 0xc0000000
jz 0x7fab197242e1
or dword ptr [rdi+0x10], 0x80
add rsp, 0x18
ret 
add rsp, 0x18
ret 
lea rax, ptr [rbp-0x30]
mov rdi, rax
call 0x400670
jmp qword ptr [rip+0x2009d2]
push 0x6
jmp 0x400600
sub rsp, 0x8
mov esi, dword ptr [rdi+0x10]
mov r8, rdi
mov eax, esi
mov edx, esi
and eax, 0x17f
and edx, 0x7c
jnz 0x7fab197244d7
test eax, eax
jnz 0x7fab19724490
mov edx, dword ptr [rip+0x2130fe]
test edx, edx
jz 0x7fab19724458
and esi, 0x80
mov edi, 0x1
xor eax, eax
lock cmpxchg dword ptr [r8], edi
jnz 0x7fab1972463a
mov eax, dword ptr [r8+0x8]
test eax, eax
jnz 0x7fab197244dd
mov eax, dword ptr fs:[0x2d0]
add dword ptr [r8+0xc], 0x1
mov dword ptr [r8+0x8], eax
xor eax, eax
add rsp, 0x8
ret 
lea rax, ptr [rbp-0x30]
mov rdi, rax
call 0x400650
jmp qword ptr [rip+0x2009e2]
push 0x4
jmp 0x400600
mov esi, dword ptr [rdi+0x10]
mov rdx, rdi
mov eax, esi
mov r8d, esi
and eax, 0x17f
and r8d, 0x7c
jnz 0x7fab197257e8
test eax, eax
jnz 0x7fab197257f2
mov dword ptr [rdx+0x8], 0x0
sub dword ptr [rdx+0xc], 0x1
and esi, 0x80
lock dec dword ptr [rdx]
jnz 0x7fab19725885
mov eax, r8d
ret 
mov eax, 0x0
mov rdx, qword ptr [rbp-0x8]
xor rdx, qword ptr fs:[0x28]
jz 0x4007d5
call 0x400610
leave 
ret 
mov edi, eax
call 0x7fab193671e0
lea rsi, ptr [rip+0x3824e1]
sub rsp, 0x8
mov edx, 0x1
call 0x7fab193670d0
push r13
push r12
mov r12d, edx
push rbp
mov rbp, rsi
push rbx
mov ebx, edi
sub rsp, 0x8
call 0x7fab193677b0
push r12
push rbp
push rbx
lea rdi, ptr [rip+0x3815d5]
call 0x7fab1934a4a0
jmp qword ptr [rip+0x39eb92]
push 0x2
jmp 0x7fab1934a450
push qword ptr [rip+0x39ebb2]
jmp qword ptr [rip+0x39ebb4]
mov rsi, qword ptr fs:[0x8]
mov rax, qword ptr [rip+0x210cb0]
cmp qword ptr [rsi], rax
jnz 0x7fab2cdae32b
mov rax, qword ptr [rdi]
shl rax, 0x4
mov rax, qword ptr [rsi+rax*1]
cmp rax, 0xffffffffffffffff
jz 0x7fab2cdae330
add rax, qword ptr [rdi+0x8]
ret 
mov rbx, qword ptr [rax+0x60]
test rbx, rbx
jz 0x7fab19367868
mov rbp, qword ptr [rip+0x381611]
lea r12, ptr [rbp+0x908]
jmp 0x7fab19367809
pop rbx
pop rbp
pop r12
ret 
mov r13, qword ptr [rbp]
test r13, r13
jz 0x7fab19367140
mov rax, qword ptr [r13+0x8]
mov rdx, rax
shl rdx, 0x5
test rax, rax
lea rcx, ptr [r13+rdx*1-0x10]
jz 0x7fab1936712f
sub rax, 0x1
mov qword ptr [r13+0x8], rax
mov r8, qword ptr [rcx]
cmp r8, 0x3
jz 0x7fab193671b0
cmp r8, 0x4
jz 0x7fab19367190
cmp r8, 0x2
jz 0x7fab19367170
sub rcx, 0x20
test rax, rax
jnz 0x7fab19367105
mov rax, qword ptr [rcx+0x8]
mov rdi, qword ptr [rcx+0x10]
mov esi, ebx
ror rax, 0x11
xor rax, qword ptr fs:[0x30]
call rax
push rbp
mov rbp, rsp
push r15
xor r15d, r15d
push r14
push r13
push r12
push rbx
sub rsp, 0x38
mov dword ptr [rbp-0x38], 0x0
mov qword ptr [rbp-0x50], 0x0
mov rax, qword ptr [rip+0x213406]
sub rax, 0x1
mov qword ptr [rbp-0x48], rax
js 0x7fab2cdab765
lea rax, ptr [rax+rax*8]
lea rsi, ptr [rip+0x212aed]
shl rax, 0x4
lea rax, ptr [rsi+rax*1+0x8]
mov qword ptr [rbp-0x40], rax
jmp 0x7fab2cdab5b0
lea rdi, ptr [rip+0x2133b1]
call qword ptr [rip+0x2139ab]
sub rsp, 0x8
mov esi, dword ptr [rdi+0x10]
mov r8, rdi
mov eax, esi
mov edx, esi
and eax, 0x17f
and edx, 0x7c
jnz 0x7fab197244d7
test eax, eax
jnz 0x7fab19724490
mov edx, dword ptr [rip+0x2130fe]
test edx, edx
jz 0x7fab19724458
cmp eax, 0x100
jz 0x7fab1972443b
mov edi, esi
and edi, 0x7f
cmp edi, 0x1
jnz 0x7fab19724536
mov eax, dword ptr fs:[0x2d0]
cmp eax, dword ptr [r8+0x8]
jz 0x7fab1972451b
and esi, 0x80
mov eax, edx
lock cmpxchg dword ptr [r8], edi
jnz 0x7fab19724655
cmp dword ptr [r8+0x8], 0x0
jnz 0x7fab197244fc
mov dword ptr [r8+0x4], 0x1
jmp 0x7fab19724478
mov eax, dword ptr fs:[0x2d0]
add dword ptr [r8+0xc], 0x1
mov dword ptr [r8+0x8], eax
xor eax, eax
add rsp, 0x8
ret 
mov rax, qword ptr [rbp-0x40]
mov esi, dword ptr [rax]
test esi, esi
jz 0x7fab2cdab588
mov rcx, qword ptr [rax-0x8]
movzx eax, byte ptr [rcx+0x315]
shr al, 0x3
and eax, 0x1
cmp eax, dword ptr [rbp-0x38]
jnz 0x7fab2cdab588
cmp qword ptr [rbp-0x48], 0x0
mov edi, esi
setz r8b
shl rdi, 0x3
cmp rdi, qword ptr [rbp-0x50]
jbe 0x7fab2cdab61f
cmp qword ptr [rbp-0x50], 0x0
jnz 0x7fab2cdab7f0
lea rax, ptr [rdi+0x1e]
mov ebx, 0x10
xor edx, edx
mov qword ptr [rbp-0x50], rdi
div rbx
shl rax, 0x4
sub rsp, rax
lea r15, ptr [rsp+0xf]
and r15, 0xfffffffffffffff0
mov dword ptr [rbp-0x34], 0x0
jmp 0x7fab2cdab639
cmp qword ptr [rcx+0x28], rcx
jnz 0x7fab2cdab630
cmp dword ptr [rbp-0x34], esi
jnb 0x7fab2cdab88e
mov edi, dword ptr [rbp-0x34]
add dword ptr [rbp-0x34], 0x1
mov eax, edi
mov qword ptr [r15+rax*8], rcx
add dword ptr [rcx+0x310], 0x1
mov dword ptr [rcx+0x3dc], edi
mov rcx, qword ptr [rcx+0x18]
test rcx, rcx
jnz 0x7fab2cdab639
cmp dword ptr [rbp-0x34], esi
jnz 0x7fab2cdab853
mov ebx, dword ptr [rbp-0x34]
mov rcx, qword ptr [rbp-0x48]
xor edx, edx
mov rdi, r15
mov esi, ebx
call 0x7fab2cdab2a0
push rbp
mov rbp, rsp
push r15
push r14
push r13
push r12
push rbx
mov rbx, rsi
sub rsp, 0x58
cmp rsi, 0x1
mov qword ptr [rbp-0x50], rdi
mov qword ptr [rbp-0x40], rsi
mov qword ptr [rbp-0x60], rdx
mov qword ptr [rbp-0x58], rsp
jz 0x7fab2cdab3f0
lea rdx, ptr [rsi+rsi*1]
test rcx, rcx
setz cl
xor esi, esi
lea rax, ptr [rdx+0x10]
movzx ecx, cl
mov dword ptr [rbp-0x48], ecx
and rax, 0xfffffffffffffff0
sub rsp, rax
mov rdi, rsp
mov qword ptr [rbp-0x38], rsp
call 0x7fab2cdb5960
mov rcx, rdx
movzx eax, sil
mov rdx, rdi
rep stosb byte ptr [rdi]
rep stosb byte ptr [rdi]
mov rax, rdx
ret 
mov ecx, dword ptr [rbp-0x48]
mov eax, ebx
mov r8, qword ptr [rbp-0x50]
sub eax, 0x1
mov dword ptr [rbp-0x64], eax
mov r14d, ecx
lea r11d, ptr [rcx+0x1]
mov r15d, ecx
jmp 0x7fab2cdab358
mov rax, qword ptr [rbp-0x38]
lea rdi, ptr [r8+r14*8]
lea rax, ptr [rax+r14*2]
movzx ecx, word ptr [rax]
add ecx, 0x1
mov word ptr [rax], cx
mov rax, qword ptr [rdi]
mov rbx, qword ptr [rax+0x28]
cmp rbx, rax
jnz 0x7fab2cdab318
cmp dword ptr [rbx+0x3dc], 0xffffffff
jz 0x7fab2cdab318
mov edx, dword ptr [rbp-0x64]
cmp r15d, edx
mov eax, edx
jnb 0x7fab2cdab318
nop dword ptr [rax], eax
mov r12d, eax
lea r13, ptr [r8+r12*8]
mov r9, qword ptr [r13]
mov rdx, qword ptr [r9+0x3b8]
test rdx, rdx
jnz 0x7fab2cdab3b9
jmp 0x7fab2cdab3c1
mov rdx, qword ptr [r9+0x3c0]
test rdx, rdx
jnz 0x7fab2cdab4e0
sub eax, 0x1
cmp r15d, eax
jb 0x7fab2cdab390
mov r14d, r11d
cmp r14, qword ptr [rbp-0x40]
mov r15d, r11d
mov r9, r14
jnz 0x7fab2cdab32b
mov r12d, eax
lea r13, ptr [r8+r12*8]
mov r9, qword ptr [r13]
mov rdx, qword ptr [r9+0x3b8]
test rdx, rdx
jnz 0x7fab2cdab3b9
jmp 0x7fab2cdab3c1
mov rsi, qword ptr [rdx]
test rsi, rsi
jnz 0x7fab2cdab3b0
mov rdx, qword ptr [r9+0x3c0]
test rdx, rdx
jnz 0x7fab2cdab4e0
sub eax, 0x1
cmp r15d, eax
jb 0x7fab2cdab390
add rdx, 0x8
cmp rbx, rsi
jz 0x7fab2cdab3ff
mov rsi, qword ptr [rdx]
test rsi, rsi
jnz 0x7fab2cdab3b0
mov rdx, qword ptr [r9+0x3c0]
test rdx, rdx
jnz 0x7fab2cdab4e0
sub eax, 0x1
cmp r15d, eax
jb 0x7fab2cdab390
mov r14d, r11d
cmp r14, qword ptr [rbp-0x40]
mov r15d, r11d
mov r9, r14
jnz 0x7fab2cdab32b
mov rsp, qword ptr [rbp-0x58]
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
mov rdx, qword ptr [rbp-0x40]
mov rax, qword ptr [rbp-0x38]
xor esi, esi
mov dword ptr [rbp-0x50], r11d
mov qword ptr [rbp-0x48], r8
sub rdx, r9
lea rdi, ptr [rax+r14*2]
add rdx, rdx
call 0x7fab2cdb5960
mov r11d, dword ptr [rbp-0x50]
mov r8, qword ptr [rbp-0x48]
add r11d, 0x1
mov rax, qword ptr [rbp-0x38]
lea rdi, ptr [r8+r14*8]
lea rax, ptr [rax+r14*2]
movzx ecx, word ptr [rax]
add ecx, 0x1
mov word ptr [rax], cx
mov rax, qword ptr [rdi]
mov rbx, qword ptr [rax+0x28]
cmp rbx, rax
jnz 0x7fab2cdab318
cmp dword ptr [rbx+0x3dc], 0xffffffff
jz 0x7fab2cdab318
mov edx, dword ptr [rbp-0x64]
cmp r15d, edx
mov eax, edx
jnb 0x7fab2cdab318
mov r14d, r11d
cmp r14, qword ptr [rbp-0x40]
mov r15d, r11d
mov r9, r14
jz 0x7fab2cdab3ec
mov rdx, qword ptr [rbp-0x40]
mov rax, qword ptr [rbp-0x38]
xor esi, esi
mov dword ptr [rbp-0x50], r11d
mov qword ptr [rbp-0x48], r8
sub rdx, r9
lea rdi, ptr [rax+r14*2]
add rdx, rdx
call 0x7fab2cdb5960
mov rsp, qword ptr [rbp-0x58]
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
lea rdi, ptr [rip+0x2132da]
call qword ptr [rip+0x2138dc]
mov esi, dword ptr [rdi+0x10]
mov rdx, rdi
mov eax, esi
mov r8d, esi
and eax, 0x17f
and r8d, 0x7c
jnz 0x7fab197257e8
test eax, eax
jnz 0x7fab197257f2
mov dword ptr [rdx+0x8], 0x0
sub dword ptr [rdx+0xc], 0x1
and esi, 0x80
lock dec dword ptr [rdx]
jnz 0x7fab19725885
cmp eax, 0x100
jnz 0x7fab19725804
and esi, 0x80
jmp 0x7fab1972bfb0
mov ecx, esi
and ecx, 0x7f
cmp ecx, 0x1
jnz 0x7fab19725823
mov eax, dword ptr fs:[0x2d0]
cmp dword ptr [rdi+0x8], eax
jz 0x7fab19725842
mov r8d, 0x1
jmp 0x7fab197257e4
sub dword ptr [rdi+0x4], 0x1
jz 0x7fab197257ca
jmp 0x7fab197257e4
mov dword ptr [rdx+0x8], 0x0
sub dword ptr [rdx+0xc], 0x1
and esi, 0x80
lock dec dword ptr [rdx]
jnz 0x7fab19725885
mov eax, r8d
ret 
test ebx, ebx
jz 0x7fab2cdab595
xor r13d, r13d
nop 
mov rbx, qword ptr [r15+r13*8]
movzx eax, byte ptr [rbx+0x314]
test al, 0x8
jz 0x7fab2cdab73d
and eax, 0xfffffff7
mov byte ptr [rbx+0x314], al
mov rax, qword ptr [rbx+0x110]
test rax, rax
jz 0x7fab2cdab790
test byte ptr [rip+0x2125ed], 0x2
jnz 0x7fab2cdab7a7
test rax, rax
jz 0x7fab2cdab713
mov r12, qword ptr [rax+0x8]
mov rax, qword ptr [rbx+0x120]
add r12, qword ptr [rbx]
mov rdx, qword ptr [rax+0x8]
shr rdx, 0x3
test edx, edx
lea r14d, ptr [rdx-0x1]
jnz 0x7fab2cdab703
mov edx, r14d
call qword ptr [r12+rdx*8]
cmp byte ptr [rip+0x200939], 0x0
jnz 0x40073a
push rbp
mov rbp, rsp
call 0x4006b0
mov eax, 0x601067
push rbp
sub rax, 0x601060
cmp rax, 0xe
mov rbp, rsp
jnbe 0x4006c7
pop rbp
ret 
pop rbp
mov byte ptr [rip+0x200926], 0x1
ret 
test r14d, r14d
lea edx, ptr [r14-0x1]
jnz 0x7fab2cdab700
mov rax, qword ptr [rbx+0xa8]
test rax, rax
jz 0x7fab2cdab728
mov rax, qword ptr [rax+0x8]
add rax, qword ptr [rbx]
call rax
sub rsp, 0x8
add rsp, 0x8
ret 
mov ecx, dword ptr [rbp-0x38]
test ecx, ecx
jnz 0x7fab2cdab73d
mov eax, dword ptr [rip+0x2126b3]
test eax, eax
jnz 0x7fab2cdab8cc
sub dword ptr [rbx+0x310], 0x1
add r13, 0x1
cmp dword ptr [rbp-0x34], r13d
jnbe 0x7fab2cdab6a0
mov rbx, qword ptr [r15+r13*8]
movzx eax, byte ptr [rbx+0x314]
test al, 0x8
jz 0x7fab2cdab73d
and eax, 0xfffffff7
mov byte ptr [rbx+0x314], al
mov rax, qword ptr [rbx+0x110]
test rax, rax
jz 0x7fab2cdab790
test byte ptr [rip+0x2125ed], 0x2
jnz 0x7fab2cdab7a7
sub dword ptr [rbx+0x310], 0x1
add r13, 0x1
cmp dword ptr [rbp-0x34], r13d
jnbe 0x7fab2cdab6a0
sub qword ptr [rbp-0x40], 0x90
sub qword ptr [rbp-0x48], 0x1
jns 0x7fab2cdab5b0
mov edx, dword ptr [rbp-0x38]
test edx, edx
jnz 0x7fab2cdab837
test rax, rax
jz 0x7fab2cdab713
mov r12, qword ptr [rax+0x8]
mov rax, qword ptr [rbx+0x120]
add r12, qword ptr [rbx]
mov rdx, qword ptr [rax+0x8]
shr rdx, 0x3
test edx, edx
lea r14d, ptr [rdx-0x1]
jnz 0x7fab2cdab703
jmp 0x7fab2cdab713
cmp byte ptr [rip+0x2129a9], 0x0
jnz 0x7fab19720980
cmp qword ptr [rip+0x21267f], 0x0
push rbp
mov rbp, rsp
jz 0x7fab19720973
mov rdi, qword ptr [rip+0x212902]
call 0x7fab1971f9d0
jmp qword ptr [rip+0x213882]
push 0x48
jmp 0x7fab1971f540
push r15
push r14
push r13
xor r13d, r13d
push r12
push rbp
mov rbp, rdi
push rbx
sub rsp, 0x8
mov r14, qword ptr [rip+0x38220d]
test r14, r14
jz 0x7fab1936755c
nop dword ptr [rax], eax
mov rax, qword ptr [r14+0x8]
lea r12, ptr [r14+0x10]
shl rax, 0x5
lea rbx, ptr [r14+rax*1-0x10]
cmp rbx, r12
jb 0x7fab19367550
test rbp, rbp
jnz 0x7fab193674f9
mov r14, qword ptr [r14]
test r14, r14
jnz 0x7fab193674c8
mov rcx, qword ptr [rip+0x38216d]
test rcx, rcx
jz 0x7fab193675b7
nop dword ptr [rax+rax*1], eax
mov rax, qword ptr [rcx+0x8]
lea rdx, ptr [rcx+0x10]
shl rax, 0x5
lea rax, ptr [rcx+rax*1-0x10]
cmp rax, rdx
jb 0x7fab193675af
mov rcx, qword ptr [rcx]
test rcx, rcx
jnz 0x7fab19367570
test rbp, rbp
jz 0x7fab19367661
add rsp, 0x8
mov rdi, rbp
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
jmp 0x7fab19433340
mov r9, qword ptr [rip+0x2bbaf1]
push rbp
mov rbp, rsp
test r9, r9
jz 0x7fab19433371
cmp qword ptr [r9+0x20], rdi
mov r10, rdi
jnz 0x7fab19433369
jmp 0x7fab19433373
mov rdx, qword ptr [r9]
test rdx, rdx
jnz 0x7fab19433360
leave 
ret 
call 0x7fab197208e0
lea rax, ptr [rip+0x212a10]
lea rdi, ptr [rip+0x212a02]
push rbp
sub rax, rdi
mov rbp, rsp
cmp rax, 0xe
jnbe 0x7fab197208fd
pop rbp
ret 
pop rbp
mov byte ptr [rip+0x212980], 0x1
ret 
sub rsp, 0x8
add rsp, 0x8
ret 
cmp qword ptr [rbx+0xa8], 0x0
jz 0x7fab2cdab728
test byte ptr [rip+0x21251f], 0x2
jz 0x7fab2cdab6d9
mov rsi, qword ptr [rbx+0x8]
cmp byte ptr [rsi], 0x0
jnz 0x7fab2cdab7c8
mov ecx, dword ptr [rbp-0x38]
test ecx, ecx
jnz 0x7fab2cdab73d
mov eax, dword ptr [rip+0x2126b3]
test eax, eax
jnz 0x7fab2cdab8cc
sub dword ptr [rbx+0x310], 0x1
add r13, 0x1
cmp dword ptr [rbp-0x34], r13d
jnbe 0x7fab2cdab6a0
sub qword ptr [rbp-0x40], 0x90
sub qword ptr [rbp-0x48], 0x1
jns 0x7fab2cdab5b0
mov edx, dword ptr [rbp-0x38]
test edx, edx
jnz 0x7fab2cdab837
mov eax, dword ptr [rip+0x212672]
test eax, eax
jz 0x7fab2cdab837
test byte ptr [rip+0x212482], 0x80
jnz 0x7fab2cdab910
lea rsp, ptr [rbp-0x28]
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret 
jmp 0x7fab193670f0
mov rax, qword ptr [r13+0x8]
mov rdx, rax
shl rdx, 0x5
test rax, rax
lea rcx, ptr [r13+rdx*1-0x10]
jz 0x7fab1936712f
sub rax, 0x1
mov qword ptr [r13+0x8], rax
mov r8, qword ptr [rcx]
cmp r8, 0x3
jz 0x7fab193671b0
cmp r8, 0x4
jz 0x7fab19367190
mov rax, qword ptr [r13]
test rax, rax
mov qword ptr [rbp], rax
jnz 0x7fab193671c8
test r12b, r12b
jz 0x7fab19367164
lea rbp, ptr [rip+0x37e6f4]
lea r12, ptr [rip+0x37e6f5]
cmp rbp, r12
jnb 0x7fab19367164
call qword ptr [rbp]
push r13
xor edi, edi
push r12
push rbp
mov rbp, qword ptr fs:[0x10]
push rbx
sub rsp, 0x8
call 0x7fab193a6e10
push r15
push r14
push r13
xor r13d, r13d
push r12
push rbp
mov ebp, edi
push rbx
sub rsp, 0x28
test edi, edi
jz 0x7fab193a6e98
mov r13d, dword ptr [rip+0x348242]
test r13d, r13d
jnz 0x7fab193a7070
lea rax, ptr [rip-0x152e]
mov qword ptr [rsp+0x8], 0x0
mov qword ptr [rsp], rax
mov rdx, qword ptr fs:[0x10]
cmp rdx, qword ptr [rip+0x344b6d]
jz 0x7fab193a6e91
mov rbx, qword ptr [rip+0x343301]
xor r15d, r15d
mov r14d, dword ptr [rip+0x344b07]
test rbx, rbx
jz 0x7fab193a6fd7
mov r12, qword ptr fs:[0x10]
jmp 0x7fab193a6ed3
test ebp, ebp
mov qword ptr [rip+0x344ac4], rbx
jz 0x7fab193a6f2d
mov eax, dword ptr [rbx]
and eax, 0x8000
jnz 0x7fab193a6f2d
mov rdx, qword ptr [rbx+0x88]
cmp r12, qword ptr [rdx+0x8]
jz 0x7fab193a6f29
mov eax, dword ptr [rbx+0xc0]
test eax, eax
jle 0x7fab193a7020
mov rdx, qword ptr [rbx+0xa0]
mov rax, qword ptr [rdx+0x18]
cmp qword ptr [rdx+0x20], rax
jbe 0x7fab193a6f6a
mov rax, qword ptr [rbx+0xd8]
mov esi, 0xffffffff
mov rdi, rbx
call qword ptr [rax+0x18]
mov rax, qword ptr [rbx+0x20]
cmp qword ptr [rbx+0x28], rax
jnbe 0x7fab193a6f4c
jmp 0x7fab193a6f6a
test ebp, ebp
jz 0x7fab193a6fb0
test dword ptr [rbx], 0x8000
jnz 0x7fab193a6fb0
mov rdx, qword ptr [rbx+0x88]
sub dword ptr [rdx+0x4], 0x1
jnz 0x7fab193a6fb0
mov edx, dword ptr [rip+0x3449fa]
mov qword ptr [rip+0x3449df], 0x0
cmp r14d, edx
jnz 0x7fab193a6ec0
mov rbx, qword ptr [rbx+0x68]
test rbx, rbx
jnz 0x7fab193a6ed3
test ebp, ebp
jz 0x7fab193a6fe4
mov rax, qword ptr [rbx+0xd8]
mov esi, 0xffffffff
mov rdi, rbx
call qword ptr [rax+0x18]
test dword ptr [rdi], 0x1000
mov rbx, rdi
mov r12, rsi
jnz 0x7fab193a5430
mov rax, qword ptr [rdi+0x10]
mov rsi, qword ptr [rdi+0x20]
cmp rax, rsi
jz 0x7fab193a53c9
mov rcx, qword ptr [rdi+0xd8]
sub rsi, rax
mov edx, 0x1
call qword ptr [rcx+0x80]
mov rax, qword ptr [rbx+0xd8]
mov rdx, rbp
mov rsi, r12
mov rdi, rbx
call qword ptr [rax+0x78]
push r13
mov r13, rdx
push r12
mov r12, rdi
push rbp
push rbx
sub rsp, 0x8
test rdx, rdx
jle 0x7fab193a3f48
mov rbp, rsi
mov rbx, rdx
jmp 0x7fab193a3eeb
test byte ptr [r12+0x74], 0x2
mov edi, dword ptr [r12+0x70]
mov rdx, rbx
mov rsi, rbp
jnz 0x7fab193a3f4c
call 0x7fab19416700
cmp dword ptr [rip+0x2d896d], 0x0
jnz 0x7fab19416719
mov eax, 0x1
syscall 
cmp rax, 0xfffffffffffff001
jnb 0x7fab19416749
ret 
test rax, rax
jns 0x7fab193a3ee0
or dword ptr [r12], 0x20
mov rax, r13
sub rax, rbx
mov rdx, qword ptr [r12+0x90]
test rdx, rdx
js 0x7fab193a3f2b
add rdx, rax
mov qword ptr [r12+0x90], rdx
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
ret 
sub rbx, rax
add rbp, rax
test rbx, rbx
jle 0x7fab193a3f40
test byte ptr [r12+0x74], 0x2
mov edi, dword ptr [r12+0x70]
mov rdx, rbx
mov rsi, rbp
jnz 0x7fab193a3f4c
call 0x7fab19416700
mov rax, r13
sub rax, rbx
jmp 0x7fab193a3f13
mov rdx, qword ptr [r12+0x90]
test rdx, rdx
js 0x7fab193a3f2b
add rdx, rax
mov qword ptr [r12+0x90], rdx
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
ret 
add rsp, 0x8
pop rbx
pop rbp
pop r12
pop r13
ret 
mov r13, rax
movzx eax, word ptr [rbx+0x80]
test ax, ax
jz 0x7fab193a53f0
test r13, r13
jnz 0x7fab193a5450
mov eax, dword ptr [rbx+0xc0]
mov rdx, qword ptr [rbx+0x38]
test eax, eax
mov qword ptr [rbx+0x18], rdx
mov qword ptr [rbx+0x8], rdx
mov qword ptr [rbx+0x10], rdx
mov qword ptr [rbx+0x28], rdx
mov qword ptr [rbx+0x20], rdx
jle 0x7fab193a5440
mov eax, dword ptr [rbx+0xc0]
mov rdx, qword ptr [rbx+0x38]
test eax, eax
mov qword ptr [rbx+0x18], rdx
mov qword ptr [rbx+0x8], rdx
mov qword ptr [rbx+0x10], rdx
mov qword ptr [rbx+0x28], rdx
mov qword ptr [rbx+0x20], rdx
jle 0x7fab193a5440
mov rdx, qword ptr [rbx+0x40]
xor eax, eax
cmp rbp, r13
mov qword ptr [rbx+0x30], rdx
setnz al
add rsp, 0x8
pop rbx
pop rbp
pop r12
neg eax
pop r13
ret 
test dword ptr [rbx], 0x202
jnz 0x7fab193a5416
jmp 0x7fab193a5412
xor eax, eax
cmp rbp, r13
mov qword ptr [rbx+0x30], rdx
setnz al
add rsp, 0x8
pop rbx
pop rbp
pop r12
neg eax
pop r13
ret 
cmp eax, 0xffffffff
mov eax, 0xffffffff
cmovz r15d, eax
test ebp, ebp
jz 0x7fab193a6fb0
test dword ptr [rbx], 0x8000
jnz 0x7fab193a6fb0
mov rdx, qword ptr [rbx+0x88]
sub dword ptr [rdx+0x4], 0x1
jnz 0x7fab193a6fb0
test r13d, r13d
jz 0x7fab193a7004
mov rax, qword ptr [rip+0x348048]
mov rdi, rsp
xor esi, esi
ror rax, 0x11
xor rax, qword ptr fs:[0x30]
call rax
add rsp, 0x28
mov eax, r15d
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret 
mov rbx, qword ptr [rip+0x3430df]
mov r12d, eax
test rbx, rbx
jz 0x7fab193a7187
nop dword ptr [rax], eax
mov edx, dword ptr [rbx]
test dl, 0x2
jnz 0x7fab193a7170
and edx, 0x1008
cmp edx, 0x8
jz 0x7fab193a7170
mov dword ptr [rbx+0xc0], 0xffffffff
mov rbx, qword ptr [rbx+0x68]
test rbx, rbx
jnz 0x7fab193a70d0
add rsp, 0x8
mov eax, r12d
pop rbx
pop rbp
pop r12
pop r13
ret 
mov edx, dword ptr [rbx]
test dl, 0x2
jnz 0x7fab193a7170
and edx, 0x1008
cmp edx, 0x8
jz 0x7fab193a7170
mov eax, dword ptr [rbx+0xc0]
test eax, eax
jz 0x7fab193a7170
xor r13d, r13d
mov rdx, qword ptr [rbx+0x88]
test rdx, rdx
jz 0x7fab193a7143
cmp rbp, qword ptr [rdx+0x8]
jz 0x7fab193a7238
xor eax, eax
mov esi, 0x1
cmp dword ptr [rip+0x347f59], 0x0
jz 0x7fab193a7123
cmpxchg dword ptr [rdx], esi
test eax, eax
jnz 0x7fab193a7198
mov rax, qword ptr [rbx+0x88]
mov qword ptr [rax+0x8], rbp
mov rax, qword ptr [rbx+0x88]
mov dword ptr [rax+0x4], 0x1
cmp byte ptr [rip+0x344846], 0x0
jnz 0x7fab193a7152
mov eax, dword ptr [rbx]
test al, 0x1
jz 0x7fab193a71b0
or eax, 0x1
mov rdx, qword ptr [rbx+0x38]
mov dword ptr [rbx], eax
mov rax, qword ptr [rip+0x3447c0]
mov qword ptr [rip+0x3447b9], rbx
mov qword ptr [rbx+0xb0], rdx
mov qword ptr [rbx+0xa8], rax
mov rax, qword ptr [rbx+0x40]
sub rax, rdx
mov qword ptr [rbx+0xb8], rax
jmp 0x7fab193a7152
mov rax, qword ptr [rbx+0xd8]
xor edx, edx
xor esi, esi
mov rdi, rbx
call qword ptr [rax+0x58]
push rbx
mov rbx, rdi
call 0x7fab193a6970
push r12
mov r12, rdx
push rbp
mov rbp, rsi
push rbx
mov rax, qword ptr [rdi+0xd8]
mov rbx, rdi
call qword ptr [rax+0x60]
push rbx
mov rdx, qword ptr [rdi+0x28]
mov rbx, rdi
mov rsi, qword ptr [rdi+0x20]
cmp rdx, rsi
jbe 0x7fab193a373f
mov eax, dword ptr [rdi+0xc0]
test eax, eax
jle 0x7fab193a3788
mov rax, qword ptr [rdi+0xa0]
mov rsi, qword ptr [rax+0x18]
mov rdx, qword ptr [rax+0x20]
sub rdx, rsi
sar rdx, 0x2
call 0x7fab193a19f0
mov rsi, qword ptr [rbx+0x8]
sub rsi, qword ptr [rbx+0x10]
jnz 0x7fab193a3760
mov qword ptr [rbx+0x90], 0xffffffffffffffff
xor eax, eax
pop rbx
ret 
cmp eax, 0xffffffff
jz 0x7fab193a6a80
mov edx, dword ptr [rbx]
test rbp, rbp
mov eax, edx
jz 0x7fab193a699e
test r12, r12
jnz 0x7fab193a6a08
mov rdi, qword ptr [rbx+0x38]
or eax, 0x2
lea rbp, ptr [rbx+0x84]
mov dword ptr [rbx], eax
lea r12, ptr [rbx+0x83]
test rdi, rdi
jz 0x7fab193a69bf
and edx, 0x1
jz 0x7fab193a6a30
or eax, 0x1
mov qword ptr [rbx+0x38], r12
mov qword ptr [rbx+0x40], rbp
mov dword ptr [rbx], eax
mov qword ptr [rbx+0x30], 0x0
mov qword ptr [rbx+0x28], 0x0
mov rax, rbx
mov qword ptr [rbx+0x20], 0x0
mov qword ptr [rbx+0x10], 0x0
mov qword ptr [rbx+0x8], 0x0
mov qword ptr [rbx+0x18], 0x0
pop rbx
pop rbp
pop r12
ret 
test rax, rax
jz 0x7fab193a37fd
mov rax, qword ptr [rbx+0x38]
mov qword ptr [rbx+0x30], rax
mov qword ptr [rbx+0x28], rax
mov qword ptr [rbx+0x20], rax
mov qword ptr [rbx+0x18], rax
mov qword ptr [rbx+0x8], rax
mov qword ptr [rbx+0x10], rax
mov rax, rbx
pop rbx
ret 
cmp r13d, 0x2
jnz 0x7fab193a71f0
nop dword ptr [rax], eax
mov dword ptr [rbx+0xc0], 0xffffffff
mov rbx, qword ptr [rbx+0x68]
test rbx, rbx
jnz 0x7fab193a70d0
add rsp, 0x8
mov eax, r12d
pop rbx
pop rbp
pop r12
pop r13
ret 
mov rdx, qword ptr [rbx+0x88]
test rdx, rdx
jz 0x7fab193a7170
sub dword ptr [rdx+0x4], 0x1
jnz 0x7fab193a7170
mov qword ptr [rdx+0x8], 0x0
cmp dword ptr [rip+0x347e5b], 0x0
jz 0x7fab193a7226
dec dword ptr [rdx]
jnz 0x7fab193a7ad6
jmp 0x7fab193a7170
add rbp, 0x8
cmp rbp, r12
jb 0x7fab19367158
mov edi, ebx
call 0x7fab193ec180
movsxd rdx, edi
mov r10, qword ptr [rip+0x2fccde]
mov r9d, 0xe7
mov r8d, 0x3c
jmp 0x7fab193ec1b1
mov rdi, rdx
mov eax, r9d
syscall 
